<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="abhishekswain.me/feed.xml" rel="self" type="application/atom+xml" /><link href="abhishekswain.me/" rel="alternate" type="text/html" /><updated>2020-07-28T12:24:51-05:00</updated><id>abhishekswain.me/feed.xml</id><title type="html">Listening To Life</title><subtitle>Pleasure of finding things out!</subtitle><entry><title type="html">My introduction to Julia!</title><link href="abhishekswain.me/machine%20learning/maths/2020/07/28/Logistic_regression.html" rel="alternate" type="text/html" title="My introduction to Julia!" /><published>2020-07-28T00:00:00-05:00</published><updated>2020-07-28T00:00:00-05:00</updated><id>abhishekswain.me/machine%20learning/maths/2020/07/28/Logistic_regression</id><content type="html" xml:base="abhishekswain.me/machine%20learning/maths/2020/07/28/Logistic_regression.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-28-Logistic_regression.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Hey! This post is about my introduction to the world of Julia. I took this challenge of learning Julia and making something in it. Since Julia is pretty similar to Python, I made a hypothesis. That is can I learn julia in a day and be up and running with something in two days? That was the challenge I took. Believe me or not but I did do it. Actually, if you're from a python background and have some expereince in it, then learning Julia is going to be fun and breezy for you. So, here I am after my two day rendezvous with Julia for two days.&lt;/p&gt;
&lt;p&gt;So, what I used to learn Julia?
I used resources from &lt;a href=&quot;https://juliaacademy.com/&quot;&gt;julia academy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What did I implement?
I decided to go for one the resources I learnt deep learning from: &lt;a href=&quot;https://www.coursera.org/learn/neural-networks-deep-learning/home/welcome&quot;&gt;Neural Networks and Deep Learning&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Impemented the Julia version of &lt;a href=&quot;https://www.coursera.org/learn/neural-networks-deep-learning/notebook/zAgPl/logistic-regression-with-a-neural-network-mindset&quot;&gt;Week 2 assignment&lt;/a&gt; of &lt;a href=&quot;https://www.coursera.org/learn/neural-networks-deep-learning/home/welcome&quot;&gt;Neural Networks and Deep Learning&lt;/a&gt; course.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's not exactly that actually, I have applied the concepts to banknote authentication.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Data is from UCI machine learning repository&lt;/li&gt;
&lt;li&gt;Training is done, inference is on the way!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope it's useful to you. It was a lot of fun and I am in love with Julia ❤&lt;/p&gt;
&lt;p&gt;Let's begin!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelimitedFiles&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Plots&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelimitedFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readdlm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Abhishek Swain&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Desktop&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Julia_ML&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data_banknote_authentication.txt&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;See the first 5 rows of the given array&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;head (generic function with 1 method)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;5×5 Array{Float64,2}:
 3.6216    8.6661  -2.8073  -0.44699  0.0
 4.5459    8.1674  -2.4586  -1.4621   0.0
 3.866    -2.6383   1.9242   0.10645  0.0
 3.4566    9.5228  -4.0112  -3.5944   0.0
 0.32924  -4.4552   4.5718  -0.9888   0.0&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Splitting-into-train-&amp;amp;-test-set&quot;&gt;Splitting into train &amp;amp; test set&lt;a class=&quot;anchor-link&quot; href=&quot;#Splitting-into-train-&amp;amp;-test-set&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;splits the data into train and test set&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;train_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;test_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,:]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;train_test_split (generic function with 2 methods)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Mathematical-expression-of-the-algorithm:&quot;&gt;&lt;strong&gt;Mathematical expression of the algorithm&lt;/strong&gt;:&lt;a class=&quot;anchor-link&quot; href=&quot;#Mathematical-expression-of-the-algorithm:&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;For one example $x^{(i)}$:

$$z^{(i)} = w^T x^{(i)} + b \tag{1}$$

$$\hat{y}^{(i)} = a^{(i)} = sigmoid(z^{(i)})\tag{2}$$ 

$$ \mathcal{L}(a^{(i)}, y^{(i)}) =  - y^{(i)}  \log(a^{(i)}) - (1-y^{(i)} )  \log(1-a^{(i)})\tag{3}$$
&lt;/p&gt;
&lt;p&gt;The cost is then computed by summing over all training examples:

$$ J = \frac{1}{m} \sum_{i=1}^m \mathcal{L}(a^{(i)}, y^{(i)})\tag{6}$$
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Sigmoid&quot;&gt;Sigmoid&lt;a class=&quot;anchor-link&quot; href=&quot;#Sigmoid&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Applies sigmoid to the vector&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;σ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Compute the sigmoid of z&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;σ (generic function with 1 method)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Random-initialization&quot;&gt;Random initialization&lt;a class=&quot;anchor-link&quot; href=&quot;#Random-initialization&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Initialize &lt;code&gt;w&lt;/code&gt; &amp;amp; &lt;code&gt;b&lt;/code&gt; with with random values between (0, 1)&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    This function creates a vector of zeros of shape (dim, 1) for w and initializes b to 0.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Argument:&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    dim -- size of the w vector we want (or number of parameters in this case)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Returns:&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    w -- initialized vector of shape (dim, 1)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    b -- initialized scalar (corresponds to the bias)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;initialize (generic function with 1 method)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Notation&quot;&gt;Notation&lt;a class=&quot;anchor-link&quot; href=&quot;#Notation&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;According to our notation, &lt;code&gt;X&lt;/code&gt; is of shape &lt;em&gt;(num_features, num_examples)&lt;/em&gt;, in our case that is (4, 343). So, we need to reshape our &lt;code&gt;X&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt; is the number of tranining examples.&lt;/li&gt;
&lt;li&gt;Similarly, &lt;code&gt;y&lt;/code&gt; is a row vector or as Julia likes to call it &lt;code&gt;Array{Float64, 2}&lt;/code&gt; of shape &lt;em&gt;(1, num_examples)&lt;/em&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;(4, 343)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;343&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;1×343 Array{Float64,2}:
 0.0  1.0  1.0  0.0  0.0  1.0  0.0  0.0  …  0.0  1.0  0.0  1.0  1.0  0.0  1.0&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;undef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;343&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Forward-and-Backward-propagation&quot;&gt;Forward and Backward propagation&lt;a class=&quot;anchor-link&quot; href=&quot;#Forward-and-Backward-propagation&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;propagate&lt;/code&gt; function is the function at the heart of the algorithm. This does the &lt;strong&gt;forward prop -&amp;gt; calculate cost -&amp;gt; back-prop&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Forward Propagation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You get X&lt;/li&gt;
&lt;li&gt;You compute $A = \sigma(w^T X + b) = (a^{(1)}, a^{(2)}, ..., a^{(m-1)}, a^{(m)})$&lt;/li&gt;
&lt;li&gt;You calculate the cost function: $J = -\frac{1}{m}\sum_{i=1}^{m}y^{(i)}\log(a^{(i)})+(1-y^{(i)})\log(1-a^{(i)})$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are the two formulas you will be using:&lt;/p&gt;
&lt;p&gt;
$$ \frac{\partial J}{\partial w} = \frac{1}{m}X(A-Y)^T\tag{7}$$


$$ \frac{\partial J}{\partial b} = \frac{1}{m} \sum_{i=1}^m (a^{(i)}-y^{(i)})\tag{8}$$
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propagate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Implement the cost function and its gradient for the propagation explained above&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;    Arguments:&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    w -- weights, a numpy array of size (num_px * num_px * 3, 1)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    b -- bias, a scalar&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    X -- data of size (num_px * num_px * 3, number of examples)&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Y -- true &amp;quot;label&amp;quot; vector (containing 0 if non-cat, 1 if cat) of size (1, number of examples)&lt;/span&gt;

&lt;span class=&quot;sd&quot;&gt;    Return:&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    cost -- negative log-likelihood cost for logistic regression&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    dw -- gradient of the loss with respect to w, thus same shape as w&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    db -- gradient of the loss with respect to b, thus same shape as b&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Tips:&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    - Write your code step by step for the propagation&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# Forward prop&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;X .+ b&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;σ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# Compute cost&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;𝒥&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;𝒥&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;# Back-prop&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        
    &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;𝒥&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;propagate (generic function with 1 method)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;([0.2004128179916913; 0.7269986373814084; 0.7116663451002054; 0.6867182335637176], 0)&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Model&quot;&gt;Model&lt;a class=&quot;anchor-link&quot; href=&quot;#Model&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Combine all functions to train the model
&lt;br /&gt;
Learning rate: $\alpha = 0.09$, iterations(epochs): 150&lt;/p&gt;
&lt;p&gt;Here is something I love about Julia. It's that you can directly use symbols as variables 😍. Doesn't it look awesome?&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;details class=&quot;description&quot;&gt;
      &lt;summary class=&quot;btn btn-sm&quot; data-open=&quot;Hide Code&quot; data-close=&quot;Show Code&quot;&gt;&lt;/summary&gt;
        &lt;p&gt;&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#collapse-hide&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;α&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.009&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;undef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;𝒥&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propagate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;𝒥&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;α&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;α&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cost after iteration $i: $𝒥&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;
    
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
    &lt;/details&gt;
&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;cost after iteration 1: 2.3740023073890866
cost after iteration 2: 2.3462116695406623
cost after iteration 3: 2.318509301558028
cost after iteration 4: 2.2908975633354554
cost after iteration 5: 2.2633788921961275
cost after iteration 6: 2.235955804801441
cost after iteration 7: 2.2086308999424062
cost after iteration 8: 2.1814068611217134
cost after iteration 9: 2.154286458914731
cost after iteration 10: 2.127272553920777
cost after iteration 11: 2.1003680993236715
cost after iteration 12: 2.0735761437103326
cost after iteration 13: 2.0468998340349147
cost after iteration 14: 2.02034241843537
cost after iteration 15: 1.9939072492856498
cost after iteration 16: 1.9675977862410752
cost after iteration 17: 1.9414175993047091
cost after iteration 18: 1.9153703719657098
cost after iteration 19: 1.889459904350958
cost after iteration 20: 1.8636901163469042
cost after iteration 21: 1.8380650507400902
cost after iteration 22: 1.8125888762724895
cost after iteration 23: 1.7872658906347527
cost after iteration 24: 1.7621005233341813
cost after iteration 25: 1.7370973384132224
cost after iteration 26: 1.712261036954804
cost after iteration 27: 1.687596459348754
cost after iteration 28: 1.6631085872491747
cost after iteration 29: 1.6388025451803738
cost after iteration 30: 1.6146836017227515
cost after iteration 31: 1.590757170225785
cost after iteration 32: 1.567028808982005
cost after iteration 33: 1.5435042207992091
cost after iteration 34: 1.5201892519078846
cost after iteration 35: 1.4970898901396426
cost after iteration 36: 1.4742122623148985
cost after iteration 37: 1.4515626307794567
cost after iteration 38: 1.4291473890317374
cost after iteration 39: 1.4069730563873706
cost after iteration 40: 1.3850462716301533
cost after iteration 41: 1.3633737856049706
cost after iteration 42: 1.3419624527121798
cost after iteration 43: 1.320819221270383
cost after iteration 44: 1.299951122719665
cost after iteration 45: 1.279365259645181
cost after iteration 46: 1.2590687926069641
cost after iteration 47: 1.2390689257689431
cost after iteration 48: 1.219372891326446
cost after iteration 49: 1.1999879327368639
cost after iteration 50: 1.180921286762925
cost after iteration 51: 1.1621801643408496
cost after iteration 52: 1.1437717302868156
cost after iteration 53: 1.1257030818538676
cost after iteration 54: 1.1079812261472688
cost after iteration 55: 1.090613056399182
cost after iteration 56: 1.073605327093288
cost after iteration 57: 1.0569646279166243
cost after iteration 58: 1.040697356500272
cost after iteration 59: 1.024809689893287
cost after iteration 60: 1.00930755469731
cost after iteration 61: 0.9941965957744495
cost after iteration 62: 0.9794821434313243
cost after iteration 63: 0.9651691789807894
cost after iteration 64: 0.9512622985935968
cost after iteration 65: 0.937765675379124
cost after iteration 66: 0.9246830196811211
cost after iteration 67: 0.9120175376445453
cost after iteration 68: 0.8997718882052996
cost after iteration 69: 0.8879481387767842
cost after iteration 70: 0.8765477200543355
cost after iteration 71: 0.8655713805269151
cost after iteration 72: 0.8550191414681693
cost after iteration 73: 0.8448902533664484
cost after iteration 74: 0.8351831549332133
cost after iteration 75: 0.8258954359868429
cost after iteration 76: 0.8170238056283772
cost after iteration 77: 0.8085640671913646
cost after iteration 78: 0.8005111014454732
cost after iteration 79: 0.7928588594516951
cost after iteration 80: 0.7856003662995654
cost after iteration 81: 0.7787277367034907
cost after iteration 82: 0.7722322031028225
cost after iteration 83: 0.766104156512534
cost after iteration 84: 0.7603331999287829
cost after iteration 85: 0.7549082136319242
cost after iteration 86: 0.7498174312775551
cost after iteration 87: 0.7450485252532479
cost after iteration 88: 0.7405886994319086
cost after iteration 89: 0.7364247871943844
cost after iteration 90: 0.7325433524392283
cost after iteration 91: 0.7289307912533028
cost after iteration 92: 0.7255734319813323
cost after iteration 93: 0.722457631595763
cost after iteration 94: 0.7195698665139034
cost after iteration 95: 0.716896816316328
cost after iteration 96: 0.7144254391657412
cost after iteration 97: 0.7121430380857576
cost after iteration 98: 0.7100373176131921
cost after iteration 99: 0.7080964306677431
cost after iteration 100: 0.7063090157759134
cost after iteration 101: 0.7046642250328173
cost after iteration 102: 0.7031517433816896
cost after iteration 103: 0.701761799935867
cost after iteration 104: 0.700485172164231
cost after iteration 105: 0.6993131838133823
cost after iteration 106: 0.6982376974542951
cost after iteration 107: 0.6972511025247742
cost after iteration 108: 0.6963462996986156
cost after iteration 109: 0.6955166823545526
cost after iteration 110: 0.6947561158487165
cost after iteration 111: 0.6940589152185364
cost after iteration 112: 0.6934198218678441
cost after iteration 113: 0.6928339797057265
cost after iteration 114: 0.6922969111377242
cost after iteration 115: 0.6918044932390484
cost after iteration 116: 0.6913529343765882
cost after iteration 117: 0.690938751490183
cost after iteration 118: 0.6905587481941259
cost after iteration 119: 0.6902099938169665
cost after iteration 120: 0.6898898034611582
cost after iteration 121: 0.6895957191333673
cost after iteration 122: 0.6893254919709155
cost after iteration 123: 0.6890770655691838
cost after iteration 124: 0.6888485603983463
cost after iteration 125: 0.6886382592849551
cost after iteration 126: 0.6884445939241216
cost after iteration 127: 0.688266132380874
cost after iteration 128: 0.6881015675342764
cost after iteration 129: 0.6879497064146782
cost after iteration 130: 0.6878094603827019
cost after iteration 131: 0.6876798360979788
cost after iteration 132: 0.6875599272259485
cost after iteration 133: 0.6874489068320602
cost after iteration 134: 0.6873460204142585
cost after iteration 135: 0.6872505795265694
cost after iteration 136: 0.6871619559488045
cost after iteration 137: 0.6870795763597692
cost after iteration 138: 0.6870029174738363
cost after iteration 139: 0.6869315016032344
cost after iteration 140: 0.6868648926109056
cost after iteration 141: 0.6868026922212128
cost after iteration 142: 0.6867445366581466
cost after iteration 143: 0.6866900935829536
cost after iteration 144: 0.6866390593052681
cost after iteration 145: 0.6865911562438682
cost after iteration 146: 0.6865461306151157
cost after iteration 147: 0.6865037503289286
cost after iteration 148: 0.6864638030738268
cost after iteration 149: 0.6864260945741462
cost after iteration 150: 0.6863904470039756
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Plotting&quot;&gt;Plotting&lt;a class=&quot;anchor-link&quot; href=&quot;#Plotting&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;For plotting we use the &lt;code&gt;Plots&lt;/code&gt; package.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# backend&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Cost v/s iteration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;negative log-likelihood&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;iteration&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cost&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;


&lt;div class=&quot;output_svg output_subarea output_execute_result&quot;&gt;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; width=&quot;600&quot; height=&quot;400&quot; viewBox=&quot;0 0 2400 1600&quot;&gt;
&lt;defs&gt;
  &lt;clipPath id=&quot;clip000&quot;&gt;
    &lt;rect x=&quot;0&quot; y=&quot;0&quot; width=&quot;2400&quot; height=&quot;1600&quot; /&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;
M0 1600 L2400 1600 L2400 0 L0 0  Z
  &quot; fill=&quot;#ffffff&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;
&lt;defs&gt;
  &lt;clipPath id=&quot;clip001&quot;&gt;
    &lt;rect x=&quot;480&quot; y=&quot;0&quot; width=&quot;1681&quot; height=&quot;1600&quot; /&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;
M236.232 1423.18 L2352.76 1423.18 L2352.76 123.472 L236.232 123.472  Z
  &quot; fill=&quot;#ffffff&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;
&lt;defs&gt;
  &lt;clipPath id=&quot;clip002&quot;&gt;
    &lt;rect x=&quot;236&quot; y=&quot;123&quot; width=&quot;2118&quot; height=&quot;1301&quot; /&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  282.733,1423.18 282.733,123.472 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  952.773,1423.18 952.773,123.472 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  1622.81,1423.18 1622.81,123.472 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  2292.85,1423.18 2292.85,123.472 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  236.232,1340.18 2352.76,1340.18 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  236.232,1158.54 2352.76,1158.54 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  236.232,976.903 2352.76,976.903 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  236.232,795.265 2352.76,795.265 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  236.232,613.627 2352.76,613.627 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  236.232,431.989 2352.76,431.989 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&quot; points=&quot;
  236.232,250.351 2352.76,250.351 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,1423.18 2352.76,1423.18 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,1423.18 236.232,123.472 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  282.733,1423.18 282.733,1407.58 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  952.773,1423.18 952.773,1407.58 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  1622.81,1423.18 1622.81,1407.58 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  2292.85,1423.18 2292.85,1407.58 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,1340.18 261.63,1340.18 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,1158.54 261.63,1158.54 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,976.903 261.63,976.903 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,795.265 261.63,795.265 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,613.627 261.63,613.627 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,431.989 261.63,431.989 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  236.232,250.351 261.63,250.351 
  &quot; /&gt;
&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M282.733 1445.17 Q279.122 1445.17 277.293 1448.74 Q275.487 1452.28 275.487 1459.41 Q275.487 1466.51 277.293 1470.08 Q279.122 1473.62 282.733 1473.62 Q286.367 1473.62 288.173 1470.08 Q290.001 1466.51 290.001 1459.41 Q290.001 1452.28 288.173 1448.74 Q286.367 1445.17 282.733 1445.17 M282.733 1441.47 Q288.543 1441.47 291.598 1446.07 Q294.677 1450.66 294.677 1459.41 Q294.677 1468.13 291.598 1472.74 Q288.543 1477.32 282.733 1477.32 Q276.923 1477.32 273.844 1472.74 Q270.788 1468.13 270.788 1459.41 Q270.788 1450.66 273.844 1446.07 Q276.923 1441.47 282.733 1441.47 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M929.544 1442.09 L947.901 1442.09 L947.901 1446.03 L933.827 1446.03 L933.827 1454.5 Q934.845 1454.15 935.864 1453.99 Q936.882 1453.8 937.901 1453.8 Q943.688 1453.8 947.067 1456.98 Q950.447 1460.15 950.447 1465.56 Q950.447 1471.14 946.975 1474.24 Q943.502 1477.32 937.183 1477.32 Q935.007 1477.32 932.739 1476.95 Q930.493 1476.58 928.086 1475.84 L928.086 1471.14 Q930.169 1472.28 932.391 1472.83 Q934.614 1473.39 937.09 1473.39 Q941.095 1473.39 943.433 1471.28 Q945.771 1469.18 945.771 1465.56 Q945.771 1461.95 943.433 1459.85 Q941.095 1457.74 937.09 1457.74 Q935.215 1457.74 933.34 1458.16 Q931.489 1458.57 929.544 1459.45 L929.544 1442.09 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M965.516 1445.17 Q961.905 1445.17 960.076 1448.74 Q958.271 1452.28 958.271 1459.41 Q958.271 1466.51 960.076 1470.08 Q961.905 1473.62 965.516 1473.62 Q969.15 1473.62 970.956 1470.08 Q972.785 1466.51 972.785 1459.41 Q972.785 1452.28 970.956 1448.74 Q969.15 1445.17 965.516 1445.17 M965.516 1441.47 Q971.326 1441.47 974.382 1446.07 Q977.461 1450.66 977.461 1459.41 Q977.461 1468.13 974.382 1472.74 Q971.326 1477.32 965.516 1477.32 Q959.706 1477.32 956.627 1472.74 Q953.572 1468.13 953.572 1459.41 Q953.572 1450.66 956.627 1446.07 Q959.706 1441.47 965.516 1441.47 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1586.18 1472.72 L1593.82 1472.72 L1593.82 1446.35 L1585.51 1448.02 L1585.51 1443.76 L1593.77 1442.09 L1598.45 1442.09 L1598.45 1472.72 L1606.09 1472.72 L1606.09 1476.65 L1586.18 1476.65 L1586.18 1472.72 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1621.16 1445.17 Q1617.55 1445.17 1615.72 1448.74 Q1613.91 1452.28 1613.91 1459.41 Q1613.91 1466.51 1615.72 1470.08 Q1617.55 1473.62 1621.16 1473.62 Q1624.79 1473.62 1626.6 1470.08 Q1628.43 1466.51 1628.43 1459.41 Q1628.43 1452.28 1626.6 1448.74 Q1624.79 1445.17 1621.16 1445.17 M1621.16 1441.47 Q1626.97 1441.47 1630.02 1446.07 Q1633.1 1450.66 1633.1 1459.41 Q1633.1 1468.13 1630.02 1472.74 Q1626.97 1477.32 1621.16 1477.32 Q1615.35 1477.32 1612.27 1472.74 Q1609.21 1468.13 1609.21 1459.41 Q1609.21 1450.66 1612.27 1446.07 Q1615.35 1441.47 1621.16 1441.47 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1648.17 1445.17 Q1644.56 1445.17 1642.73 1448.74 Q1640.93 1452.28 1640.93 1459.41 Q1640.93 1466.51 1642.73 1470.08 Q1644.56 1473.62 1648.17 1473.62 Q1651.81 1473.62 1653.61 1470.08 Q1655.44 1466.51 1655.44 1459.41 Q1655.44 1452.28 1653.61 1448.74 Q1651.81 1445.17 1648.17 1445.17 M1648.17 1441.47 Q1653.98 1441.47 1657.04 1446.07 Q1660.12 1450.66 1660.12 1459.41 Q1660.12 1468.13 1657.04 1472.74 Q1653.98 1477.32 1648.17 1477.32 Q1642.36 1477.32 1639.28 1472.74 Q1636.23 1468.13 1636.23 1459.41 Q1636.23 1450.66 1639.28 1446.07 Q1642.36 1441.47 1648.17 1441.47 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2256.72 1472.72 L2264.36 1472.72 L2264.36 1446.35 L2256.05 1448.02 L2256.05 1443.76 L2264.31 1442.09 L2268.99 1442.09 L2268.99 1472.72 L2276.63 1472.72 L2276.63 1476.65 L2256.72 1476.65 L2256.72 1472.72 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2281.74 1442.09 L2300.1 1442.09 L2300.1 1446.03 L2286.03 1446.03 L2286.03 1454.5 Q2287.04 1454.15 2288.06 1453.99 Q2289.08 1453.8 2290.1 1453.8 Q2295.89 1453.8 2299.27 1456.98 Q2302.65 1460.15 2302.65 1465.56 Q2302.65 1471.14 2299.17 1474.24 Q2295.7 1477.32 2289.38 1477.32 Q2287.21 1477.32 2284.94 1476.95 Q2282.69 1476.58 2280.28 1475.84 L2280.28 1471.14 Q2282.37 1472.28 2284.59 1472.83 Q2286.81 1473.39 2289.29 1473.39 Q2293.29 1473.39 2295.63 1471.28 Q2297.97 1469.18 2297.97 1465.56 Q2297.97 1461.95 2295.63 1459.85 Q2293.29 1457.74 2289.29 1457.74 Q2287.41 1457.74 2285.54 1458.16 Q2283.69 1458.57 2281.74 1459.45 L2281.74 1442.09 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2317.72 1445.17 Q2314.1 1445.17 2312.28 1448.74 Q2310.47 1452.28 2310.47 1459.41 Q2310.47 1466.51 2312.28 1470.08 Q2314.1 1473.62 2317.72 1473.62 Q2321.35 1473.62 2323.16 1470.08 Q2324.98 1466.51 2324.98 1459.41 Q2324.98 1452.28 2323.16 1448.74 Q2321.35 1445.17 2317.72 1445.17 M2317.72 1441.47 Q2323.53 1441.47 2326.58 1446.07 Q2329.66 1450.66 2329.66 1459.41 Q2329.66 1468.13 2326.58 1472.74 Q2323.53 1477.32 2317.72 1477.32 Q2311.91 1477.32 2308.83 1472.74 Q2305.77 1468.13 2305.77 1459.41 Q2305.77 1450.66 2308.83 1446.07 Q2311.91 1441.47 2317.72 1441.47 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M138.205 1325.98 Q134.593 1325.98 132.765 1329.54 Q130.959 1333.09 130.959 1340.21 Q130.959 1347.32 132.765 1350.89 Q134.593 1354.43 138.205 1354.43 Q141.839 1354.43 143.644 1350.89 Q145.473 1347.32 145.473 1340.21 Q145.473 1333.09 143.644 1329.54 Q141.839 1325.98 138.205 1325.98 M138.205 1322.27 Q144.015 1322.27 147.07 1326.88 Q150.149 1331.46 150.149 1340.21 Q150.149 1348.94 147.07 1353.55 Q144.015 1358.13 138.205 1358.13 Q132.394 1358.13 129.316 1353.55 Q126.26 1348.94 126.26 1340.21 Q126.26 1331.46 129.316 1326.88 Q132.394 1322.27 138.205 1322.27 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M155.218 1351.58 L160.103 1351.58 L160.103 1357.46 L155.218 1357.46 L155.218 1351.58 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M163.991 1322.9 L186.214 1322.9 L186.214 1324.89 L173.667 1357.46 L168.783 1357.46 L180.589 1326.84 L163.991 1326.84 L163.991 1322.9 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M191.329 1322.9 L209.686 1322.9 L209.686 1326.84 L195.612 1326.84 L195.612 1335.31 Q196.63 1334.96 197.649 1334.8 Q198.667 1334.61 199.686 1334.61 Q205.473 1334.61 208.852 1337.78 Q212.232 1340.96 212.232 1346.37 Q212.232 1351.95 208.76 1355.05 Q205.288 1358.13 198.968 1358.13 Q196.792 1358.13 194.524 1357.76 Q192.278 1357.39 189.871 1356.65 L189.871 1351.95 Q191.954 1353.08 194.176 1353.64 Q196.399 1354.2 198.876 1354.2 Q202.88 1354.2 205.218 1352.09 Q207.556 1349.98 207.556 1346.37 Q207.556 1342.76 205.218 1340.65 Q202.88 1338.55 198.876 1338.55 Q197.001 1338.55 195.126 1338.96 Q193.274 1339.38 191.329 1340.26 L191.329 1322.9 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M128.343 1171.89 L135.982 1171.89 L135.982 1145.52 L127.672 1147.19 L127.672 1142.93 L135.936 1141.26 L140.612 1141.26 L140.612 1171.89 L148.251 1171.89 L148.251 1175.82 L128.343 1175.82 L128.343 1171.89 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M153.32 1169.94 L158.204 1169.94 L158.204 1175.82 L153.32 1175.82 L153.32 1169.94 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M173.274 1144.34 Q169.663 1144.34 167.834 1147.91 Q166.028 1151.45 166.028 1158.58 Q166.028 1165.68 167.834 1169.25 Q169.663 1172.79 173.274 1172.79 Q176.908 1172.79 178.714 1169.25 Q180.542 1165.68 180.542 1158.58 Q180.542 1151.45 178.714 1147.91 Q176.908 1144.34 173.274 1144.34 M173.274 1140.64 Q179.084 1140.64 182.139 1145.24 Q185.218 1149.83 185.218 1158.58 Q185.218 1167.3 182.139 1171.91 Q179.084 1176.49 173.274 1176.49 Q167.464 1176.49 164.385 1171.91 Q161.329 1167.3 161.329 1158.58 Q161.329 1149.83 164.385 1145.24 Q167.464 1140.64 173.274 1140.64 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M200.288 1144.34 Q196.676 1144.34 194.848 1147.91 Q193.042 1151.45 193.042 1158.58 Q193.042 1165.68 194.848 1169.25 Q196.676 1172.79 200.288 1172.79 Q203.922 1172.79 205.727 1169.25 Q207.556 1165.68 207.556 1158.58 Q207.556 1151.45 205.727 1147.91 Q203.922 1144.34 200.288 1144.34 M200.288 1140.64 Q206.098 1140.64 209.153 1145.24 Q212.232 1149.83 212.232 1158.58 Q212.232 1167.3 209.153 1171.91 Q206.098 1176.49 200.288 1176.49 Q194.477 1176.49 191.399 1171.91 Q188.343 1167.3 188.343 1158.58 Q188.343 1149.83 191.399 1145.24 Q194.477 1140.64 200.288 1140.64 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M130.936 990.248 L138.575 990.248 L138.575 963.883 L130.265 965.549 L130.265 961.29 L138.529 959.623 L143.205 959.623 L143.205 990.248 L150.843 990.248 L150.843 994.183 L130.936 994.183 L130.936 990.248 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M155.913 988.304 L160.797 988.304 L160.797 994.183 L155.913 994.183 L155.913 988.304 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M169.894 990.248 L186.214 990.248 L186.214 994.183 L164.269 994.183 L164.269 990.248 Q166.931 987.494 171.515 982.864 Q176.121 978.211 177.302 976.869 Q179.547 974.346 180.427 972.61 Q181.329 970.85 181.329 969.16 Q181.329 966.406 179.385 964.67 Q177.464 962.934 174.362 962.934 Q172.163 962.934 169.709 963.698 Q167.278 964.461 164.501 966.012 L164.501 961.29 Q167.325 960.156 169.778 959.577 Q172.232 958.998 174.269 958.998 Q179.64 958.998 182.834 961.684 Q186.028 964.369 186.028 968.86 Q186.028 970.989 185.218 972.91 Q184.431 974.809 182.325 977.401 Q181.746 978.072 178.644 981.29 Q175.542 984.484 169.894 990.248 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M191.329 959.623 L209.686 959.623 L209.686 963.559 L195.612 963.559 L195.612 972.031 Q196.63 971.684 197.649 971.522 Q198.667 971.336 199.686 971.336 Q205.473 971.336 208.852 974.508 Q212.232 977.679 212.232 983.096 Q212.232 988.674 208.76 991.776 Q205.288 994.855 198.968 994.855 Q196.792 994.855 194.524 994.484 Q192.278 994.114 189.871 993.373 L189.871 988.674 Q191.954 989.809 194.176 990.364 Q196.399 990.92 198.876 990.92 Q202.88 990.92 205.218 988.813 Q207.556 986.707 207.556 983.096 Q207.556 979.484 205.218 977.378 Q202.88 975.272 198.876 975.272 Q197.001 975.272 195.126 975.688 Q193.274 976.105 191.329 976.985 L191.329 959.623 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M129.339 808.61 L136.978 808.61 L136.978 782.244 L128.668 783.911 L128.668 779.652 L136.931 777.985 L141.607 777.985 L141.607 808.61 L149.246 808.61 L149.246 812.545 L129.339 812.545 L129.339 808.61 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M154.316 806.666 L159.2 806.666 L159.2 812.545 L154.316 812.545 L154.316 806.666 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M164.316 777.985 L182.672 777.985 L182.672 781.92 L168.598 781.92 L168.598 790.393 Q169.616 790.045 170.635 789.883 Q171.653 789.698 172.672 789.698 Q178.459 789.698 181.839 792.869 Q185.218 796.041 185.218 801.457 Q185.218 807.036 181.746 810.138 Q178.274 813.217 171.954 813.217 Q169.778 813.217 167.51 812.846 Q165.265 812.476 162.857 811.735 L162.857 807.036 Q164.941 808.17 167.163 808.726 Q169.385 809.281 171.862 809.281 Q175.866 809.281 178.204 807.175 Q180.542 805.068 180.542 801.457 Q180.542 797.846 178.204 795.74 Q175.866 793.633 171.862 793.633 Q169.987 793.633 168.112 794.05 Q166.26 794.467 164.316 795.346 L164.316 777.985 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M200.288 781.064 Q196.676 781.064 194.848 784.629 Q193.042 788.17 193.042 795.3 Q193.042 802.406 194.848 805.971 Q196.676 809.513 200.288 809.513 Q203.922 809.513 205.727 805.971 Q207.556 802.406 207.556 795.3 Q207.556 788.17 205.727 784.629 Q203.922 781.064 200.288 781.064 M200.288 777.36 Q206.098 777.36 209.153 781.967 Q212.232 786.55 212.232 795.3 Q212.232 804.027 209.153 808.633 Q206.098 813.217 200.288 813.217 Q194.477 813.217 191.399 808.633 Q188.343 804.027 188.343 795.3 Q188.343 786.55 191.399 781.967 Q194.477 777.36 200.288 777.36 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M130.242 626.972 L137.88 626.972 L137.88 600.606 L129.57 602.273 L129.57 598.014 L137.834 596.347 L142.51 596.347 L142.51 626.972 L150.149 626.972 L150.149 630.907 L130.242 630.907 L130.242 626.972 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M155.218 625.027 L160.103 625.027 L160.103 630.907 L155.218 630.907 L155.218 625.027 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M163.991 596.347 L186.214 596.347 L186.214 598.338 L173.667 630.907 L168.783 630.907 L180.589 600.282 L163.991 600.282 L163.991 596.347 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M191.329 596.347 L209.686 596.347 L209.686 600.282 L195.612 600.282 L195.612 608.754 Q196.63 608.407 197.649 608.245 Q198.667 608.06 199.686 608.06 Q205.473 608.06 208.852 611.231 Q212.232 614.402 212.232 619.819 Q212.232 625.398 208.76 628.5 Q205.288 631.578 198.968 631.578 Q196.792 631.578 194.524 631.208 Q192.278 630.838 189.871 630.097 L189.871 625.398 Q191.954 626.532 194.176 627.088 Q196.399 627.643 198.876 627.643 Q202.88 627.643 205.218 625.537 Q207.556 623.43 207.556 619.819 Q207.556 616.208 205.218 614.102 Q202.88 611.995 198.876 611.995 Q197.001 611.995 195.126 612.412 Q193.274 612.828 191.329 613.708 L191.329 596.347 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M131.931 445.334 L148.251 445.334 L148.251 449.269 L126.306 449.269 L126.306 445.334 Q128.968 442.579 133.552 437.949 Q138.158 433.297 139.339 431.954 Q141.584 429.431 142.464 427.695 Q143.367 425.936 143.367 424.246 Q143.367 421.491 141.422 419.755 Q139.501 418.019 136.399 418.019 Q134.2 418.019 131.746 418.783 Q129.316 419.547 126.538 421.098 L126.538 416.375 Q129.362 415.241 131.816 414.662 Q134.269 414.084 136.306 414.084 Q141.677 414.084 144.871 416.769 Q148.066 419.454 148.066 423.945 Q148.066 426.074 147.255 427.996 Q146.468 429.894 144.362 432.486 Q143.783 433.158 140.681 436.375 Q137.58 439.57 131.931 445.334 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M153.32 443.389 L158.204 443.389 L158.204 449.269 L153.32 449.269 L153.32 443.389 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M173.274 417.787 Q169.663 417.787 167.834 421.352 Q166.028 424.894 166.028 432.024 Q166.028 439.13 167.834 442.695 Q169.663 446.236 173.274 446.236 Q176.908 446.236 178.714 442.695 Q180.542 439.13 180.542 432.024 Q180.542 424.894 178.714 421.352 Q176.908 417.787 173.274 417.787 M173.274 414.084 Q179.084 414.084 182.139 418.69 Q185.218 423.274 185.218 432.024 Q185.218 440.75 182.139 445.357 Q179.084 449.94 173.274 449.94 Q167.464 449.94 164.385 445.357 Q161.329 440.75 161.329 432.024 Q161.329 423.274 164.385 418.69 Q167.464 414.084 173.274 414.084 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M200.288 417.787 Q196.676 417.787 194.848 421.352 Q193.042 424.894 193.042 432.024 Q193.042 439.13 194.848 442.695 Q196.676 446.236 200.288 446.236 Q203.922 446.236 205.727 442.695 Q207.556 439.13 207.556 432.024 Q207.556 424.894 205.727 421.352 Q203.922 417.787 200.288 417.787 M200.288 414.084 Q206.098 414.084 209.153 418.69 Q212.232 423.274 212.232 432.024 Q212.232 440.75 209.153 445.357 Q206.098 449.94 200.288 449.94 Q194.477 449.94 191.399 445.357 Q188.343 440.75 188.343 432.024 Q188.343 423.274 191.399 418.69 Q194.477 414.084 200.288 414.084 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M134.524 263.695 L150.843 263.695 L150.843 267.631 L128.899 267.631 L128.899 263.695 Q131.561 260.941 136.144 256.311 Q140.751 251.658 141.931 250.316 Q144.177 247.793 145.056 246.057 Q145.959 244.297 145.959 242.608 Q145.959 239.853 144.015 238.117 Q142.093 236.381 138.992 236.381 Q136.793 236.381 134.339 237.145 Q131.908 237.908 129.131 239.459 L129.131 234.737 Q131.955 233.603 134.408 233.024 Q136.862 232.446 138.899 232.446 Q144.269 232.446 147.464 235.131 Q150.658 237.816 150.658 242.307 Q150.658 244.436 149.848 246.358 Q149.061 248.256 146.954 250.848 Q146.376 251.52 143.274 254.737 Q140.172 257.932 134.524 263.695 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M155.913 261.751 L160.797 261.751 L160.797 267.631 L155.913 267.631 L155.913 261.751 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M169.894 263.695 L186.214 263.695 L186.214 267.631 L164.269 267.631 L164.269 263.695 Q166.931 260.941 171.515 256.311 Q176.121 251.658 177.302 250.316 Q179.547 247.793 180.427 246.057 Q181.329 244.297 181.329 242.608 Q181.329 239.853 179.385 238.117 Q177.464 236.381 174.362 236.381 Q172.163 236.381 169.709 237.145 Q167.278 237.908 164.501 239.459 L164.501 234.737 Q167.325 233.603 169.778 233.024 Q172.232 232.446 174.269 232.446 Q179.64 232.446 182.834 235.131 Q186.028 237.816 186.028 242.307 Q186.028 244.436 185.218 246.358 Q184.431 248.256 182.325 250.848 Q181.746 251.52 178.644 254.737 Q175.542 257.932 169.894 263.695 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M191.329 233.071 L209.686 233.071 L209.686 237.006 L195.612 237.006 L195.612 245.478 Q196.63 245.131 197.649 244.969 Q198.667 244.783 199.686 244.783 Q205.473 244.783 208.852 247.955 Q212.232 251.126 212.232 256.543 Q212.232 262.121 208.76 265.223 Q205.288 268.302 198.968 268.302 Q196.792 268.302 194.524 267.931 Q192.278 267.561 189.871 266.82 L189.871 262.121 Q191.954 263.256 194.176 263.811 Q196.399 264.367 198.876 264.367 Q202.88 264.367 205.218 262.26 Q207.556 260.154 207.556 256.543 Q207.556 252.932 205.218 250.825 Q202.88 248.719 198.876 248.719 Q197.001 248.719 195.126 249.135 Q193.274 249.552 191.329 250.432 L191.329 233.071 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1023.95 16.7545 L1023.95 25.383 Q1019.82 21.5346 1015.12 19.6307 Q1010.46 17.7268 1005.2 17.7268 Q994.828 17.7268 989.319 24.0867 Q983.81 30.4061 983.81 42.3968 Q983.81 54.3469 989.319 60.7069 Q994.828 67.0263 1005.2 67.0263 Q1010.46 67.0263 1015.12 65.1223 Q1019.82 63.2184 1023.95 59.3701 L1023.95 67.9175 Q1019.66 70.8341 1014.84 72.2924 Q1010.06 73.7508 1004.71 73.7508 Q990.98 73.7508 983.081 65.3654 Q975.181 56.9395 975.181 42.3968 Q975.181 27.8135 983.081 19.4281 Q990.98 11.0023 1004.71 11.0023 Q1010.14 11.0023 1014.92 12.4606 Q1019.74 13.8784 1023.95 16.7545 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1049.35 32.4315 Q1043.36 32.4315 1039.87 37.1306 Q1036.39 41.7891 1036.39 49.9314 Q1036.39 58.0738 1039.83 62.7728 Q1043.32 67.4314 1049.35 67.4314 Q1055.31 67.4314 1058.79 62.7323 Q1062.28 58.0333 1062.28 49.9314 Q1062.28 41.8701 1058.79 37.1711 Q1055.31 32.4315 1049.35 32.4315 M1049.35 26.1121 Q1059.08 26.1121 1064.63 32.4315 Q1070.18 38.7509 1070.18 49.9314 Q1070.18 61.0714 1064.63 67.4314 Q1059.08 73.7508 1049.35 73.7508 Q1039.59 73.7508 1034.04 67.4314 Q1028.53 61.0714 1028.53 49.9314 Q1028.53 38.7509 1034.04 32.4315 Q1039.59 26.1121 1049.35 26.1121 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1106.92 28.5427 L1106.92 35.5912 Q1103.76 33.9709 1100.35 33.1607 Q1096.95 32.3505 1093.31 32.3505 Q1087.76 32.3505 1084.96 34.0519 Q1082.21 35.7533 1082.21 39.156 Q1082.21 41.7486 1084.19 43.2475 Q1086.18 44.7058 1092.17 46.0426 L1094.72 46.6097 Q1102.66 48.3111 1105.99 51.4303 Q1109.35 54.509 1109.35 60.0587 Q1109.35 66.3781 1104.32 70.0644 Q1099.34 73.7508 1090.59 73.7508 Q1086.95 73.7508 1082.98 73.0216 Q1079.05 72.3329 1074.67 70.9151 L1074.67 63.2184 Q1078.8 65.3654 1082.81 66.4591 Q1086.82 67.5124 1090.75 67.5124 Q1096.02 67.5124 1098.86 65.73 Q1101.69 63.9071 1101.69 60.6258 Q1101.69 57.5877 1099.63 55.9673 Q1097.6 54.3469 1090.67 52.8481 L1088.08 52.2405 Q1081.15 50.7821 1078.07 47.7845 Q1075 44.7463 1075 39.4801 Q1075 33.0797 1079.53 29.5959 Q1084.07 26.1121 1092.41 26.1121 Q1096.55 26.1121 1100.19 26.7198 Q1103.84 27.3274 1106.92 28.5427 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1124.54 14.324 L1124.54 27.2059 L1139.89 27.2059 L1139.89 32.9987 L1124.54 32.9987 L1124.54 57.6282 Q1124.54 63.1779 1126.04 64.7578 Q1127.58 66.3376 1132.23 66.3376 L1139.89 66.3376 L1139.89 72.576 L1132.23 72.576 Q1123.61 72.576 1120.33 69.3758 Q1117.04 66.1351 1117.04 57.6282 L1117.04 32.9987 L1111.58 32.9987 L1111.58 27.2059 L1117.04 27.2059 L1117.04 14.324 L1124.54 14.324 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1168.73 27.2059 L1176.63 27.2059 L1190.81 65.2844 L1204.99 27.2059 L1212.89 27.2059 L1195.87 72.576 L1185.75 72.576 L1168.73 27.2059 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1233.95 12.096 L1240.84 12.096 L1219.77 80.2727 L1212.89 80.2727 L1233.95 12.096 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1277.58 28.5427 L1277.58 35.5912 Q1274.42 33.9709 1271.02 33.1607 Q1267.62 32.3505 1263.97 32.3505 Q1258.42 32.3505 1255.63 34.0519 Q1252.87 35.7533 1252.87 39.156 Q1252.87 41.7486 1254.86 43.2475 Q1256.84 44.7058 1262.84 46.0426 L1265.39 46.6097 Q1273.33 48.3111 1276.65 51.4303 Q1280.01 54.509 1280.01 60.0587 Q1280.01 66.3781 1274.99 70.0644 Q1270.01 73.7508 1261.26 73.7508 Q1257.61 73.7508 1253.64 73.0216 Q1249.71 72.3329 1245.34 70.9151 L1245.34 63.2184 Q1249.47 65.3654 1253.48 66.4591 Q1257.49 67.5124 1261.42 67.5124 Q1266.68 67.5124 1269.52 65.73 Q1272.36 63.9071 1272.36 60.6258 Q1272.36 57.5877 1270.29 55.9673 Q1268.26 54.3469 1261.34 52.8481 L1258.74 52.2405 Q1251.82 50.7821 1248.74 47.7845 Q1245.66 44.7463 1245.66 39.4801 Q1245.66 33.0797 1250.2 29.5959 Q1254.73 26.1121 1263.08 26.1121 Q1267.21 26.1121 1270.86 26.7198 Q1274.5 27.3274 1277.58 28.5427 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1314.2 27.2059 L1321.66 27.2059 L1321.66 72.576 L1314.2 72.576 L1314.2 27.2059 M1314.2 9.54393 L1321.66 9.54393 L1321.66 18.9825 L1314.2 18.9825 L1314.2 9.54393 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1336.85 14.324 L1336.85 27.2059 L1352.2 27.2059 L1352.2 32.9987 L1336.85 32.9987 L1336.85 57.6282 Q1336.85 63.1779 1338.34 64.7578 Q1339.88 66.3376 1344.54 66.3376 L1352.2 66.3376 L1352.2 72.576 L1344.54 72.576 Q1335.91 72.576 1332.63 69.3758 Q1329.35 66.1351 1329.35 57.6282 L1329.35 32.9987 L1323.88 32.9987 L1323.88 27.2059 L1329.35 27.2059 L1329.35 14.324 L1336.85 14.324 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1398.82 48.0275 L1398.82 51.6733 L1364.55 51.6733 Q1365.04 59.3701 1369.17 63.421 Q1373.34 67.4314 1380.76 67.4314 Q1385.05 67.4314 1389.06 66.3781 Q1393.11 65.3249 1397.08 63.2184 L1397.08 70.267 Q1393.07 71.9684 1388.86 72.8596 Q1384.65 73.7508 1380.31 73.7508 Q1369.46 73.7508 1363.1 67.4314 Q1356.78 61.1119 1356.78 50.3365 Q1356.78 39.1965 1362.77 32.6746 Q1368.81 26.1121 1379.02 26.1121 Q1388.17 26.1121 1393.48 32.0264 Q1398.82 37.9003 1398.82 48.0275 M1391.37 45.84 Q1391.29 39.7232 1387.93 36.0774 Q1384.61 32.4315 1379.1 32.4315 Q1372.86 32.4315 1369.09 35.9558 Q1365.36 39.4801 1364.8 45.8805 L1391.37 45.84 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1432.93 34.1734 Q1431.68 33.4443 1430.18 33.1202 Q1428.72 32.7556 1426.94 32.7556 Q1420.62 32.7556 1417.22 36.8875 Q1413.85 40.9789 1413.85 48.6757 L1413.85 72.576 L1406.36 72.576 L1406.36 27.2059 L1413.85 27.2059 L1413.85 34.2544 Q1416.2 30.1225 1419.97 28.1376 Q1423.74 26.1121 1429.13 26.1121 Q1429.9 26.1121 1430.83 26.2337 Q1431.76 26.3147 1432.89 26.5172 L1432.93 34.1734 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1461.37 49.7694 Q1452.34 49.7694 1448.85 51.8354 Q1445.37 53.9013 1445.37 58.8839 Q1445.37 62.8538 1447.96 65.2034 Q1450.6 67.5124 1455.09 67.5124 Q1461.29 67.5124 1465.02 63.1374 Q1468.78 58.7219 1468.78 51.4303 L1468.78 49.7694 L1461.37 49.7694 M1476.24 46.6907 L1476.24 72.576 L1468.78 72.576 L1468.78 65.6895 Q1466.23 69.8214 1462.42 71.8063 Q1458.62 73.7508 1453.11 73.7508 Q1446.14 73.7508 1442.01 69.8619 Q1437.92 65.9325 1437.92 59.3701 Q1437.92 51.7138 1443.02 47.825 Q1448.16 43.9361 1458.33 43.9361 L1468.78 43.9361 L1468.78 43.2069 Q1468.78 38.0623 1465.38 35.2672 Q1462.02 32.4315 1455.9 32.4315 Q1452.01 32.4315 1448.33 33.3632 Q1444.64 34.295 1441.24 36.1584 L1441.24 29.2718 Q1445.33 27.692 1449.18 26.9223 Q1453.03 26.1121 1456.67 26.1121 Q1466.52 26.1121 1471.38 31.2163 Q1476.24 36.3204 1476.24 46.6907 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1491.43 14.324 L1491.43 27.2059 L1506.78 27.2059 L1506.78 32.9987 L1491.43 32.9987 L1491.43 57.6282 Q1491.43 63.1779 1492.93 64.7578 Q1494.47 66.3376 1499.13 66.3376 L1506.78 66.3376 L1506.78 72.576 L1499.13 72.576 Q1490.5 72.576 1487.22 69.3758 Q1483.93 66.1351 1483.93 57.6282 L1483.93 32.9987 L1478.47 32.9987 L1478.47 27.2059 L1483.93 27.2059 L1483.93 14.324 L1491.43 14.324 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1514.6 27.2059 L1522.05 27.2059 L1522.05 72.576 L1514.6 72.576 L1514.6 27.2059 M1514.6 9.54393 L1522.05 9.54393 L1522.05 18.9825 L1514.6 18.9825 L1514.6 9.54393 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1547.45 32.4315 Q1541.46 32.4315 1537.97 37.1306 Q1534.49 41.7891 1534.49 49.9314 Q1534.49 58.0738 1537.93 62.7728 Q1541.42 67.4314 1547.45 67.4314 Q1553.41 67.4314 1556.89 62.7323 Q1560.38 58.0333 1560.38 49.9314 Q1560.38 41.8701 1556.89 37.1711 Q1553.41 32.4315 1547.45 32.4315 M1547.45 26.1121 Q1557.17 26.1121 1562.72 32.4315 Q1568.27 38.7509 1568.27 49.9314 Q1568.27 61.0714 1562.72 67.4314 Q1557.17 73.7508 1547.45 73.7508 Q1537.69 73.7508 1532.14 67.4314 Q1526.63 61.0714 1526.63 49.9314 Q1526.63 38.7509 1532.14 32.4315 Q1537.69 26.1121 1547.45 26.1121 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1613.81 45.1919 L1613.81 72.576 L1606.35 72.576 L1606.35 45.4349 Q1606.35 38.994 1603.84 35.7938 Q1601.33 32.5936 1596.31 32.5936 Q1590.27 32.5936 1586.79 36.4419 Q1583.3 40.2903 1583.3 46.9338 L1583.3 72.576 L1575.81 72.576 L1575.81 27.2059 L1583.3 27.2059 L1583.3 34.2544 Q1585.98 30.163 1589.58 28.1376 Q1593.23 26.1121 1597.97 26.1121 Q1605.79 26.1121 1609.8 30.9732 Q1613.81 35.7938 1613.81 45.1919 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1176.79 1520.4 L1182.65 1520.4 L1182.65 1556.04 L1176.79 1556.04 L1176.79 1520.4 M1176.79 1506.52 L1182.65 1506.52 L1182.65 1513.93 L1176.79 1513.93 L1176.79 1506.52 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1194.58 1510.27 L1194.58 1520.4 L1206.65 1520.4 L1206.65 1524.95 L1194.58 1524.95 L1194.58 1544.3 Q1194.58 1548.66 1195.76 1549.9 Q1196.97 1551.14 1200.63 1551.14 L1206.65 1551.14 L1206.65 1556.04 L1200.63 1556.04 Q1193.85 1556.04 1191.27 1553.53 Q1188.7 1550.98 1188.7 1544.3 L1188.7 1524.95 L1184.4 1524.95 L1184.4 1520.4 L1188.7 1520.4 L1188.7 1510.27 L1194.58 1510.27 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1243.28 1536.76 L1243.28 1539.62 L1216.35 1539.62 Q1216.74 1545.67 1219.98 1548.85 Q1223.26 1552 1229.09 1552 Q1232.46 1552 1235.61 1551.17 Q1238.79 1550.35 1241.91 1548.69 L1241.91 1554.23 Q1238.76 1555.57 1235.45 1556.27 Q1232.14 1556.97 1228.74 1556.97 Q1220.21 1556.97 1215.21 1552 Q1210.24 1547.04 1210.24 1538.57 Q1210.24 1529.82 1214.95 1524.69 Q1219.7 1519.54 1227.72 1519.54 Q1234.91 1519.54 1239.08 1524.18 Q1243.28 1528.8 1243.28 1536.76 M1237.43 1535.04 Q1237.36 1530.23 1234.72 1527.37 Q1232.11 1524.5 1227.78 1524.5 Q1222.88 1524.5 1219.92 1527.27 Q1216.99 1530.04 1216.55 1535.07 L1237.43 1535.04 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1270.08 1525.87 Q1269.09 1525.3 1267.92 1525.04 Q1266.77 1524.76 1265.37 1524.76 Q1260.41 1524.76 1257.73 1528 Q1255.09 1531.22 1255.09 1537.27 L1255.09 1556.04 L1249.2 1556.04 L1249.2 1520.4 L1255.09 1520.4 L1255.09 1525.93 Q1256.94 1522.69 1259.9 1521.13 Q1262.86 1519.54 1267.09 1519.54 Q1267.69 1519.54 1268.43 1519.63 Q1269.16 1519.7 1270.05 1519.85 L1270.08 1525.87 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1292.43 1538.12 Q1285.33 1538.12 1282.59 1539.75 Q1279.85 1541.37 1279.85 1545.29 Q1279.85 1548.4 1281.89 1550.25 Q1283.96 1552.07 1287.49 1552.07 Q1292.36 1552.07 1295.29 1548.63 Q1298.25 1545.16 1298.25 1539.43 L1298.25 1538.12 L1292.43 1538.12 M1304.11 1535.71 L1304.11 1556.04 L1298.25 1556.04 L1298.25 1550.63 Q1296.24 1553.88 1293.25 1555.44 Q1290.26 1556.97 1285.93 1556.97 Q1280.46 1556.97 1277.21 1553.91 Q1274 1550.82 1274 1545.67 Q1274 1539.65 1278.01 1536.6 Q1282.05 1533.54 1290.04 1533.54 L1298.25 1533.54 L1298.25 1532.97 Q1298.25 1528.93 1295.58 1526.73 Q1292.93 1524.5 1288.13 1524.5 Q1285.07 1524.5 1282.18 1525.23 Q1279.28 1525.97 1276.61 1527.43 L1276.61 1522.02 Q1279.82 1520.78 1282.84 1520.17 Q1285.87 1519.54 1288.73 1519.54 Q1296.47 1519.54 1300.29 1523.55 Q1304.11 1527.56 1304.11 1535.71 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1316.04 1510.27 L1316.04 1520.4 L1328.1 1520.4 L1328.1 1524.95 L1316.04 1524.95 L1316.04 1544.3 Q1316.04 1548.66 1317.22 1549.9 Q1318.43 1551.14 1322.09 1551.14 L1328.1 1551.14 L1328.1 1556.04 L1322.09 1556.04 Q1315.31 1556.04 1312.73 1553.53 Q1310.15 1550.98 1310.15 1544.3 L1310.15 1524.95 L1305.86 1524.95 L1305.86 1520.4 L1310.15 1520.4 L1310.15 1510.27 L1316.04 1510.27 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1334.25 1520.4 L1340.1 1520.4 L1340.1 1556.04 L1334.25 1556.04 L1334.25 1520.4 M1334.25 1506.52 L1340.1 1506.52 L1340.1 1513.93 L1334.25 1513.93 L1334.25 1506.52 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1360.06 1524.5 Q1355.35 1524.5 1352.61 1528.19 Q1349.88 1531.85 1349.88 1538.25 Q1349.88 1544.65 1352.58 1548.34 Q1355.32 1552 1360.06 1552 Q1364.74 1552 1367.48 1548.31 Q1370.21 1544.62 1370.21 1538.25 Q1370.21 1531.92 1367.48 1528.23 Q1364.74 1524.5 1360.06 1524.5 M1360.06 1519.54 Q1367.7 1519.54 1372.06 1524.5 Q1376.42 1529.47 1376.42 1538.25 Q1376.42 1547 1372.06 1552 Q1367.7 1556.97 1360.06 1556.97 Q1352.39 1556.97 1348.03 1552 Q1343.7 1547 1343.7 1538.25 Q1343.7 1529.47 1348.03 1524.5 Q1352.39 1519.54 1360.06 1519.54 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1412.2 1534.53 L1412.2 1556.04 L1406.34 1556.04 L1406.34 1534.72 Q1406.34 1529.66 1404.37 1527.14 Q1402.39 1524.63 1398.45 1524.63 Q1393.7 1524.63 1390.97 1527.65 Q1388.23 1530.68 1388.23 1535.9 L1388.23 1556.04 L1382.34 1556.04 L1382.34 1520.4 L1388.23 1520.4 L1388.23 1525.93 Q1390.33 1522.72 1393.16 1521.13 Q1396.03 1519.54 1399.75 1519.54 Q1405.89 1519.54 1409.04 1523.36 Q1412.2 1527.14 1412.2 1534.53 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M53.7248 804.773 L59.1993 804.773 Q57.8307 807.255 57.1623 809.77 Q56.4621 812.252 56.4621 814.799 Q56.4621 820.496 60.0905 823.647 Q63.6872 826.798 70.212 826.798 Q76.7369 826.798 80.3653 823.647 Q83.9619 820.496 83.9619 814.799 Q83.9619 812.252 83.2935 809.77 Q82.5933 807.255 81.2247 804.773 L86.6355 804.773 Q87.7814 807.223 88.3543 809.865 Q88.9272 812.475 88.9272 815.435 Q88.9272 823.488 83.8664 828.23 Q78.8057 832.973 70.212 832.973 Q61.491 832.973 56.4939 828.198 Q51.4968 823.392 51.4968 815.053 Q51.4968 812.348 52.0697 809.77 Q52.6108 807.192 53.7248 804.773 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M56.4621 784.816 Q56.4621 789.527 60.1542 792.264 Q63.8145 795.001 70.212 795.001 Q76.6095 795.001 80.3017 792.296 Q83.9619 789.559 83.9619 784.816 Q83.9619 780.137 80.2698 777.4 Q76.5777 774.663 70.212 774.663 Q63.8781 774.663 60.186 777.4 Q56.4621 780.137 56.4621 784.816 M51.4968 784.816 Q51.4968 777.177 56.4621 772.817 Q61.4273 768.456 70.212 768.456 Q78.9649 768.456 83.9619 772.817 Q88.9272 777.177 88.9272 784.816 Q88.9272 792.487 83.9619 796.847 Q78.9649 801.176 70.212 801.176 Q61.4273 801.176 56.4621 796.847 Q51.4968 792.487 51.4968 784.816 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M53.4065 739.588 L58.9447 739.588 Q57.6716 742.07 57.035 744.744 Q56.3984 747.418 56.3984 750.282 Q56.3984 754.643 57.7352 756.839 Q59.072 759.003 61.7456 759.003 Q63.7826 759.003 64.9603 757.444 Q66.1061 755.884 67.1565 751.173 L67.6021 749.168 Q68.9389 742.93 71.3897 740.32 Q73.8086 737.678 78.1691 737.678 Q83.1344 737.678 86.0308 741.625 Q88.9272 745.54 88.9272 752.415 Q88.9272 755.279 88.3543 758.398 Q87.8132 761.486 86.6992 764.923 L80.6518 764.923 Q82.3387 761.677 83.198 758.526 Q84.0256 755.375 84.0256 752.287 Q84.0256 748.15 82.6251 745.922 Q81.1929 743.694 78.6147 743.694 Q76.2276 743.694 74.9545 745.317 Q73.6813 746.908 72.5037 752.351 L72.0262 754.388 Q70.8804 759.831 68.5251 762.25 Q66.138 764.669 62.0002 764.669 Q56.9713 764.669 54.2341 761.104 Q51.4968 757.539 51.4968 750.982 Q51.4968 747.736 51.9743 744.871 Q52.4517 742.007 53.4065 739.588 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M42.2347 725.742 L52.3562 725.742 L52.3562 713.679 L56.9077 713.679 L56.9077 725.742 L76.2594 725.742 Q80.6199 725.742 81.8613 724.565 Q83.1026 723.355 83.1026 719.695 L83.1026 713.679 L88.0042 713.679 L88.0042 719.695 Q88.0042 726.474 85.4897 729.052 Q82.9434 731.631 76.2594 731.631 L56.9077 731.631 L56.9077 735.927 L52.3562 735.927 L52.3562 731.631 L42.2347 731.631 L42.2347 725.742 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;polyline clip-path=&quot;url(#clip002)&quot; style=&quot;stroke:#009af9; stroke-width:12; stroke-opacity:1; fill:none&quot; points=&quot;
  296.134,160.256 309.534,180.448 322.935,200.575 336.336,220.636 349.737,240.63 363.138,260.554 376.538,280.407 389.939,300.187 403.34,319.892 416.741,339.519 
  430.142,359.066 443.542,378.532 456.943,397.914 470.344,417.209 483.745,436.415 497.146,455.531 510.547,474.552 523.947,493.477 537.348,512.302 550.749,531.025 
  564.15,549.643 577.551,568.153 590.951,586.551 604.352,604.835 617.753,623.001 631.154,641.046 644.555,658.966 657.955,676.758 671.356,694.418 684.757,711.942 
  698.158,729.325 711.559,746.565 724.959,763.657 738.36,780.597 751.761,797.38 765.162,814.001 778.563,830.458 791.964,846.743 805.364,862.854 818.765,878.785 
  832.166,894.531 845.567,910.088 858.968,925.45 872.368,940.611 885.769,955.568 899.17,970.315 912.571,984.845 925.972,999.156 939.372,1013.24 952.773,1027.09 
  966.174,1040.71 979.575,1054.08 992.976,1067.21 1006.38,1080.09 1019.78,1092.71 1033.18,1105.06 1046.58,1117.15 1059.98,1128.97 1073.38,1140.52 1086.78,1151.78 
  1100.18,1162.76 1113.58,1173.45 1126.98,1183.85 1140.38,1193.95 1153.79,1203.76 1167.19,1213.26 1180.59,1222.47 1193.99,1231.36 1207.39,1239.95 1220.79,1248.24 
  1234.19,1256.21 1247.59,1263.88 1260.99,1271.24 1274.39,1278.29 1287.79,1285.04 1301.19,1291.48 1314.6,1297.63 1328,1303.48 1341.4,1309.04 1354.8,1314.31 
  1368.2,1319.31 1381.6,1324.03 1395,1328.48 1408.4,1332.67 1421.8,1336.61 1435.2,1340.31 1448.6,1343.78 1462,1347.02 1475.4,1350.04 1488.81,1352.86 
  1502.21,1355.49 1515.61,1357.93 1529.01,1360.19 1542.41,1362.29 1555.81,1364.23 1569.21,1366.03 1582.61,1367.69 1596.01,1369.21 1609.41,1370.63 1622.81,1371.92 
  1636.21,1373.12 1649.62,1374.22 1663.02,1375.23 1676.42,1376.16 1689.82,1377.01 1703.22,1377.79 1716.62,1378.5 1730.02,1379.16 1743.42,1379.76 1756.82,1380.32 
  1770.22,1380.82 1783.62,1381.29 1797.02,1381.71 1810.43,1382.1 1823.83,1382.46 1837.23,1382.79 1850.63,1383.09 1864.03,1383.37 1877.43,1383.62 1890.83,1383.85 
  1904.23,1384.07 1917.63,1384.26 1931.03,1384.44 1944.43,1384.61 1957.83,1384.76 1971.23,1384.9 1984.64,1385.03 1998.04,1385.15 2011.44,1385.26 2024.84,1385.36 
  2038.24,1385.46 2051.64,1385.55 2065.04,1385.63 2078.44,1385.7 2091.84,1385.77 2105.24,1385.84 2118.64,1385.89 2132.04,1385.95 2145.45,1386 2158.85,1386.05 
  2172.25,1386.1 2185.65,1386.14 2199.05,1386.18 2212.45,1386.22 2225.85,1386.25 2239.25,1386.28 2252.65,1386.31 2266.05,1386.34 2279.45,1386.37 2292.85,1386.4 
  
  &quot; /&gt;
&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;
M1586.09 287.756 L2282.21 287.756 L2282.21 166.796 L1586.09 166.796  Z
  &quot; fill=&quot;#ffffff&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  1586.09,287.756 2282.21,287.756 2282.21,166.796 1586.09,166.796 1586.09,287.756 
  &quot; /&gt;
&lt;polyline clip-path=&quot;url(#clip000)&quot; style=&quot;stroke:#009af9; stroke-width:4; stroke-opacity:1; fill:none&quot; points=&quot;
  1609.61,227.276 1750.71,227.276 
  &quot; /&gt;
&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1795.94 228.908 L1795.94 244.556 L1791.68 244.556 L1791.68 229.047 Q1791.68 225.366 1790.24 223.537 Q1788.81 221.709 1785.94 221.709 Q1782.49 221.709 1780.5 223.908 Q1778.51 226.107 1778.51 229.903 L1778.51 244.556 L1774.22 244.556 L1774.22 218.63 L1778.51 218.63 L1778.51 222.658 Q1780.03 220.32 1782.09 219.162 Q1784.18 218.005 1786.89 218.005 Q1791.35 218.005 1793.65 220.783 Q1795.94 223.537 1795.94 228.908 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1822.58 230.528 L1822.58 232.611 L1803 232.611 Q1803.28 237.009 1805.64 239.324 Q1808.02 241.616 1812.26 241.616 Q1814.71 241.616 1817 241.014 Q1819.32 240.412 1821.59 239.209 L1821.59 243.236 Q1819.29 244.208 1816.89 244.718 Q1814.48 245.227 1812 245.227 Q1805.8 245.227 1802.16 241.616 Q1798.55 238.005 1798.55 231.847 Q1798.55 225.482 1801.98 221.755 Q1805.43 218.005 1811.26 218.005 Q1816.49 218.005 1819.53 221.385 Q1822.58 224.741 1822.58 230.528 M1818.32 229.278 Q1818.28 225.783 1816.35 223.699 Q1814.46 221.616 1811.31 221.616 Q1807.74 221.616 1805.59 223.63 Q1803.46 225.644 1803.14 229.301 L1818.32 229.278 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1844.11 231.292 Q1844.11 226.662 1842.19 224.116 Q1840.29 221.57 1836.84 221.57 Q1833.41 221.57 1831.49 224.116 Q1829.59 226.662 1829.59 231.292 Q1829.59 235.898 1831.49 238.445 Q1833.41 240.991 1836.84 240.991 Q1840.29 240.991 1842.19 238.445 Q1844.11 235.898 1844.11 231.292 M1848.37 241.338 Q1848.37 247.958 1845.43 251.176 Q1842.49 254.417 1836.42 254.417 Q1834.18 254.417 1832.19 254.07 Q1830.2 253.745 1828.32 253.051 L1828.32 248.908 Q1830.2 249.926 1832.03 250.412 Q1833.85 250.898 1835.75 250.898 Q1839.94 250.898 1842.03 248.699 Q1844.11 246.523 1844.11 242.102 L1844.11 239.996 Q1842.79 242.287 1840.73 243.421 Q1838.67 244.556 1835.8 244.556 Q1831.03 244.556 1828.11 240.921 Q1825.2 237.287 1825.2 231.292 Q1825.2 225.273 1828.11 221.639 Q1831.03 218.005 1835.8 218.005 Q1838.67 218.005 1840.73 219.139 Q1842.79 220.273 1844.11 222.565 L1844.11 218.63 L1848.37 218.63 L1848.37 241.338 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1864.62 231.523 Q1859.46 231.523 1857.46 232.704 Q1855.47 233.884 1855.47 236.732 Q1855.47 239 1856.96 240.343 Q1858.46 241.662 1861.03 241.662 Q1864.57 241.662 1866.7 239.162 Q1868.85 236.639 1868.85 232.472 L1868.85 231.523 L1864.62 231.523 M1873.11 229.764 L1873.11 244.556 L1868.85 244.556 L1868.85 240.621 Q1867.4 242.982 1865.22 244.116 Q1863.04 245.227 1859.9 245.227 Q1855.91 245.227 1853.55 243.005 Q1851.21 240.759 1851.21 237.009 Q1851.21 232.634 1854.13 230.412 Q1857.07 228.19 1862.88 228.19 L1868.85 228.19 L1868.85 227.773 Q1868.85 224.834 1866.91 223.236 Q1864.99 221.616 1861.49 221.616 Q1859.27 221.616 1857.16 222.148 Q1855.06 222.681 1853.11 223.746 L1853.11 219.81 Q1855.45 218.908 1857.65 218.468 Q1859.85 218.005 1861.93 218.005 Q1867.56 218.005 1870.34 220.922 Q1873.11 223.838 1873.11 229.764 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1881.79 211.269 L1881.79 218.63 L1890.57 218.63 L1890.57 221.94 L1881.79 221.94 L1881.79 236.014 Q1881.79 239.185 1882.65 240.088 Q1883.53 240.991 1886.19 240.991 L1890.57 240.991 L1890.57 244.556 L1886.19 244.556 Q1881.26 244.556 1879.39 242.727 Q1877.51 240.875 1877.51 236.014 L1877.51 221.94 L1874.39 221.94 L1874.39 218.63 L1877.51 218.63 L1877.51 211.269 L1881.79 211.269 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1895.03 218.63 L1899.29 218.63 L1899.29 244.556 L1895.03 244.556 L1895.03 218.63 M1895.03 208.537 L1899.29 208.537 L1899.29 213.931 L1895.03 213.931 L1895.03 208.537 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1900.71 218.63 L1905.22 218.63 L1913.32 240.389 L1921.42 218.63 L1925.94 218.63 L1916.21 244.556 L1910.43 244.556 L1900.71 218.63 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1952.58 230.528 L1952.58 232.611 L1933 232.611 Q1933.27 237.009 1935.64 239.324 Q1938.02 241.616 1942.26 241.616 Q1944.71 241.616 1947 241.014 Q1949.32 240.412 1951.58 239.209 L1951.58 243.236 Q1949.29 244.208 1946.89 244.718 Q1944.48 245.227 1942 245.227 Q1935.8 245.227 1932.16 241.616 Q1928.55 238.005 1928.55 231.847 Q1928.55 225.482 1931.98 221.755 Q1935.43 218.005 1941.26 218.005 Q1946.49 218.005 1949.52 221.385 Q1952.58 224.741 1952.58 230.528 M1948.32 229.278 Q1948.27 225.783 1946.35 223.699 Q1944.46 221.616 1941.31 221.616 Q1937.74 221.616 1935.59 223.63 Q1933.46 225.644 1933.14 229.301 L1948.32 229.278 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1972.12 208.537 L1976.38 208.537 L1976.38 244.556 L1972.12 244.556 L1972.12 208.537 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M1990.89 221.616 Q1987.46 221.616 1985.47 224.301 Q1983.48 226.963 1983.48 231.616 Q1983.48 236.269 1985.45 238.954 Q1987.44 241.616 1990.89 241.616 Q1994.29 241.616 1996.28 238.931 Q1998.27 236.246 1998.27 231.616 Q1998.27 227.01 1996.28 224.324 Q1994.29 221.616 1990.89 221.616 M1990.89 218.005 Q1996.45 218.005 1999.62 221.616 Q2002.79 225.227 2002.79 231.616 Q2002.79 237.982 1999.62 241.616 Q1996.45 245.227 1990.89 245.227 Q1985.31 245.227 1982.14 241.616 Q1978.99 237.982 1978.99 231.616 Q1978.99 225.227 1982.14 221.616 Q1985.31 218.005 1990.89 218.005 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2024.32 231.292 Q2024.32 226.662 2022.39 224.116 Q2020.5 221.57 2017.05 221.57 Q2013.62 221.57 2011.7 224.116 Q2009.8 226.662 2009.8 231.292 Q2009.8 235.898 2011.7 238.445 Q2013.62 240.991 2017.05 240.991 Q2020.5 240.991 2022.39 238.445 Q2024.32 235.898 2024.32 231.292 M2028.58 241.338 Q2028.58 247.958 2025.64 251.176 Q2022.7 254.417 2016.63 254.417 Q2014.39 254.417 2012.39 254.07 Q2010.4 253.745 2008.53 253.051 L2008.53 248.908 Q2010.4 249.926 2012.23 250.412 Q2014.06 250.898 2015.96 250.898 Q2020.15 250.898 2022.23 248.699 Q2024.32 246.523 2024.32 242.102 L2024.32 239.996 Q2023 242.287 2020.94 243.421 Q2018.88 244.556 2016.01 244.556 Q2011.24 244.556 2008.32 240.921 Q2005.4 237.287 2005.4 231.292 Q2005.4 225.273 2008.32 221.639 Q2011.24 218.005 2016.01 218.005 Q2018.88 218.005 2020.94 219.139 Q2023 220.273 2024.32 222.565 L2024.32 218.63 L2028.58 218.63 L2028.58 241.338 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2030.89 229.672 L2043.37 229.672 L2043.37 233.468 L2030.89 233.468 L2030.89 229.672 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2047.83 208.537 L2052.09 208.537 L2052.09 244.556 L2047.83 244.556 L2047.83 208.537 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2056.56 218.63 L2060.82 218.63 L2060.82 244.556 L2056.56 244.556 L2056.56 218.63 M2056.56 208.537 L2060.82 208.537 L2060.82 213.931 L2056.56 213.931 L2056.56 208.537 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2065.13 208.537 L2069.41 208.537 L2069.41 229.81 L2082.12 218.63 L2087.56 218.63 L2073.81 230.759 L2088.13 244.556 L2082.58 244.556 L2069.41 231.894 L2069.41 244.556 L2065.13 244.556 L2065.13 208.537 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2113.09 230.528 L2113.09 232.611 L2093.51 232.611 Q2093.78 237.009 2096.14 239.324 Q2098.53 241.616 2102.76 241.616 Q2105.22 241.616 2107.51 241.014 Q2109.82 240.412 2112.09 239.209 L2112.09 243.236 Q2109.8 244.208 2107.39 244.718 Q2104.99 245.227 2102.51 245.227 Q2096.31 245.227 2092.67 241.616 Q2089.06 238.005 2089.06 231.847 Q2089.06 225.482 2092.49 221.755 Q2095.94 218.005 2101.77 218.005 Q2107 218.005 2110.03 221.385 Q2113.09 224.741 2113.09 230.528 M2108.83 229.278 Q2108.78 225.783 2106.86 223.699 Q2104.96 221.616 2101.82 221.616 Q2098.25 221.616 2096.1 223.63 Q2093.97 225.644 2093.64 229.301 L2108.83 229.278 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2117.56 208.537 L2121.82 208.537 L2121.82 244.556 L2117.56 244.556 L2117.56 208.537 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2126.28 218.63 L2130.54 218.63 L2130.54 244.556 L2126.28 244.556 L2126.28 218.63 M2126.28 208.537 L2130.54 208.537 L2130.54 213.931 L2126.28 213.931 L2126.28 208.537 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2156.56 228.908 L2156.56 244.556 L2152.3 244.556 L2152.3 229.047 Q2152.3 225.366 2150.87 223.537 Q2149.43 221.709 2146.56 221.709 Q2143.11 221.709 2141.12 223.908 Q2139.13 226.107 2139.13 229.903 L2139.13 244.556 L2134.85 244.556 L2134.85 208.537 L2139.13 208.537 L2139.13 222.658 Q2140.66 220.32 2142.72 219.162 Q2144.8 218.005 2147.51 218.005 Q2151.98 218.005 2154.27 220.783 Q2156.56 223.537 2156.56 228.908 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2171.07 221.616 Q2167.65 221.616 2165.66 224.301 Q2163.67 226.963 2163.67 231.616 Q2163.67 236.269 2165.63 238.954 Q2167.63 241.616 2171.07 241.616 Q2174.48 241.616 2176.47 238.931 Q2178.46 236.246 2178.46 231.616 Q2178.46 227.01 2176.47 224.324 Q2174.48 221.616 2171.07 221.616 M2171.07 218.005 Q2176.63 218.005 2179.8 221.616 Q2182.97 225.227 2182.97 231.616 Q2182.97 237.982 2179.8 241.616 Q2176.63 245.227 2171.07 245.227 Q2165.5 245.227 2162.32 241.616 Q2159.18 237.982 2159.18 231.616 Q2159.18 225.227 2162.32 221.616 Q2165.5 218.005 2171.07 218.005 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2197.49 221.616 Q2194.06 221.616 2192.07 224.301 Q2190.08 226.963 2190.08 231.616 Q2190.08 236.269 2192.05 238.954 Q2194.04 241.616 2197.49 241.616 Q2200.89 241.616 2202.88 238.931 Q2204.87 236.246 2204.87 231.616 Q2204.87 227.01 2202.88 224.324 Q2200.89 221.616 2197.49 221.616 M2197.49 218.005 Q2203.04 218.005 2206.21 221.616 Q2209.38 225.227 2209.38 231.616 Q2209.38 237.982 2206.21 241.616 Q2203.04 245.227 2197.49 245.227 Q2191.91 245.227 2188.74 241.616 Q2185.59 237.982 2185.59 231.616 Q2185.59 225.227 2188.74 221.616 Q2191.91 218.005 2197.49 218.005 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;path clip-path=&quot;url(#clip000)&quot; d=&quot;M 0 0 M2230.91 222.565 L2230.91 208.537 L2235.17 208.537 L2235.17 244.556 L2230.91 244.556 L2230.91 240.667 Q2229.57 242.982 2227.51 244.116 Q2225.47 245.227 2222.6 245.227 Q2217.9 245.227 2214.94 241.477 Q2212 237.727 2212 231.616 Q2212 225.505 2214.94 221.755 Q2217.9 218.005 2222.6 218.005 Q2225.47 218.005 2227.51 219.139 Q2229.57 220.25 2230.91 222.565 M2216.4 231.616 Q2216.4 236.315 2218.32 239 Q2220.26 241.662 2223.64 241.662 Q2227.02 241.662 2228.97 239 Q2230.91 236.315 2230.91 231.616 Q2230.91 226.917 2228.97 224.255 Q2227.02 221.57 2223.64 221.57 Q2220.26 221.57 2218.32 224.255 Q2216.4 226.917 2216.4 231.616 Z&quot; fill=&quot;#000000&quot; fill-rule=&quot;evenodd&quot; fill-opacity=&quot;1&quot; /&gt;&lt;/svg&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/julia.jpg" /><media:content medium="image" url="abhishekswain.me/images/julia.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Statistics and Linear Algebra for ML/DL</title><link href="abhishekswain.me/machine%20learning/maths/books/2020/07/19/statsandlinalg.html" rel="alternate" type="text/html" title="Statistics and Linear Algebra for ML/DL" /><published>2020-07-19T00:00:00-05:00</published><updated>2020-07-19T00:00:00-05:00</updated><id>abhishekswain.me/machine%20learning/maths/books/2020/07/19/statsandlinalg</id><content type="html" xml:base="abhishekswain.me/machine%20learning/maths/books/2020/07/19/statsandlinalg.html">&lt;p&gt;Hey there! 👋😃&lt;/p&gt;

&lt;p&gt;Today, I am gonna talk about something I have been meaning to do for the longest amout of time. I am now many months into my ML journey, so I have now quite a bit of experience. So, I have a basic understanding of the ML/DL algos but it always feels like I lack in explaining why something works over the others. This is where the mathematical part comes in. Having a sound understanding of the statistical methods is necessary when the explainability comes in. Inorder to do that I have decided to start a &lt;ins&gt;&lt;em&gt;Probability &amp;amp; Statistics&lt;/em&gt;&lt;/ins&gt; and &lt;ins&gt;&lt;em&gt;Linear Algebra&lt;/em&gt;&lt;/ins&gt; series. This way I would not only be able to learn both but also share with the community which gave me so much. Also, it’s a part of the &lt;em&gt;“Feynmann technique”&lt;/em&gt; which I am so fond of.&lt;/p&gt;

&lt;h1 id=&quot;probability--statistics&quot;&gt;Probability &amp;amp; Statistics&lt;/h1&gt;

&lt;h2 id=&quot;books&quot;&gt;Books:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Business-Statistics-Contemporary-Decision-Making/dp/8126521546/ref=pd_sbs_14_2/257-8608761-1170154?_encoding=UTF8&amp;amp;pd_rd_i=8126521546&amp;amp;pd_rd_r=b4f7e949-0d73-4549-b120-e86fb1f606e6&amp;amp;pd_rd_w=VJgyd&amp;amp;pd_rd_wg=doo7E&amp;amp;pf_rd_p=00b53f5d-d1f8-4708-89df-2987ccce05ce&amp;amp;pf_rd_r=RQEDQA024GQ7HPVACRYS&amp;amp;psc=1&amp;amp;refRID=RQEDQA024GQ7HPVACRYS&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Business statistics for contemporary decision making&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Mathematical-Statistics-Applications-Dennis-Wackerly/dp/0495110817/ref=sr_1_2?dchild=1&amp;amp;keywords=mathematical+statistics+with+applications+wackerly&amp;amp;qid=1595177027&amp;amp;s=books&amp;amp;sr=1-2&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Mathematical Statistics with applications&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/All-Statistics-Statistical-Inference-Springer/dp/0387402721&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;All of statistics&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lectures&quot;&gt;Video lectures:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KbB0FjPg0mw&amp;amp;list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo&quot;&gt;&lt;em&gt;Harvard Stats 110&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9FtHB7V14Fo&amp;amp;list=PL5102DFDC6790F3D0&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Professor Leonard’s lectures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=zcMnu-3wkWo&amp;amp;list=PLTB9VQq8WiaCBK2XrtYn5t9uuPdsNm7YE&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Larry Wasserman’s lectures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;linear-algebra&quot;&gt;Linear Algebra&lt;/h1&gt;

&lt;h2 id=&quot;books-1&quot;&gt;Books:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Introduction-Linear-Algebra-Gilbert-Strang/dp/0980232775/ref=sr_1_5?crid=O4QLD0HT1F7A&amp;amp;dchild=1&amp;amp;keywords=gilbert+strang+linear+algebra&amp;amp;qid=1595177337&amp;amp;s=books&amp;amp;sprefix=gilbert+s%2Cstripbooks%2C426&amp;amp;sr=1-5&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Introduction to Linear Algebra (Gilbert Strang)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lectures-1&quot;&gt;Video lectures:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=7UJ4CFRGd-U&amp;amp;list=PL221E2BBF13BECF6C&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Gilbert Strang lectures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;applied-resources&quot;&gt;Applied resources&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;My favorite: &lt;a href=&quot;http://faculty.marshall.usc.edu/gareth-james/ISL/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;An Introduction to Statistical Learning: With Applications in R&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Practical-Statistics-Data-Scientists-Essential/dp/9352135652&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Practical Statistics for Data Scientists: 50+ Essential Concepts Using R and Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://greenteapress.com/thinkstats2/thinkstats2.pdf&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Think Stats(Learn stats using Python)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pabloinsente.github.io/intro-linear-algebra&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Introduction to Linear Algebra for Applied Machine Learning with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Peter Norvig’s: &lt;a href=&quot;https://github.com/norvig/pytudes/blob/master/ipynb/Probability.ipynb&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;A Concrete Introduction to Probability (using Python)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I read the material and understand a concept I will write an article about it. It will be two parellel series one for each. If you want to follow it then all of it will be posted on my &lt;a href=&quot;https://medium.com/@abhi08as.as&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Medium&lt;/strong&gt;&lt;/a&gt;. I will see you there!&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;

&lt;h1 id=&quot;update21072020&quot;&gt;Update(21/07/2020)&lt;/h1&gt;

&lt;p&gt;I need to strike a balance between theory and application. I actually read few chapters of the book but found that I am more into the &lt;em&gt;code-first&lt;/em&gt; approach to learning. So, there’s a slight modification to my plan. For linear algebra, I am using &lt;a href=&quot;https://www.youtube.com/watch?v=8iGzBMboA0I&amp;amp;list=PLtmWHNX-gukIc92m1K0P6bIOnZb-mg0hY&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Computational linear algebra by Rachel Thomas&lt;/em&gt;&lt;/a&gt;. I have just begun and I already like it. I will use it parellely with Glibert Strang’s linear algebra course.&lt;/p&gt;

&lt;p&gt;For proabability &amp;amp; stats: &lt;em&gt;Think Stats&lt;/em&gt; + any theory course mentioned.&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey there! 👋😃</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/statslinalg.jpg" /><media:content medium="image" url="abhishekswain.me/images/statslinalg.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Introduction to Machine Learning course (Refreshing the maths)</title><link href="abhishekswain.me/machine%20learning/2020/07/14/nptelML.html" rel="alternate" type="text/html" title="Introduction to Machine Learning course (Refreshing the maths)" /><published>2020-07-14T00:00:00-05:00</published><updated>2020-07-14T00:00:00-05:00</updated><id>abhishekswain.me/machine%20learning/2020/07/14/nptelML</id><content type="html" xml:base="abhishekswain.me/machine%20learning/2020/07/14/nptelML.html">&lt;p&gt;Hey there! 👋😃&lt;/p&gt;

&lt;p&gt;Today I want to talk about revisiting Machine learning especailly with a focus on underlying mathematics. Well let me tell you, I have just found the perfect course for it. It’s the &lt;a href=&quot;https://onlinecourses.nptel.ac.in/noc20_cs73/course?user_email=abhi08as.as@gmail.com&quot;&gt;Introduction to Machine Learning&lt;/a&gt; course. It’s taught by Prof &lt;a href=&quot;https://www.linkedin.com/in/balaraman-ravindran-427a307/&quot;&gt;Balaraman Ravindran&lt;/a&gt;. He is someone from whom I have really learnt a lot. And infact the course is by IIT Madras, it’s pretty close to my heart because my introduction to machine learning class almost a year ago was by IIT Madras, not this one but &lt;a href=&quot;https://nptel.ac.in/courses/106/106/106106198/&quot;&gt;&lt;em&gt;this&lt;/em&gt;&lt;/a&gt; one 🤗. I always recommend it to people. Something I’m really in love with these days is &lt;a href=&quot;https://course.fast.ai/&quot;&gt;&lt;em&gt;fastai&lt;/em&gt;&lt;/a&gt; 🤗🤗. I am really in love with Jeremy’s top-down method of teaching. The best thing abouut fastai is you build the whole of PyTorch from ground up. It just doesn’t teach you Deep Learning, but also makes you a better Python programmer. I recommend it to everyone. Fastai also has ML and Computational linear algebra courses. I haven’t gone through them but I bet they are as awesome as the Deep learning one.&lt;/p&gt;

&lt;p&gt;Anyways, I have enrolled myself into the NPTEL ML course, so that it can be a refresher. I have my semesters coming up and it starts from the day my sems begin that is 20 &amp;amp; also the whole TCS onboarding to follow but, come on when did we go by the convention? Ofcourse amid all the chaos I am gonna try, that’s how we roll. Let’s see how it turns out! As always anything and evrything I do I will update it here. Also, I was really confused about what to put on Medium and what here?. Needed to draw a line. I have decided that all &lt;ins&gt;&lt;em&gt;tutorials, build &amp;amp; learning journeys&lt;/em&gt;&lt;/ins&gt; go there. Everything except that goes here! Let the sems just get over &amp;amp; the fun will begin.&lt;/p&gt;

&lt;p&gt;I want to explore so many things and learn so much. Nothing makes me happier than sharing it with the community that I learnt from. 🤗 And teaching is the best way I have found to effectively learn things.&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;

&lt;h1 id=&quot;update-19072020&quot;&gt;(UPDATE 19/07/2020)&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Abhiswain97/ListeningToLife/blob/master/images/revised_sched.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The course was supposed to start from tomorrow but it has got rescheduled to semptember 14. Damn! that is 2 months away. So, need a change of plans. Actually, I had another plan in my mind for the whole maths refresher and getting to know the nitty gritty. The next post will be all about it.&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey there! 👋😃</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/inortoML.jpg" /><media:content medium="image" url="abhishekswain.me/images/inortoML.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Rust v/s C++ for Deep learning</title><link href="abhishekswain.me/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp.html" rel="alternate" type="text/html" title="Rust v/s C++ for Deep learning" /><published>2020-07-12T00:00:00-05:00</published><updated>2020-07-12T00:00:00-05:00</updated><id>abhishekswain.me/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp</id><content type="html" xml:base="abhishekswain.me/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp.html">&lt;p&gt;Hey there! 👋
&lt;br /&gt;
Today, let’s discuss about Rust v/s C++. Actually, it’s not “Rust v/s C++” as in comparison of the languages, but I just want a language for understanding the underpinnings of deep learning algorithms. I want to build them from scratch or atleast try, so that I have a better understanding. One of my favorite physicists, &lt;a href=&quot;https://en.wikipedia.org/wiki/Richard_Feynman&quot;&gt;Richard Feynman&lt;/a&gt; said something I resonate with a lot:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;“What I cannot create, I do not understand.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, my search for a language begun. Let me tell you this, I really love &lt;strong&gt;Python&lt;/strong&gt;. It’s one language I really am very comfortable with and Python was what I used to get into data science (not that there were many others). Python was simple and easy. However, I wanted to do some low level programming. Enter &lt;strong&gt;C++&lt;/strong&gt;. C was my first language way back in school, then C++ &amp;amp; Java. However, it has been years since I actually did something worthwhile with them. I did use Java in my undergrad but it wasn’t as much. Then came Python which I learned as I wanted to get into DS, ML. And I fell in love!. After working with python for many months, one day I discovered that Python is not what is used in deployment! I was like what? really? So, then what?&lt;/p&gt;

&lt;p&gt;I found C++ was what most production systems used. In my CS undergrad we had a subject called &lt;strong&gt;Systems programming&lt;/strong&gt; in which we wrote assembly code on IBM 360. I really liked it, it was a pain in the ass to do things as simple as addition, substraction but it really made me understand how the code gets compiled and the internals of it. This started a love with low level programming, I always wanted to do build things from scratch but never got around to do it. It is something I wish I had done! I guess I never thought I could actually do it. But, life is too short for it. Now is the time I finally think of doing it.&lt;/p&gt;

&lt;p&gt;Okay, all that aside, I now have narrowed down my choices to Rust &amp;amp; C++. There are other like Swift and Julia. Maybe Julia is more suited to this. But as I said I want to do it with a low level programming language. It would be shit-hard, but I want to challenge myself and if I can do atleast half of it, this would increase my confidence ten-fold. &lt;a href=&quot;https://en.wikipedia.org/wiki/Sundar_Pichai&quot;&gt;Sundar Pichai&lt;/a&gt; in one of his interview said,&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;“Try solving the hardest problem first, if you can then the easier ones will follow”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I did extensive research and found: If I use C++, there’s a job market out there where I can transfer my C++ skills. On the other hand Rust is a pretty young language. But the thing is I gravitate more to Rust &amp;amp; the heart wants what it wants. Naturally, I went through all the blogs and reddit. There were two groups of people. The first kind termed rust as a revolution, as something they called a &lt;strong&gt;memory safe&lt;/strong&gt; language and gave C++ a lot of flak. The second ones said it’s never gonna replace C &amp;amp; C++ anytime soon, pretty correct actually since a lot of code bases is all C &amp;amp; C++. But, code safety with what I was able to understand is basically just bad code. Rust provides a stricter compliler check like you can’t simple pass values around. So what do I do?&lt;/p&gt;

&lt;p&gt;I will take my chance &amp;amp; go with Rust ❤&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;

&lt;h1 id=&quot;update&quot;&gt;(UPDATE)&lt;/h1&gt;

&lt;p&gt;Wasn’t as simple as I thought 😅&lt;/p&gt;

&lt;p&gt;This is an update on the Rust v/s C++ post. It’s been hours I have been hacking through, reading everything I can find about Rust in ML/DL. It won’t be hard to say that most of them are abandoned. Some are still on but it seems like, there’s no way they are comaprable to C++ alternatives. Without much of a community around, it’s been pretty hard to get through anything or maybe I haven’t searched enough. I also had a discussion with my friends who are into ML &amp;amp; they suggested me to go for C++. Let’s come to what are the current examples in Rust. The best one I found was &lt;a href=&quot;https://github.com/huggingface/tokenizers&quot;&gt;&lt;strong&gt;huggingface tokenizers&lt;/strong&gt;&lt;/a&gt;. There were also crates like &lt;a href=&quot;https://github.com/LaurentMazare/tch-rs&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tch-rs&lt;/code&gt;&lt;/a&gt; which provide Rust bindings for C++ torch api.&lt;/p&gt;

&lt;p&gt;So, what is the state of rust in ML/DL? It’s progressing slowly and steadily, but way further from maturity. It’s very young and I guess someday we will be able to use Rust for ML/DL, but as of now I think am going to give it a pass. I know it feels like giving up, trust me even I felt so, but the fact is I will be working a full time job as a &lt;ins&gt;&lt;em&gt;SDE at TCS&lt;/em&gt;&lt;/ins&gt; soon. With a full time job, I need to be more cautious with how I use my time or spend my energies. While it’s a lovely idea to explore my fantasies but I guess I should be productive at the same time. Also, I will be working with java alot at TCS so that would be like one more langugae added to the mix. In the end, there’s no effective learning. Lately, by thinking through things I have learnt that I tend to go for new things and fancy stuff. But actually that’s not what’s important. Whatever you do,  you need &lt;strong&gt;rock solid&lt;/strong&gt; fundamentals. Tooling is trivial as long as you really know what you’re doing. So, I will be giving Rust a pass for now. But definitely one day I will come back to visit rust once again. Till then rather than learning a new language, I will stick what I have atleast some experience with, .i.e. &lt;strong&gt;Python, C++ or Java&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey there! 👋 Today, let’s discuss about Rust v/s C++. Actually, it’s not “Rust v/s C++” as in comparison of the languages, but I just want a language for understanding the underpinnings of deep learning algorithms. I want to build them from scratch or atleast try, so that I have a better understanding. One of my favorite physicists, Richard Feynman said something I resonate with a lot: “What I cannot create, I do not understand.”</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/rustvscpp.jpg" /><media:content medium="image" url="abhishekswain.me/images/rustvscpp.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Importance of a proper posture</title><link href="abhishekswain.me/health/lifestyle/2020/07/10/importance-of-posture.html" rel="alternate" type="text/html" title="Importance of a proper posture" /><published>2020-07-10T00:00:00-05:00</published><updated>2020-07-10T00:00:00-05:00</updated><id>abhishekswain.me/health/lifestyle/2020/07/10/importance-of-posture</id><content type="html" xml:base="abhishekswain.me/health/lifestyle/2020/07/10/importance-of-posture.html">&lt;p&gt;Today I want to talk about something I had a really bad time with. You must have already guessed from the title, I am going to talk to you about why it’s important to maintain a good posture while doing whatever is that you do, but I will talk to you mostly from programmer point of view.&lt;/p&gt;

&lt;p&gt;If you are like me who loves to learn stuff on your own all the time, especailly things like coding, &amp;amp; mostly CS related stuff you must be spending a lot of time infront of you laptop or PC. Now and then I have seen I struggle a lot with a lot of neck pain. So, finally I decided to do a little bit of research. I found out that if my laptop was on level with my eyes or a little above, then I could easily sit for a long time. On the other hand if it was below my eye level and I tried to hunch over and do stuff 7 out of 10 times I would have a stiff neck. And as I am writing this, I do have stiffness in my neck. It’s very painful. And I don’t want anyone else to suffer from this. So, let me tell you what I have been doing, it’s not much but I hope it will be of some use:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Watch this amazing video by a physiotherapist:&lt;/li&gt;
&lt;/ol&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2NOsE-VPpkE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;It did me a world of good especially the last exercise.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Apply pain relieving spray or apply balm, I applied &lt;a href=&quot;https://www.flipkart.com/cipla-omni-gel-spray/p/itmebzh8xmhqhycv&quot;&gt;omnigel&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are also really good articles explaining why it happens and how you can remedy it. Like this one: &lt;a href=&quot;https://www.healthline.com/health/neck-pain&quot;&gt;Neck Pain: Possible Causes and How to Treat It&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.barringtonortho.com/blog/the-importance-of-posture&quot;&gt;The Importance of Posture&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I would also like to tell you what one of my favorite school principals sister Innocentia told me, “Never take a chance with your health, if you’re healthy then things can be done at a later time. But if you cripple yourself today maybe you won’t be able to do it ever again”.&lt;/p&gt;

&lt;p&gt;Thank you for reading !&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I want to talk about something I had a really bad time with. You must have already guessed from the title, I am going to talk to you about why it’s important to maintain a good posture while doing whatever is that you do, but I will talk to you mostly from programmer point of view.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/posture.jpg" /><media:content medium="image" url="abhishekswain.me/images/posture.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">questus ordo in rebus</title><link href="abhishekswain.me/roadmap/books/2020/07/09/roadmap.html" rel="alternate" type="text/html" title="questus ordo in rebus" /><published>2020-07-09T00:00:00-05:00</published><updated>2020-07-09T00:00:00-05:00</updated><id>abhishekswain.me/roadmap/books/2020/07/09/roadmap</id><content type="html" xml:base="abhishekswain.me/roadmap/books/2020/07/09/roadmap.html">&lt;p&gt;This is my first post here and I wanted it to be something I have wanted to do for the longest time. &lt;em&gt;questus ordo in rebus&lt;/em&gt; is latin for getting things in order. I was very naive to think that it was pretty simple to do and maybe it is for many people but guess I belong to the latter category where you gotta struggle to do it. Well the bottom line is, I want to get things in order. It’s not like I have not tried to do it before but there was just so much happening around me, I mean from classes, seminar, minor project to placements, major presentation etc that I couldn’t pause to think about where I am in life and what I want to do moving forward. So, this lockdown period for me was like brakes applied to a car moving at a great speed, it’s kind of pretty sudden and shakes you up but if you think about it maybe it was required?. I think that was the worst analogy I could come up with, but I really am not very good with words. Basically, this lockdown got me pausing and thinking. I wont lie, it was rather frustrating in the beginning because I was used to go walking, running &amp;amp; stuff I did because I wanted to be a “fit 💪 guy” but now that it has been quite sometime I feel it has done me a lot of good. Like I said maybe the brakes were required?. So, let’s begin !&lt;/p&gt;

&lt;p&gt;I feel like things I have learnt I know them pretty well but they seem to be in scatters. Well, not anymore, that ends today. Something which I love to do is read &amp;amp; read a lot. My school notebooks had this thing writetn on the back cover:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“Reading maketh a full man.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I used to think it was someone in my school who wrote it, but it actually is a quote by &lt;em&gt;Francis Bacon&lt;/em&gt;. It resonates with me alot. Reading actually fills your mind with a variety, so the next time you think about anything you look at it from a lot perspectives. And that is where we are going to start today. I have a lot of machine learning, deep learning, statistics, data science books, now this is very cool actually but it also is very overwhelming. Like I get really confused as to where to start. I want to read everything and I try to do it all at once and I end up not reading anything. After screwing up numerous times I have a plan of what I want to do. I have decided I will read one applied book along with a more theoretical book.&lt;/p&gt;

&lt;p&gt;The options:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Applied machine learning &amp;amp; deep learning:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Approaching-Almost-Machine-Learning-Problem-ebook/dp/B089P13QHT/ref=sr_1_1?crid=2LES4AWAVBS0K&amp;amp;dchild=1&amp;amp;keywords=approaching+almost+any+machine+learning+problem&amp;amp;qid=1594338603&amp;amp;s=books&amp;amp;sprefix=approach%2Cstripbooks%2C339&amp;amp;sr=1-1&quot;&gt;Approaching almost any machine learning problem&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Hands-Machine-Learning-Scikit-Learn-Tensor/dp/9352139054?source=ps-sl-shoppingads-lpcontext&amp;amp;psc=1&quot;&gt;Hands-on machine learning with scikit-learn &amp;amp; tensorflow&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Python-Machine-Learning-scikit-learn-TensorFlow-ebook/dp/B07VBLX2W7/ref=sr_1_3?crid=PGEKJB22PT0P&amp;amp;dchild=1&amp;amp;keywords=python+machine+learning+sebastian+raschka&amp;amp;qid=1594338641&amp;amp;s=books&amp;amp;sprefix=python+machine+%2Cstripbooks%2C357&amp;amp;sr=1-3&quot;&gt;Python machine learning by sebestian raschka&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Programming-Collective-Intelligence-Building-Applications-ebook/dp/B00F8QDZWG/ref=sr_1_1?crid=7CSA6SJS295A&amp;amp;dchild=1&amp;amp;keywords=programming+collective+intelligence&amp;amp;qid=1594338686&amp;amp;s=books&amp;amp;sprefix=programming+collec%2Cstripbooks%2C353&amp;amp;sr=1-1&quot;&gt;Programming collective intelligence&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Theoretical books:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://users.isr.ist.utl.pt/~wurmd/Livros/school/Bishop%20-%20Pattern%20Recognition%20And%20Machine%20Learning%20-%20Springer%20%202006.pdf&quot;&gt;PRML&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://web4.cs.ucl.ac.uk/staff/D.Barber/textbook/090310.pdf&quot;&gt;BRML&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://web.stanford.edu/~hastie/ElemStatLearn/#:~:text=Elements%20of%20Statistical%20Learning%3A%20data%20mining%2C%20inference%2C%20and%20prediction.&quot;&gt;ESLR&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://faculty.marshall.usc.edu/gareth-james/ISL/&quot;&gt;ISLR(has code examples in R)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Professor Michael I. Jordan’s &lt;a href=&quot;https://honglangwang.wordpress.com/2014/12/30/machine-learning-books-suggested-by-michael-i-jordan-from-berkeley/&quot;&gt;reading list&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&amp;amp; list continues…………..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what are my choices?&lt;/p&gt;

&lt;p&gt;After a lot of research I have decided to go for Hands-on ML &amp;amp; for theory I chose ESLR. I will give my best to it and try and keep posting here about my progress.&lt;/p&gt;

&lt;p&gt;Wait a minute! Aren’t we missing something? The younger me would have stopped right here but, I now am a little sensible and I realise no amount of book reading will do me any good if I don’t code and build things up. Enter &lt;strong&gt;Kaggle&lt;/strong&gt;. Besides reading stuff I will try and spend my time implementing things in kaggle! Let’s see how it goes! See ya.&lt;/p&gt;

&lt;p&gt;PS: I have another dream of building a deep learning library using rust, I really wanna learn about it. That’s for another post !&lt;/p&gt;

&lt;p&gt;Thank you for reading !&lt;/p&gt;</content><author><name></name></author><summary type="html">This is my first post here and I wanted it to be something I have wanted to do for the longest time. questus ordo in rebus is latin for getting things in order. I was very naive to think that it was pretty simple to do and maybe it is for many people but guess I belong to the latter category where you gotta struggle to do it. Well the bottom line is, I want to get things in order. It’s not like I have not tried to do it before but there was just so much happening around me, I mean from classes, seminar, minor project to placements, major presentation etc that I couldn’t pause to think about where I am in life and what I want to do moving forward. So, this lockdown period for me was like brakes applied to a car moving at a great speed, it’s kind of pretty sudden and shakes you up but if you think about it maybe it was required?. I think that was the worst analogy I could come up with, but I really am not very good with words. Basically, this lockdown got me pausing and thinking. I wont lie, it was rather frustrating in the beginning because I was used to go walking, running &amp;amp; stuff I did because I wanted to be a “fit 💪 guy” but now that it has been quite sometime I feel it has done me a lot of good. Like I said maybe the brakes were required?. So, let’s begin !</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/discipline.jpg" /><media:content medium="image" url="abhishekswain.me/images/discipline.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>