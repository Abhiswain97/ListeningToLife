<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="abhishekswain.me/feed.xml" rel="self" type="application/atom+xml" /><link href="abhishekswain.me/" rel="alternate" type="text/html" /><updated>2020-07-28T11:13:51-05:00</updated><id>abhishekswain.me/feed.xml</id><title type="html">Listening To Life</title><subtitle>Pleasure of finding things out!</subtitle><entry><title type="html">Welcome, Julia!</title><link href="abhishekswain.me/machine%20learning/maths/2020/07/28/Logistic_regression.html" rel="alternate" type="text/html" title="Welcome, Julia!" /><published>2020-07-28T00:00:00-05:00</published><updated>2020-07-28T00:00:00-05:00</updated><id>abhishekswain.me/machine%20learning/maths/2020/07/28/Logistic_regression</id><content type="html" xml:base="abhishekswain.me/machine%20learning/maths/2020/07/28/Logistic_regression.html">&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelimitedFiles&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Random&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Plots&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DelimitedFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readdlm&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Users&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Abhishek Swain&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Desktop&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Julia_ML&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;data_banknote_authentication.txt&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See the first 5 rows of the given array&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; head&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;head (generic function with 1 method)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5×5 Array{Float64,2}:
 3.6216    8.6661  -2.8073  -0.44699  0.0
 4.5459    8.1674  -2.4586  -1.4621   0.0
 3.866    -2.6383   1.9242   0.10645  0.0
 3.4566    9.5228  -4.0112  -3.5944   0.0
 0.32924  -4.4552   4.5718  -0.9888   0.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;splitting-into-train--test-set&quot;&gt;Splitting into train &amp;amp; test set&lt;/h2&gt;
&lt;p&gt;splits the data into train and test set&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; train_test_split&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;train_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;test_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Matrix&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_idx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test_idx&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;train_test_split (generic function with 2 methods)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mathematical-expression-of-the-algorithm&quot;&gt;&lt;strong&gt;Mathematical expression of the algorithm&lt;/strong&gt;:&lt;/h2&gt;

&lt;p&gt;For one example $x^{(i)}$:
$z^{(i)} = w^T x^{(i)} + b \tag{1}$
$\hat{y}^{(i)} = a^{(i)} = sigmoid(z^{(i)})\tag{2}$ 
$\mathcal{L}(a^{(i)}, y^{(i)}) =  - y^{(i)}  \log(a^{(i)}) - (1-y^{(i)} )  \log(1-a^{(i)})\tag{3}$&lt;/p&gt;

&lt;p&gt;The cost is then computed by summing over all training examples:
$J = \frac{1}{m} \sum_{i=1}^m \mathcal{L}(a^{(i)}, y^{(i)})\tag{6}$&lt;/p&gt;

&lt;h2 id=&quot;sigmoid&quot;&gt;Sigmoid&lt;/h2&gt;
&lt;p&gt;Applies sigmoid to the vector&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;σ(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Compute the sigmoid of z
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;σ (generic function with 1 method)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;random-initialization&quot;&gt;Random initialization&lt;/h2&gt;
&lt;p&gt;Initialize &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; with with random values between (0, 1)&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; initialize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    This function creates a vector of zeros of shape (dim, 1) for w and initializes b to 0.
    
    Argument:
    dim -- size of the w vector we want (or number of parameters in this case)
    
    Returns:
    w -- initialized vector of shape (dim, 1)
    b -- initialized scalar (corresponds to the bias)
    &quot;&quot;&quot;&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isa&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;isa&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;initialize (generic function with 1 method)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;notation&quot;&gt;Notation&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;According to our notation, &lt;code class=&quot;highlighter-rouge&quot;&gt;X&lt;/code&gt; is of shape &lt;em&gt;(num_features, num_examples)&lt;/em&gt;, in our case that is (4, 343). So, we need to reshape our &lt;code class=&quot;highlighter-rouge&quot;&gt;X&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt; is the number of tranining examples.&lt;/li&gt;
  &lt;li&gt;Similarly, &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; is a row vector or as Julia likes to call it &lt;code class=&quot;highlighter-rouge&quot;&gt;Array{Float64, 2}&lt;/code&gt; of shape &lt;em&gt;(1, num_examples)&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(4, 343)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;343
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reshape&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1×343 Array{Float64,2}:
 0.0  1.0  1.0  0.0  0.0  1.0  0.0  0.0  …  0.0  1.0  0.0  1.0  1.0  0.0  1.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;undef&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;343&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;forward-and-backward-propagation&quot;&gt;Forward and Backward propagation&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;propagate&lt;/code&gt; function is the function at the heart of the algorithm. This does the &lt;strong&gt;forward prop -&amp;gt; calculate cost -&amp;gt; back-prop&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Forward Propagation:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You get X&lt;/li&gt;
  &lt;li&gt;You compute $A = \sigma(w^T X + b) = (a^{(1)}, a^{(2)}, …, a^{(m-1)}, a^{(m)})$&lt;/li&gt;
  &lt;li&gt;You calculate the cost function: $J = -\frac{1}{m}\sum_{i=1}^{m}y^{(i)}\log(a^{(i)})+(1-y^{(i)})\log(1-a^{(i)})$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the two formulas you will be using:&lt;/p&gt;

&lt;p&gt;$\frac{\partial J}{\partial w} = \frac{1}{m}X(A-Y)^T\tag{7}$$
$\frac{\partial J}{\partial b} = \frac{1}{m} \sum_{i=1}^m (a^{(i)}-y^{(i)})\tag{8}$&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt; propagate&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Implement the cost function and its gradient for the propagation explained above

    Arguments:
    w -- weights, a numpy array of size (num_px * num_px * 3, 1)
    b -- bias, a scalar
    X -- data of size (num_px * num_px * 3, number of examples)
    Y -- true &quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; vector (containing 0 if non-cat, 1 if cat) of size (1, number of examples)

    Return:
    cost -- negative log-likelihood cost for logistic regression
    dw -- gradient of the loss with respect to w, thus same shape as w
    db -- gradient of the loss with respect to b, thus same shape as b
    
    Tips:
    - Write your code step by step for the propagation
    &quot;&quot;&quot;&lt;/span&gt;
    
    &lt;span class=&quot;c&quot;&gt;# Forward prop&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;σ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Z&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    
    &lt;span class=&quot;c&quot;&gt;# Compute cost&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;𝒥&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;𝒥&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
    
    &lt;span class=&quot;c&quot;&gt;# Back-prop&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@assert&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
        
    &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dz&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;err&quot;&gt;𝒥&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;propagate (generic function with 1 method)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;([0.2004128179916913; 0.7269986373814084; 0.7116663451002054; 0.6867182335637176], 0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;model&quot;&gt;Model&lt;/h2&gt;
&lt;p&gt;Combine all functions to train the model
&lt;br /&gt;
Learning rate: $\alpha = 0.09$, iterations(epochs): 150&lt;/p&gt;

&lt;p&gt;Here is something I love about Julia. It’s that you can directly use symbols as variables 😍. Doesn’t it look awesome?&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;α&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.009&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float64&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;undef&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;
    
    &lt;span class=&quot;err&quot;&gt;𝒥&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;propagate&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;𝒥&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;α&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dw&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;α&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt;
        
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cost after iteration &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;i: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;𝒥&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cost after iteration 1: 2.3740023073890866
cost after iteration 2: 2.3462116695406623
cost after iteration 3: 2.318509301558028
cost after iteration 4: 2.2908975633354554
cost after iteration 5: 2.2633788921961275
cost after iteration 6: 2.235955804801441
cost after iteration 7: 2.2086308999424062
cost after iteration 8: 2.1814068611217134
cost after iteration 9: 2.154286458914731
cost after iteration 10: 2.127272553920777
cost after iteration 11: 2.1003680993236715
cost after iteration 12: 2.0735761437103326
cost after iteration 13: 2.0468998340349147
cost after iteration 14: 2.02034241843537
cost after iteration 15: 1.9939072492856498
cost after iteration 16: 1.9675977862410752
cost after iteration 17: 1.9414175993047091
cost after iteration 18: 1.9153703719657098
cost after iteration 19: 1.889459904350958
cost after iteration 20: 1.8636901163469042
cost after iteration 21: 1.8380650507400902
cost after iteration 22: 1.8125888762724895
cost after iteration 23: 1.7872658906347527
cost after iteration 24: 1.7621005233341813
cost after iteration 25: 1.7370973384132224
cost after iteration 26: 1.712261036954804
cost after iteration 27: 1.687596459348754
cost after iteration 28: 1.6631085872491747
cost after iteration 29: 1.6388025451803738
cost after iteration 30: 1.6146836017227515
cost after iteration 31: 1.590757170225785
cost after iteration 32: 1.567028808982005
cost after iteration 33: 1.5435042207992091
cost after iteration 34: 1.5201892519078846
cost after iteration 35: 1.4970898901396426
cost after iteration 36: 1.4742122623148985
cost after iteration 37: 1.4515626307794567
cost after iteration 38: 1.4291473890317374
cost after iteration 39: 1.4069730563873706
cost after iteration 40: 1.3850462716301533
cost after iteration 41: 1.3633737856049706
cost after iteration 42: 1.3419624527121798
cost after iteration 43: 1.320819221270383
cost after iteration 44: 1.299951122719665
cost after iteration 45: 1.279365259645181
cost after iteration 46: 1.2590687926069641
cost after iteration 47: 1.2390689257689431
cost after iteration 48: 1.219372891326446
cost after iteration 49: 1.1999879327368639
cost after iteration 50: 1.180921286762925
cost after iteration 51: 1.1621801643408496
cost after iteration 52: 1.1437717302868156
cost after iteration 53: 1.1257030818538676
cost after iteration 54: 1.1079812261472688
cost after iteration 55: 1.090613056399182
cost after iteration 56: 1.073605327093288
cost after iteration 57: 1.0569646279166243
cost after iteration 58: 1.040697356500272
cost after iteration 59: 1.024809689893287
cost after iteration 60: 1.00930755469731
cost after iteration 61: 0.9941965957744495
cost after iteration 62: 0.9794821434313243
cost after iteration 63: 0.9651691789807894
cost after iteration 64: 0.9512622985935968
cost after iteration 65: 0.937765675379124
cost after iteration 66: 0.9246830196811211
cost after iteration 67: 0.9120175376445453
cost after iteration 68: 0.8997718882052996
cost after iteration 69: 0.8879481387767842
cost after iteration 70: 0.8765477200543355
cost after iteration 71: 0.8655713805269151
cost after iteration 72: 0.8550191414681693
cost after iteration 73: 0.8448902533664484
cost after iteration 74: 0.8351831549332133
cost after iteration 75: 0.8258954359868429
cost after iteration 76: 0.8170238056283772
cost after iteration 77: 0.8085640671913646
cost after iteration 78: 0.8005111014454732
cost after iteration 79: 0.7928588594516951
cost after iteration 80: 0.7856003662995654
cost after iteration 81: 0.7787277367034907
cost after iteration 82: 0.7722322031028225
cost after iteration 83: 0.766104156512534
cost after iteration 84: 0.7603331999287829
cost after iteration 85: 0.7549082136319242
cost after iteration 86: 0.7498174312775551
cost after iteration 87: 0.7450485252532479
cost after iteration 88: 0.7405886994319086
cost after iteration 89: 0.7364247871943844
cost after iteration 90: 0.7325433524392283
cost after iteration 91: 0.7289307912533028
cost after iteration 92: 0.7255734319813323
cost after iteration 93: 0.722457631595763
cost after iteration 94: 0.7195698665139034
cost after iteration 95: 0.716896816316328
cost after iteration 96: 0.7144254391657412
cost after iteration 97: 0.7121430380857576
cost after iteration 98: 0.7100373176131921
cost after iteration 99: 0.7080964306677431
cost after iteration 100: 0.7063090157759134
cost after iteration 101: 0.7046642250328173
cost after iteration 102: 0.7031517433816896
cost after iteration 103: 0.701761799935867
cost after iteration 104: 0.700485172164231
cost after iteration 105: 0.6993131838133823
cost after iteration 106: 0.6982376974542951
cost after iteration 107: 0.6972511025247742
cost after iteration 108: 0.6963462996986156
cost after iteration 109: 0.6955166823545526
cost after iteration 110: 0.6947561158487165
cost after iteration 111: 0.6940589152185364
cost after iteration 112: 0.6934198218678441
cost after iteration 113: 0.6928339797057265
cost after iteration 114: 0.6922969111377242
cost after iteration 115: 0.6918044932390484
cost after iteration 116: 0.6913529343765882
cost after iteration 117: 0.690938751490183
cost after iteration 118: 0.6905587481941259
cost after iteration 119: 0.6902099938169665
cost after iteration 120: 0.6898898034611582
cost after iteration 121: 0.6895957191333673
cost after iteration 122: 0.6893254919709155
cost after iteration 123: 0.6890770655691838
cost after iteration 124: 0.6888485603983463
cost after iteration 125: 0.6886382592849551
cost after iteration 126: 0.6884445939241216
cost after iteration 127: 0.688266132380874
cost after iteration 128: 0.6881015675342764
cost after iteration 129: 0.6879497064146782
cost after iteration 130: 0.6878094603827019
cost after iteration 131: 0.6876798360979788
cost after iteration 132: 0.6875599272259485
cost after iteration 133: 0.6874489068320602
cost after iteration 134: 0.6873460204142585
cost after iteration 135: 0.6872505795265694
cost after iteration 136: 0.6871619559488045
cost after iteration 137: 0.6870795763597692
cost after iteration 138: 0.6870029174738363
cost after iteration 139: 0.6869315016032344
cost after iteration 140: 0.6868648926109056
cost after iteration 141: 0.6868026922212128
cost after iteration 142: 0.6867445366581466
cost after iteration 143: 0.6866900935829536
cost after iteration 144: 0.6866390593052681
cost after iteration 145: 0.6865911562438682
cost after iteration 146: 0.6865461306151157
cost after iteration 147: 0.6865037503289286
cost after iteration 148: 0.6864638030738268
cost after iteration 149: 0.6864260945741462
cost after iteration 150: 0.6863904470039756
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;plotting&quot;&gt;Plotting&lt;/h2&gt;
&lt;p&gt;For plotting we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;Plots&lt;/code&gt; package.&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gr&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# backend&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Cost v/s iteration&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;negative log-likelihood&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xlabel!&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;iteration&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ylabel!&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cost&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Abhiswain97/MyBlog/blob/master/images/julia_loss.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-julia highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">using DelimitedFiles using Random using Plots</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/julia.jpg" /><media:content medium="image" url="abhishekswain.me/images/julia.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Statistics and Linear Algebra for ML/DL</title><link href="abhishekswain.me/machine%20learning/maths/books/2020/07/19/statsandlinalg.html" rel="alternate" type="text/html" title="Statistics and Linear Algebra for ML/DL" /><published>2020-07-19T00:00:00-05:00</published><updated>2020-07-19T00:00:00-05:00</updated><id>abhishekswain.me/machine%20learning/maths/books/2020/07/19/statsandlinalg</id><content type="html" xml:base="abhishekswain.me/machine%20learning/maths/books/2020/07/19/statsandlinalg.html">&lt;p&gt;Hey there! 👋😃&lt;/p&gt;

&lt;p&gt;Today, I am gonna talk about something I have been meaning to do for the longest amout of time. I am now many months into my ML journey, so I have now quite a bit of experience. So, I have a basic understanding of the ML/DL algos but it always feels like I lack in explaining why something works over the others. This is where the mathematical part comes in. Having a sound understanding of the statistical methods is necessary when the explainability comes in. Inorder to do that I have decided to start a &lt;ins&gt;&lt;em&gt;Probability &amp;amp; Statistics&lt;/em&gt;&lt;/ins&gt; and &lt;ins&gt;&lt;em&gt;Linear Algebra&lt;/em&gt;&lt;/ins&gt; series. This way I would not only be able to learn both but also share with the community which gave me so much. Also, it’s a part of the &lt;em&gt;“Feynmann technique”&lt;/em&gt; which I am so fond of.&lt;/p&gt;

&lt;h1 id=&quot;probability--statistics&quot;&gt;Probability &amp;amp; Statistics&lt;/h1&gt;

&lt;h2 id=&quot;books&quot;&gt;Books:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Business-Statistics-Contemporary-Decision-Making/dp/8126521546/ref=pd_sbs_14_2/257-8608761-1170154?_encoding=UTF8&amp;amp;pd_rd_i=8126521546&amp;amp;pd_rd_r=b4f7e949-0d73-4549-b120-e86fb1f606e6&amp;amp;pd_rd_w=VJgyd&amp;amp;pd_rd_wg=doo7E&amp;amp;pf_rd_p=00b53f5d-d1f8-4708-89df-2987ccce05ce&amp;amp;pf_rd_r=RQEDQA024GQ7HPVACRYS&amp;amp;psc=1&amp;amp;refRID=RQEDQA024GQ7HPVACRYS&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Business statistics for contemporary decision making&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Mathematical-Statistics-Applications-Dennis-Wackerly/dp/0495110817/ref=sr_1_2?dchild=1&amp;amp;keywords=mathematical+statistics+with+applications+wackerly&amp;amp;qid=1595177027&amp;amp;s=books&amp;amp;sr=1-2&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Mathematical Statistics with applications&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/All-Statistics-Statistical-Inference-Springer/dp/0387402721&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;All of statistics&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lectures&quot;&gt;Video lectures:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=KbB0FjPg0mw&amp;amp;list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo&quot;&gt;&lt;em&gt;Harvard Stats 110&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9FtHB7V14Fo&amp;amp;list=PL5102DFDC6790F3D0&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Professor Leonard’s lectures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=zcMnu-3wkWo&amp;amp;list=PLTB9VQq8WiaCBK2XrtYn5t9uuPdsNm7YE&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Larry Wasserman’s lectures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;linear-algebra&quot;&gt;Linear Algebra&lt;/h1&gt;

&lt;h2 id=&quot;books-1&quot;&gt;Books:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Introduction-Linear-Algebra-Gilbert-Strang/dp/0980232775/ref=sr_1_5?crid=O4QLD0HT1F7A&amp;amp;dchild=1&amp;amp;keywords=gilbert+strang+linear+algebra&amp;amp;qid=1595177337&amp;amp;s=books&amp;amp;sprefix=gilbert+s%2Cstripbooks%2C426&amp;amp;sr=1-5&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Introduction to Linear Algebra (Gilbert Strang)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;video-lectures-1&quot;&gt;Video lectures:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=7UJ4CFRGd-U&amp;amp;list=PL221E2BBF13BECF6C&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Gilbert Strang lectures&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;applied-resources&quot;&gt;Applied resources&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;My favorite: &lt;a href=&quot;http://faculty.marshall.usc.edu/gareth-james/ISL/&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;An Introduction to Statistical Learning: With Applications in R&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Practical-Statistics-Data-Scientists-Essential/dp/9352135652&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Practical Statistics for Data Scientists: 50+ Essential Concepts Using R and Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://greenteapress.com/thinkstats2/thinkstats2.pdf&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Think Stats(Learn stats using Python)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pabloinsente.github.io/intro-linear-algebra&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Introduction to Linear Algebra for Applied Machine Learning with Python&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Peter Norvig’s: &lt;a href=&quot;https://github.com/norvig/pytudes/blob/master/ipynb/Probability.ipynb&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;A Concrete Introduction to Probability (using Python)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I read the material and understand a concept I will write an article about it. It will be two parellel series one for each. If you want to follow it then all of it will be posted on my &lt;a href=&quot;https://medium.com/@abhi08as.as&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Medium&lt;/strong&gt;&lt;/a&gt;. I will see you there!&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;

&lt;h1 id=&quot;update21072020&quot;&gt;Update(21/07/2020)&lt;/h1&gt;

&lt;p&gt;I need to strike a balance between theory and application. I actually read few chapters of the book but found that I am more into the &lt;em&gt;code-first&lt;/em&gt; approach to learning. So, there’s a slight modification to my plan. For linear algebra, I am using &lt;a href=&quot;https://www.youtube.com/watch?v=8iGzBMboA0I&amp;amp;list=PLtmWHNX-gukIc92m1K0P6bIOnZb-mg0hY&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;Computational linear algebra by Rachel Thomas&lt;/em&gt;&lt;/a&gt;. I have just begun and I already like it. I will use it parellely with Glibert Strang’s linear algebra course.&lt;/p&gt;

&lt;p&gt;For proabability &amp;amp; stats: &lt;em&gt;Think Stats&lt;/em&gt; + any theory course mentioned.&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey there! 👋😃</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/statslinalg.jpg" /><media:content medium="image" url="abhishekswain.me/images/statslinalg.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Introduction to Machine Learning course (Refreshing the maths)</title><link href="abhishekswain.me/machine%20learning/2020/07/14/nptelML.html" rel="alternate" type="text/html" title="Introduction to Machine Learning course (Refreshing the maths)" /><published>2020-07-14T00:00:00-05:00</published><updated>2020-07-14T00:00:00-05:00</updated><id>abhishekswain.me/machine%20learning/2020/07/14/nptelML</id><content type="html" xml:base="abhishekswain.me/machine%20learning/2020/07/14/nptelML.html">&lt;p&gt;Hey there! 👋😃&lt;/p&gt;

&lt;p&gt;Today I want to talk about revisiting Machine learning especailly with a focus on underlying mathematics. Well let me tell you, I have just found the perfect course for it. It’s the &lt;a href=&quot;https://onlinecourses.nptel.ac.in/noc20_cs73/course?user_email=abhi08as.as@gmail.com&quot;&gt;Introduction to Machine Learning&lt;/a&gt; course. It’s taught by Prof &lt;a href=&quot;https://www.linkedin.com/in/balaraman-ravindran-427a307/&quot;&gt;Balaraman Ravindran&lt;/a&gt;. He is someone from whom I have really learnt a lot. And infact the course is by IIT Madras, it’s pretty close to my heart because my introduction to machine learning class almost a year ago was by IIT Madras, not this one but &lt;a href=&quot;https://nptel.ac.in/courses/106/106/106106198/&quot;&gt;&lt;em&gt;this&lt;/em&gt;&lt;/a&gt; one 🤗. I always recommend it to people. Something I’m really in love with these days is &lt;a href=&quot;https://course.fast.ai/&quot;&gt;&lt;em&gt;fastai&lt;/em&gt;&lt;/a&gt; 🤗🤗. I am really in love with Jeremy’s top-down method of teaching. The best thing abouut fastai is you build the whole of PyTorch from ground up. It just doesn’t teach you Deep Learning, but also makes you a better Python programmer. I recommend it to everyone. Fastai also has ML and Computational linear algebra courses. I haven’t gone through them but I bet they are as awesome as the Deep learning one.&lt;/p&gt;

&lt;p&gt;Anyways, I have enrolled myself into the NPTEL ML course, so that it can be a refresher. I have my semesters coming up and it starts from the day my sems begin that is 20 &amp;amp; also the whole TCS onboarding to follow but, come on when did we go by the convention? Ofcourse amid all the chaos I am gonna try, that’s how we roll. Let’s see how it turns out! As always anything and evrything I do I will update it here. Also, I was really confused about what to put on Medium and what here?. Needed to draw a line. I have decided that all &lt;ins&gt;&lt;em&gt;tutorials, build &amp;amp; learning journeys&lt;/em&gt;&lt;/ins&gt; go there. Everything except that goes here! Let the sems just get over &amp;amp; the fun will begin.&lt;/p&gt;

&lt;p&gt;I want to explore so many things and learn so much. Nothing makes me happier than sharing it with the community that I learnt from. 🤗 And teaching is the best way I have found to effectively learn things.&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;

&lt;h1 id=&quot;update-19072020&quot;&gt;(UPDATE 19/07/2020)&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/Abhiswain97/ListeningToLife/blob/master/images/revised_sched.png?raw=true&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The course was supposed to start from tomorrow but it has got rescheduled to semptember 14. Damn! that is 2 months away. So, need a change of plans. Actually, I had another plan in my mind for the whole maths refresher and getting to know the nitty gritty. The next post will be all about it.&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey there! 👋😃</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/inortoML.jpg" /><media:content medium="image" url="abhishekswain.me/images/inortoML.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Rust v/s C++ for Deep learning</title><link href="abhishekswain.me/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp.html" rel="alternate" type="text/html" title="Rust v/s C++ for Deep learning" /><published>2020-07-12T00:00:00-05:00</published><updated>2020-07-12T00:00:00-05:00</updated><id>abhishekswain.me/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp</id><content type="html" xml:base="abhishekswain.me/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp.html">&lt;p&gt;Hey there! 👋
&lt;br /&gt;
Today, let’s discuss about Rust v/s C++. Actually, it’s not “Rust v/s C++” as in comparison of the languages, but I just want a language for understanding the underpinnings of deep learning algorithms. I want to build them from scratch or atleast try, so that I have a better understanding. One of my favorite physicists, &lt;a href=&quot;https://en.wikipedia.org/wiki/Richard_Feynman&quot;&gt;Richard Feynman&lt;/a&gt; said something I resonate with a lot:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;“What I cannot create, I do not understand.”&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, my search for a language begun. Let me tell you this, I really love &lt;strong&gt;Python&lt;/strong&gt;. It’s one language I really am very comfortable with and Python was what I used to get into data science (not that there were many others). Python was simple and easy. However, I wanted to do some low level programming. Enter &lt;strong&gt;C++&lt;/strong&gt;. C was my first language way back in school, then C++ &amp;amp; Java. However, it has been years since I actually did something worthwhile with them. I did use Java in my undergrad but it wasn’t as much. Then came Python which I learned as I wanted to get into DS, ML. And I fell in love!. After working with python for many months, one day I discovered that Python is not what is used in deployment! I was like what? really? So, then what?&lt;/p&gt;

&lt;p&gt;I found C++ was what most production systems used. In my CS undergrad we had a subject called &lt;strong&gt;Systems programming&lt;/strong&gt; in which we wrote assembly code on IBM 360. I really liked it, it was a pain in the ass to do things as simple as addition, substraction but it really made me understand how the code gets compiled and the internals of it. This started a love with low level programming, I always wanted to do build things from scratch but never got around to do it. It is something I wish I had done! I guess I never thought I could actually do it. But, life is too short for it. Now is the time I finally think of doing it.&lt;/p&gt;

&lt;p&gt;Okay, all that aside, I now have narrowed down my choices to Rust &amp;amp; C++. There are other like Swift and Julia. Maybe Julia is more suited to this. But as I said I want to do it with a low level programming language. It would be shit-hard, but I want to challenge myself and if I can do atleast half of it, this would increase my confidence ten-fold. &lt;a href=&quot;https://en.wikipedia.org/wiki/Sundar_Pichai&quot;&gt;Sundar Pichai&lt;/a&gt; in one of his interview said,&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;“Try solving the hardest problem first, if you can then the easier ones will follow”&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I did extensive research and found: If I use C++, there’s a job market out there where I can transfer my C++ skills. On the other hand Rust is a pretty young language. But the thing is I gravitate more to Rust &amp;amp; the heart wants what it wants. Naturally, I went through all the blogs and reddit. There were two groups of people. The first kind termed rust as a revolution, as something they called a &lt;strong&gt;memory safe&lt;/strong&gt; language and gave C++ a lot of flak. The second ones said it’s never gonna replace C &amp;amp; C++ anytime soon, pretty correct actually since a lot of code bases is all C &amp;amp; C++. But, code safety with what I was able to understand is basically just bad code. Rust provides a stricter compliler check like you can’t simple pass values around. So what do I do?&lt;/p&gt;

&lt;p&gt;I will take my chance &amp;amp; go with Rust ❤&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;

&lt;h1 id=&quot;update&quot;&gt;(UPDATE)&lt;/h1&gt;

&lt;p&gt;Wasn’t as simple as I thought 😅&lt;/p&gt;

&lt;p&gt;This is an update on the Rust v/s C++ post. It’s been hours I have been hacking through, reading everything I can find about Rust in ML/DL. It won’t be hard to say that most of them are abandoned. Some are still on but it seems like, there’s no way they are comaprable to C++ alternatives. Without much of a community around, it’s been pretty hard to get through anything or maybe I haven’t searched enough. I also had a discussion with my friends who are into ML &amp;amp; they suggested me to go for C++. Let’s come to what are the current examples in Rust. The best one I found was &lt;a href=&quot;https://github.com/huggingface/tokenizers&quot;&gt;&lt;strong&gt;huggingface tokenizers&lt;/strong&gt;&lt;/a&gt;. There were also crates like &lt;a href=&quot;https://github.com/LaurentMazare/tch-rs&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tch-rs&lt;/code&gt;&lt;/a&gt; which provide Rust bindings for C++ torch api.&lt;/p&gt;

&lt;p&gt;So, what is the state of rust in ML/DL? It’s progressing slowly and steadily, but way further from maturity. It’s very young and I guess someday we will be able to use Rust for ML/DL, but as of now I think am going to give it a pass. I know it feels like giving up, trust me even I felt so, but the fact is I will be working a full time job as a &lt;ins&gt;&lt;em&gt;SDE at TCS&lt;/em&gt;&lt;/ins&gt; soon. With a full time job, I need to be more cautious with how I use my time or spend my energies. While it’s a lovely idea to explore my fantasies but I guess I should be productive at the same time. Also, I will be working with java alot at TCS so that would be like one more langugae added to the mix. In the end, there’s no effective learning. Lately, by thinking through things I have learnt that I tend to go for new things and fancy stuff. But actually that’s not what’s important. Whatever you do,  you need &lt;strong&gt;rock solid&lt;/strong&gt; fundamentals. Tooling is trivial as long as you really know what you’re doing. So, I will be giving Rust a pass for now. But definitely one day I will come back to visit rust once again. Till then rather than learning a new language, I will stick what I have atleast some experience with, .i.e. &lt;strong&gt;Python, C++ or Java&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As always, thank you for reading 😊😃!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey there! 👋 Today, let’s discuss about Rust v/s C++. Actually, it’s not “Rust v/s C++” as in comparison of the languages, but I just want a language for understanding the underpinnings of deep learning algorithms. I want to build them from scratch or atleast try, so that I have a better understanding. One of my favorite physicists, Richard Feynman said something I resonate with a lot: “What I cannot create, I do not understand.”</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/rustvscpp.jpg" /><media:content medium="image" url="abhishekswain.me/images/rustvscpp.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Importance of a proper posture</title><link href="abhishekswain.me/health/lifestyle/2020/07/10/importance-of-posture.html" rel="alternate" type="text/html" title="Importance of a proper posture" /><published>2020-07-10T00:00:00-05:00</published><updated>2020-07-10T00:00:00-05:00</updated><id>abhishekswain.me/health/lifestyle/2020/07/10/importance-of-posture</id><content type="html" xml:base="abhishekswain.me/health/lifestyle/2020/07/10/importance-of-posture.html">&lt;p&gt;Today I want to talk about something I had a really bad time with. You must have already guessed from the title, I am going to talk to you about why it’s important to maintain a good posture while doing whatever is that you do, but I will talk to you mostly from programmer point of view.&lt;/p&gt;

&lt;p&gt;If you are like me who loves to learn stuff on your own all the time, especailly things like coding, &amp;amp; mostly CS related stuff you must be spending a lot of time infront of you laptop or PC. Now and then I have seen I struggle a lot with a lot of neck pain. So, finally I decided to do a little bit of research. I found out that if my laptop was on level with my eyes or a little above, then I could easily sit for a long time. On the other hand if it was below my eye level and I tried to hunch over and do stuff 7 out of 10 times I would have a stiff neck. And as I am writing this, I do have stiffness in my neck. It’s very painful. And I don’t want anyone else to suffer from this. So, let me tell you what I have been doing, it’s not much but I hope it will be of some use:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Watch this amazing video by a physiotherapist:&lt;/li&gt;
&lt;/ol&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/2NOsE-VPpkE&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;It did me a world of good especially the last exercise.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Apply pain relieving spray or apply balm, I applied &lt;a href=&quot;https://www.flipkart.com/cipla-omni-gel-spray/p/itmebzh8xmhqhycv&quot;&gt;omnigel&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are also really good articles explaining why it happens and how you can remedy it. Like this one: &lt;a href=&quot;https://www.healthline.com/health/neck-pain&quot;&gt;Neck Pain: Possible Causes and How to Treat It&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://www.barringtonortho.com/blog/the-importance-of-posture&quot;&gt;The Importance of Posture&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I would also like to tell you what one of my favorite school principals sister Innocentia told me, “Never take a chance with your health, if you’re healthy then things can be done at a later time. But if you cripple yourself today maybe you won’t be able to do it ever again”.&lt;/p&gt;

&lt;p&gt;Thank you for reading !&lt;/p&gt;</content><author><name></name></author><summary type="html">Today I want to talk about something I had a really bad time with. You must have already guessed from the title, I am going to talk to you about why it’s important to maintain a good posture while doing whatever is that you do, but I will talk to you mostly from programmer point of view.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/posture.jpg" /><media:content medium="image" url="abhishekswain.me/images/posture.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">questus ordo in rebus</title><link href="abhishekswain.me/roadmap/books/2020/07/09/roadmap.html" rel="alternate" type="text/html" title="questus ordo in rebus" /><published>2020-07-09T00:00:00-05:00</published><updated>2020-07-09T00:00:00-05:00</updated><id>abhishekswain.me/roadmap/books/2020/07/09/roadmap</id><content type="html" xml:base="abhishekswain.me/roadmap/books/2020/07/09/roadmap.html">&lt;p&gt;This is my first post here and I wanted it to be something I have wanted to do for the longest time. &lt;em&gt;questus ordo in rebus&lt;/em&gt; is latin for getting things in order. I was very naive to think that it was pretty simple to do and maybe it is for many people but guess I belong to the latter category where you gotta struggle to do it. Well the bottom line is, I want to get things in order. It’s not like I have not tried to do it before but there was just so much happening around me, I mean from classes, seminar, minor project to placements, major presentation etc that I couldn’t pause to think about where I am in life and what I want to do moving forward. So, this lockdown period for me was like brakes applied to a car moving at a great speed, it’s kind of pretty sudden and shakes you up but if you think about it maybe it was required?. I think that was the worst analogy I could come up with, but I really am not very good with words. Basically, this lockdown got me pausing and thinking. I wont lie, it was rather frustrating in the beginning because I was used to go walking, running &amp;amp; stuff I did because I wanted to be a “fit 💪 guy” but now that it has been quite sometime I feel it has done me a lot of good. Like I said maybe the brakes were required?. So, let’s begin !&lt;/p&gt;

&lt;p&gt;I feel like things I have learnt I know them pretty well but they seem to be in scatters. Well, not anymore, that ends today. Something which I love to do is read &amp;amp; read a lot. My school notebooks had this thing writetn on the back cover:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“Reading maketh a full man.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I used to think it was someone in my school who wrote it, but it actually is a quote by &lt;em&gt;Francis Bacon&lt;/em&gt;. It resonates with me alot. Reading actually fills your mind with a variety, so the next time you think about anything you look at it from a lot perspectives. And that is where we are going to start today. I have a lot of machine learning, deep learning, statistics, data science books, now this is very cool actually but it also is very overwhelming. Like I get really confused as to where to start. I want to read everything and I try to do it all at once and I end up not reading anything. After screwing up numerous times I have a plan of what I want to do. I have decided I will read one applied book along with a more theoretical book.&lt;/p&gt;

&lt;p&gt;The options:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Applied machine learning &amp;amp; deep learning:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Approaching-Almost-Machine-Learning-Problem-ebook/dp/B089P13QHT/ref=sr_1_1?crid=2LES4AWAVBS0K&amp;amp;dchild=1&amp;amp;keywords=approaching+almost+any+machine+learning+problem&amp;amp;qid=1594338603&amp;amp;s=books&amp;amp;sprefix=approach%2Cstripbooks%2C339&amp;amp;sr=1-1&quot;&gt;Approaching almost any machine learning problem&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Hands-Machine-Learning-Scikit-Learn-Tensor/dp/9352139054?source=ps-sl-shoppingads-lpcontext&amp;amp;psc=1&quot;&gt;Hands-on machine learning with scikit-learn &amp;amp; tensorflow&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Python-Machine-Learning-scikit-learn-TensorFlow-ebook/dp/B07VBLX2W7/ref=sr_1_3?crid=PGEKJB22PT0P&amp;amp;dchild=1&amp;amp;keywords=python+machine+learning+sebastian+raschka&amp;amp;qid=1594338641&amp;amp;s=books&amp;amp;sprefix=python+machine+%2Cstripbooks%2C357&amp;amp;sr=1-3&quot;&gt;Python machine learning by sebestian raschka&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.amazon.in/Programming-Collective-Intelligence-Building-Applications-ebook/dp/B00F8QDZWG/ref=sr_1_1?crid=7CSA6SJS295A&amp;amp;dchild=1&amp;amp;keywords=programming+collective+intelligence&amp;amp;qid=1594338686&amp;amp;s=books&amp;amp;sprefix=programming+collec%2Cstripbooks%2C353&amp;amp;sr=1-1&quot;&gt;Programming collective intelligence&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Theoretical books:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://users.isr.ist.utl.pt/~wurmd/Livros/school/Bishop%20-%20Pattern%20Recognition%20And%20Machine%20Learning%20-%20Springer%20%202006.pdf&quot;&gt;PRML&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://web4.cs.ucl.ac.uk/staff/D.Barber/textbook/090310.pdf&quot;&gt;BRML&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://web.stanford.edu/~hastie/ElemStatLearn/#:~:text=Elements%20of%20Statistical%20Learning%3A%20data%20mining%2C%20inference%2C%20and%20prediction.&quot;&gt;ESLR&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://faculty.marshall.usc.edu/gareth-james/ISL/&quot;&gt;ISLR(has code examples in R)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Professor Michael I. Jordan’s &lt;a href=&quot;https://honglangwang.wordpress.com/2014/12/30/machine-learning-books-suggested-by-michael-i-jordan-from-berkeley/&quot;&gt;reading list&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&amp;amp; list continues…………..&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what are my choices?&lt;/p&gt;

&lt;p&gt;After a lot of research I have decided to go for Hands-on ML &amp;amp; for theory I chose ESLR. I will give my best to it and try and keep posting here about my progress.&lt;/p&gt;

&lt;p&gt;Wait a minute! Aren’t we missing something? The younger me would have stopped right here but, I now am a little sensible and I realise no amount of book reading will do me any good if I don’t code and build things up. Enter &lt;strong&gt;Kaggle&lt;/strong&gt;. Besides reading stuff I will try and spend my time implementing things in kaggle! Let’s see how it goes! See ya.&lt;/p&gt;

&lt;p&gt;PS: I have another dream of building a deep learning library using rust, I really wanna learn about it. That’s for another post !&lt;/p&gt;

&lt;p&gt;Thank you for reading !&lt;/p&gt;</content><author><name></name></author><summary type="html">This is my first post here and I wanted it to be something I have wanted to do for the longest time. questus ordo in rebus is latin for getting things in order. I was very naive to think that it was pretty simple to do and maybe it is for many people but guess I belong to the latter category where you gotta struggle to do it. Well the bottom line is, I want to get things in order. It’s not like I have not tried to do it before but there was just so much happening around me, I mean from classes, seminar, minor project to placements, major presentation etc that I couldn’t pause to think about where I am in life and what I want to do moving forward. So, this lockdown period for me was like brakes applied to a car moving at a great speed, it’s kind of pretty sudden and shakes you up but if you think about it maybe it was required?. I think that was the worst analogy I could come up with, but I really am not very good with words. Basically, this lockdown got me pausing and thinking. I wont lie, it was rather frustrating in the beginning because I was used to go walking, running &amp;amp; stuff I did because I wanted to be a “fit 💪 guy” but now that it has been quite sometime I feel it has done me a lot of good. Like I said maybe the brakes were required?. So, let’s begin !</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="abhishekswain.me/images/discipline.jpg" /><media:content medium="image" url="abhishekswain.me/images/discipline.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>