{
  
    
        "post0": {
            "title": "Hello, Julia!",
            "content": "Hey! This post is about my introduction to the world of Julia. I took this challenge of learning Julia and making something in it. Since Julia is pretty similar to Python, I made a hypothesis. That is can I learn julia and be up and running with something in two days? What I realised is, if you&#39;re from a python background and have some expereince in it, then learning Julia is going to be fun and breezy for you. So, here I am after my two day rendezvous with Julia. . So, what I used to learn Julia? I used resources from julia academy . What did I implement? I decided to go for one the resources I learnt deep learning from: Neural Networks and Deep Learning . Impemented the Julia version of Week 2 assignment of Neural Networks and Deep Learning course. . | It&#39;s not exactly that actually, I have applied the concepts to banknote authentication. . | Data is from UCI machine learning repository | Training is done, inference is on the way! | . I hope it&#39;s useful to you. It was a lot of fun and I am in love with Julia ‚ù§ . Let&#39;s begin! . using DelimitedFiles using Random using Plots . file = DelimitedFiles.readdlm(&quot;C: Users Abhishek Swain Desktop Julia_ML data_banknote_authentication.txt&quot;, &#39;,&#39;); . See the first 5 rows of the given array . function head(file) file[1:5, 1:5] end . head (generic function with 1 method) . head(file) . 5√ó5 Array{Float64,2}: 3.6216 8.6661 -2.8073 -0.44699 0.0 4.5459 8.1674 -2.4586 -1.4621 0.0 3.866 -2.6383 1.9242 0.10645 0.0 3.4566 9.5228 -4.0112 -3.5944 0.0 0.32924 -4.4552 4.5718 -0.9888 0.0 . Normalization . function normalize(file, num_cols) for i=1:num_cols file[:, i] /= sum(file[:, i]) end end . normalize (generic function with 1 method) . normalize(file, 4) . head(file) . 5√ó5 Array{Float64,2}: 0.00608586 0.00328576 -0.00146401 0.000273396 0.0 0.00763908 0.00309668 -0.00128216 0.000894277 0.0 0.00649655 -0.00100032 0.00100347 -6.51089e-5 0.0 0.00580858 0.00361058 -0.00209184 0.00219847 0.0 0.000553266 -0.0016892 0.0023842 0.000604788 0.0 . Splitting into train &amp; test set . splits the data into train and test set . function train_test_split(file, at=0.7) n = size(file, 1) idx = shuffle(1:n) train_idx = view(idx, 1:floor(Int, at*n)) test_idx = view(idx, (floor(Int, at*n)+1):n) file = convert(Matrix, file) return file[train_idx,:], file[test_idx,:] end . train_test_split (generic function with 2 methods) . data_train, data_test = train_test_split(file); X_train, y_train = data_train[:, 1:4], data_train[:, 5]; . Mathematical expression of the algorithm: . For one example $x^{(i)}$: $$z^{(i)} = w^T x^{(i)} + b tag{1}$$ $$ hat{y}^{(i)} = a^{(i)} = sigmoid(z^{(i)}) tag{2}$$ $$ mathcal{L}(a^{(i)}, y^{(i)}) = - y^{(i)} log(a^{(i)}) - (1-y^{(i)} ) log(1-a^{(i)}) tag{3}$$ . The cost is then computed by summing over all training examples: $$ J = frac{1}{m} sum_{i=1}^m mathcal{L}(a^{(i)}, y^{(i)}) tag{6}$$ . Sigmoid . Applies sigmoid to the vector . function œÉ(z) &quot;&quot;&quot; Compute the sigmoid of z &quot;&quot;&quot; return one(z) / (one(z) + exp(-z)) end . œÉ (generic function with 1 method) . Random initialization . Initialize w &amp; b with with random values between (0, 1) . function initialize(dim) &quot;&quot;&quot; This function creates a vector of zeros of shape (dim, 1) for w and initializes b to 0. Argument: dim -- size of the w vector we want (or number of parameters in this case) Returns: w -- initialized vector of shape (dim, 1) b -- initialized scalar (corresponds to the bias) &quot;&quot;&quot; w = zeros(dim, 1) b = 2 @assert(size(w) == (dim, 1)) @assert(isa(b, Float64) || isa(b, Int64)) return w, b end . initialize (generic function with 1 method) . Notation . According to our notation, X is of shape (num_features, num_examples), in our case that is (4, 343). So, we need to reshape our X. | m is the number of tranining examples. | Similarly, y is a row vector or as Julia likes to call it Array{Float64, 2} of shape (1, num_examples). | . X_train = reshape(X_train, (size(X_train, 2), size(X_train, 1))) size(X_train) . (4, 960) . m = size(X_train, 2) . 960 . y_train = reshape(y_train, (1, size(y_train, 1))) . 1√ó960 Array{Float64,2}: 0.0 0.0 0.0 1.0 0.0 0.0 0.0 1.0 ‚Ä¶ 0.0 1.0 0.0 0.0 0.0 1.0 0.0 . cost = Array{Float64, 2}(undef, size(X_train, 2), 1); . Forward and Backward propagation . propagate function is the function at the heart of the algorithm. This does the forward prop -&gt; calculate cost -&gt; back-prop. . Forward Propagation: . You get X | You compute $A = sigma(w^T X + b) = (a^{(1)}, a^{(2)}, ..., a^{(m-1)}, a^{(m)})$ | You calculate the cost function: $J = - frac{1}{m} sum_{i=1}^{m}y^{(i)} log(a^{(i)})+(1-y^{(i)}) log(1-a^{(i)})$ | . Here are the two formulas you will be using: . $$ frac{ partial J}{ partial w} = frac{1}{m}X(A-Y)^T tag{7}$$ $$ frac{ partial J}{ partial b} = frac{1}{m} sum_{i=1}^m (a^{(i)}-y^{(i)}) tag{8}$$ . function propagate(w, b, X, Y) &quot;&quot;&quot; Implement the cost function and its gradient for the propagation explained above Arguments: w -- weights, a numpy array of size (num_px * num_px * 3, 1) b -- bias, a scalar X -- data of size (num_px * num_px * 3, number of examples) Y -- true &quot;label&quot; vector (containing 0 if non-cat, 1 if cat) of size (1, number of examples) Return: cost -- negative log-likelihood cost for logistic regression dw -- gradient of the loss with respect to w, thus same shape as w db -- gradient of the loss with respect to b, thus same shape as b Tips: - Write your code step by step for the propagation &quot;&quot;&quot; # Forward prop Z = w&#39;X .+ b A = œÉ.(Z) @assert(size(A) == size(y_train)) # Compute cost ùí• = -1 * sum(y_train .* log.(A) .+ (1 .- y_train) .* log.(1 .- A)) ùí• /= m # Back-prop dz = A - Y @assert(size(dz) == size(A) &amp;&amp; size(dz) == size(Y)) dw = (1/m) * X * dz&#39; db = (1/m) * sum(dz) ùí•, dw, db end . propagate (generic function with 1 method) . w, b = initialize(size(X_train, 1)) . ([0.0; 0.0; 0.0; 0.0], 2) . Model . Combine all functions to train the model Learning rate: $ alpha = 0.09$, iterations(epochs): 150 . Here is something I love about Julia. It&#39;s that you can directly use symbols as variables üòç. Doesn&#39;t it look awesome? . #collapse-hide Œ± = 0.01 cost = Array{Float64, 2}(undef, 2000, 1) for i=1:2000 ùí•, dw, db = propagate(w, b, X_train, y_train) cost[i] = ùí• global w, b w -= Œ± * dw; b -= Œ± * db; println(&quot;cost after iteration $i: $ùí•&quot;) end . . cost after iteration 1: 1.2456780110429724 cost after iteration 2: 1.2437415102489902 cost after iteration 3: 1.2418090839531073 cost after iteration 4: 1.2398807371967915 cost after iteration 5: 1.2379564749678407 cost after iteration 6: 1.2360363022000962 cost after iteration 7: 1.234120223773176 cost after iteration 8: 1.232208244512191 cost after iteration 9: 1.2303003691874836 cost after iteration 10: 1.2283966025143556 cost after iteration 11: 1.2264969491528037 cost after iteration 12: 1.2246014137072596 cost after iteration 13: 1.2227100007263259 cost after iteration 14: 1.220822714702524 cost after iteration 15: 1.2189395600720379 cost after iteration 16: 1.217060541214466 cost after iteration 17: 1.2151856624525712 cost after iteration 18: 1.2133149280520354 cost after iteration 19: 1.2114483422212217 cost after iteration 20: 1.2095859091109318 cost after iteration 21: 1.207727632814172 cost after iteration 22: 1.2058735173659205 cost after iteration 23: 1.204023566742898 cost after iteration 24: 1.2021777848633415 cost after iteration 25: 1.200336175586781 cost after iteration 26: 1.1984987427138203 cost after iteration 27: 1.1966654899859208 cost after iteration 28: 1.194836421085185 cost after iteration 29: 1.193011539634153 cost after iteration 30: 1.1911908491955876 cost after iteration 31: 1.1893743532722771 cost after iteration 32: 1.1875620553068338 cost after iteration 33: 1.1857539586814951 cost after iteration 34: 1.1839500667179328 cost after iteration 35: 1.1821503826770643 cost after iteration 36: 1.180354909758862 cost after iteration 37: 1.1785636511021749 cost after iteration 38: 1.1767766097845476 cost after iteration 39: 1.1749937888220445 cost after iteration 40: 1.173215191169077 cost after iteration 41: 1.1714408197182358 cost after iteration 42: 1.1696706773001277 cost after iteration 43: 1.1679047666832105 cost after iteration 44: 1.1661430905736365 cost after iteration 45: 1.1643856516150999 cost after iteration 46: 1.162632452388686 cost after iteration 47: 1.160883495412722 cost after iteration 48: 1.159138783142638 cost after iteration 49: 1.1573983179708243 cost after iteration 50: 1.1556621022264986 cost after iteration 51: 1.153930138175572 cost after iteration 52: 1.1522024280205214 cost after iteration 53: 1.150478973900267 cost after iteration 54: 1.1487597778900507 cost after iteration 55: 1.1470448420013202 cost after iteration 56: 1.1453341681816136 cost after iteration 57: 1.1436277583144554 cost after iteration 58: 1.1419256142192478 cost after iteration 59: 1.1402277376511722 cost after iteration 60: 1.138534130301088 cost after iteration 61: 1.136844793795446 cost after iteration 62: 1.135159729696191 cost after iteration 63: 1.1334789395006843 cost after iteration 64: 1.1318024246416143 cost after iteration 65: 1.1301301864869289 cost after iteration 66: 1.1284622263397501 cost after iteration 67: 1.1267985454383154 cost after iteration 68: 1.125139144955905 cost after iteration 69: 1.1234840260007837 cost after iteration 70: 1.1218331896161409 cost after iteration 71: 1.12018663678004 cost after iteration 72: 1.1185443684053662 cost after iteration 73: 1.116906385339782 cost after iteration 74: 1.1152726883656863 cost after iteration 75: 1.1136432782001728 cost after iteration 76: 1.1120181554950055 cost after iteration 77: 1.1103973208365785 cost after iteration 78: 1.108780774745898 cost after iteration 79: 1.1071685176785568 cost after iteration 80: 1.1055605500247208 cost after iteration 81: 1.1039568721091118 cost after iteration 82: 1.1023574841910002 cost after iteration 83: 1.1007623864641995 cost after iteration 84: 1.0991715790570649 cost after iteration 85: 1.0975850620324965 cost after iteration 86: 1.0960028353879463 cost after iteration 87: 1.0944248990554286 cost after iteration 88: 1.0928512529015344 cost after iteration 89: 1.0912818967274522 cost after iteration 90: 1.0897168302689892 cost after iteration 91: 1.0881560531965995 cost after iteration 92: 1.0865995651154159 cost after iteration 93: 1.0850473655652826 cost after iteration 94: 1.0834994540207943 cost after iteration 95: 1.0819558298913445 cost after iteration 96: 1.0804164925211663 cost after iteration 97: 1.0788814411893848 cost after iteration 98: 1.0773506751100759 cost after iteration 99: 1.0758241934323216 cost after iteration 100: 1.074301995240275 cost after iteration 101: 1.0727840795532257 cost after iteration 102: 1.0712704453256727 cost after iteration 103: 1.069761091447397 cost after iteration 104: 1.0682560167435435 cost after iteration 105: 1.0667552199746997 cost after iteration 106: 1.065258699836987 cost after iteration 107: 1.0637664549621466 cost after iteration 108: 1.0622784839176382 cost after iteration 109: 1.0607947852067354 cost after iteration 110: 1.0593153572686285 cost after iteration 111: 1.0578401984785306 cost after iteration 112: 1.0563693071477889 cost after iteration 113: 1.0549026815239961 cost after iteration 114: 1.053440319791109 cost after iteration 115: 1.0519822200695699 cost after iteration 116: 1.0505283804164303 cost after iteration 117: 1.049078798825481 cost after iteration 118: 1.0476334732273853 cost after iteration 119: 1.0461924014898125 cost after iteration 120: 1.0447555814175802 cost after iteration 121: 1.0433230107527962 cost after iteration 122: 1.0418946871750074 cost after iteration 123: 1.0404706083013497 cost after iteration 124: 1.039050771686702 cost after iteration 125: 1.0376351748238442 cost after iteration 126: 1.036223815143621 cost after iteration 127: 1.034816690015105 cost after iteration 128: 1.0334137967457653 cost after iteration 129: 1.032015132581641 cost after iteration 130: 1.0306206947075165 cost after iteration 131: 1.0292304802470997 cost after iteration 132: 1.0278444862632066 cost after iteration 133: 1.026462709757945 cost after iteration 134: 1.0250851476729066 cost after iteration 135: 1.0237117968893574 cost after iteration 136: 1.0223426542284348 cost after iteration 137: 1.0209777164513483 cost after iteration 138: 1.0196169802595796 cost after iteration 139: 1.0182604422950914 cost after iteration 140: 1.016908099140534 cost after iteration 141: 1.0155599473194612 cost after iteration 142: 1.0142159832965427 cost after iteration 143: 1.0128762034777847 cost after iteration 144: 1.011540604210751 cost after iteration 145: 1.0102091817847894 cost after iteration 146: 1.008881932431258 cost after iteration 147: 1.007558852323758 cost after iteration 148: 1.0062399375783675 cost after iteration 149: 1.0049251842538773 cost after iteration 150: 1.0036145883520335 cost after iteration 151: 1.0023081458177792 cost after iteration 152: 1.0010058525395005 cost after iteration 153: 0.9997077043492745 cost after iteration 154: 0.9984136970231237 cost after iteration 155: 0.9971238262812676 cost after iteration 156: 0.9958380877883817 cost after iteration 157: 0.9945564771538564 cost after iteration 158: 0.9932789899320603 cost after iteration 159: 0.9920056216226067 cost after iteration 160: 0.9907363676706191 cost after iteration 161: 0.9894712234670043 cost after iteration 162: 0.9882101843487238 cost after iteration 163: 0.9869532455990712 cost after iteration 164: 0.985700402447949 cost after iteration 165: 0.9844516500721504 cost after iteration 166: 0.9832069835956422 cost after iteration 167: 0.981966398089851 cost after iteration 168: 0.9807298885739503 cost after iteration 169: 0.97949745001515 cost after iteration 170: 0.9782690773289925 cost after iteration 171: 0.9770447653796439 cost after iteration 172: 0.9758245089801943 cost after iteration 173: 0.9746083028929534 cost after iteration 174: 0.9733961418297565 cost after iteration 175: 0.9721880204522654 cost after iteration 176: 0.9709839333722744 cost after iteration 177: 0.9697838751520192 cost after iteration 178: 0.9685878403044861 cost after iteration 179: 0.967395823293724 cost after iteration 180: 0.9662078185351587 cost after iteration 181: 0.9650238203959078 cost after iteration 182: 0.9638438231951001 cost after iteration 183: 0.9626678212041918 cost after iteration 184: 0.9614958086472924 cost after iteration 185: 0.9603277797014845 cost after iteration 186: 0.9591637284971484 cost after iteration 187: 0.9580036491182913 cost after iteration 188: 0.9568475356028745 cost after iteration 189: 0.9556953819431417 cost after iteration 190: 0.9545471820859519 cost after iteration 191: 0.9534029299331128 cost after iteration 192: 0.9522626193417151 cost after iteration 193: 0.9511262441244664 cost after iteration 194: 0.9499937980500336 cost after iteration 195: 0.9488652748433763 cost after iteration 196: 0.9477406681860905 cost after iteration 197: 0.9466199717167495 cost after iteration 198: 0.9455031790312471 cost after iteration 199: 0.9443902836831407 cost after iteration 200: 0.9432812791839975 cost after iteration 201: 0.9421761590037423 cost after iteration 202: 0.9410749165710036 cost after iteration 203: 0.9399775452734631 cost after iteration 204: 0.9388840384582061 cost after iteration 205: 0.9377943894320722 cost after iteration 206: 0.9367085914620076 cost after iteration 207: 0.9356266377754188 cost after iteration 208: 0.9345485215605241 cost after iteration 209: 0.933474235966713 cost after iteration 210: 0.9324037741048979 cost after iteration 211: 0.9313371290478722 cost after iteration 212: 0.9302742938306694 cost after iteration 213: 0.9292152614509184 cost after iteration 214: 0.9281600248692039 cost after iteration 215: 0.9271085770094271 cost after iteration 216: 0.9260609107591644 cost after iteration 217: 0.9250170189700285 cost after iteration 218: 0.9239768944580307 cost after iteration 219: 0.9229405300039435 cost after iteration 220: 0.9219079183536605 cost after iteration 221: 0.9208790522185634 cost after iteration 222: 0.9198539242758813 cost after iteration 223: 0.9188325271690593 cost after iteration 224: 0.917814853508118 cost after iteration 225: 0.9168008958700222 cost after iteration 226: 0.9157906467990443 cost after iteration 227: 0.9147840988071287 cost after iteration 228: 0.9137812443742587 cost after iteration 229: 0.9127820759488224 cost after iteration 230: 0.9117865859479768 cost after iteration 231: 0.9107947667580161 cost after iteration 232: 0.9098066107347372 cost after iteration 233: 0.9088221102038045 cost after iteration 234: 0.9078412574611191 cost after iteration 235: 0.9068640447731823 cost after iteration 236: 0.9058904643774635 cost after iteration 237: 0.9049205084827668 cost after iteration 238: 0.903954169269596 cost after iteration 239: 0.9029914388905215 cost after iteration 240: 0.9020323094705465 cost after iteration 241: 0.9010767731074719 cost after iteration 242: 0.9001248218722632 cost after iteration 243: 0.8991764478094144 cost after iteration 244: 0.8982316429373145 cost after iteration 245: 0.897290399248611 cost after iteration 246: 0.8963527087105767 cost after iteration 247: 0.8954185632654699 cost after iteration 248: 0.8944879548309029 cost after iteration 249: 0.8935608753002016 cost after iteration 250: 0.8926373165427707 cost after iteration 251: 0.8917172704044549 cost after iteration 252: 0.8908007287079018 cost after iteration 253: 0.8898876832529222 cost after iteration 254: 0.888978125816853 cost after iteration 255: 0.888072048154915 cost after iteration 256: 0.8871694420005746 cost after iteration 257: 0.8862702990659019 cost after iteration 258: 0.8853746110419293 cost after iteration 259: 0.8844823695990107 cost after iteration 260: 0.8835935663871752 cost after iteration 261: 0.8827081930364867 cost after iteration 262: 0.8818262411573987 cost after iteration 263: 0.8809477023411073 cost after iteration 264: 0.8800725681599075 cost after iteration 265: 0.8792008301675447 cost after iteration 266: 0.8783324798995678 cost after iteration 267: 0.8774675088736791 cost after iteration 268: 0.8766059085900885 cost after iteration 269: 0.8757476705318582 cost after iteration 270: 0.8748927861652543 cost after iteration 271: 0.874041246940094 cost after iteration 272: 0.8731930442900911 cost after iteration 273: 0.8723481696332035 cost after iteration 274: 0.8715066143719743 cost after iteration 275: 0.8706683698938801 cost after iteration 276: 0.8698334275716691 cost after iteration 277: 0.8690017787637045 cost after iteration 278: 0.8681734148143044 cost after iteration 279: 0.8673483270540796 cost after iteration 280: 0.8665265068002733 cost after iteration 281: 0.8657079453570957 cost after iteration 282: 0.8648926340160609 cost after iteration 283: 0.8640805640563214 cost after iteration 284: 0.8632717267449986 cost after iteration 285: 0.8624661133375161 cost after iteration 286: 0.8616637150779312 cost after iteration 287: 0.8608645231992615 cost after iteration 288: 0.8600685289238147 cost after iteration 289: 0.8592757234635126 cost after iteration 290: 0.8584860980202189 cost after iteration 291: 0.8576996437860611 cost after iteration 292: 0.8569163519437528 cost after iteration 293: 0.856136213666915 cost after iteration 294: 0.8553592201203956 cost after iteration 295: 0.8545853624605863 cost after iteration 296: 0.8538146318357411 cost after iteration 297: 0.8530470193862894 cost after iteration 298: 0.8522825162451494 cost after iteration 299: 0.8515211135380433 cost after iteration 300: 0.850762802383803 cost after iteration 301: 0.8500075738946831 cost after iteration 302: 0.8492554191766666 cost after iteration 303: 0.8485063293297708 cost after iteration 304: 0.8477602954483509 cost after iteration 305: 0.8470173086214051 cost after iteration 306: 0.8462773599328736 cost after iteration 307: 0.8455404404619388 cost after iteration 308: 0.8448065412833234 cost after iteration 309: 0.8440756534675853 cost after iteration 310: 0.843347768081414 cost after iteration 311: 0.8426228761879238 cost after iteration 312: 0.8419009688469425 cost after iteration 313: 0.8411820371153031 cost after iteration 314: 0.8404660720471321 cost after iteration 315: 0.8397530646941338 cost after iteration 316: 0.8390430061058756 cost after iteration 317: 0.8383358873300728 cost after iteration 318: 0.8376316994128656 cost after iteration 319: 0.8369304333991023 cost after iteration 320: 0.8362320803326153 cost after iteration 321: 0.8355366312564956 cost after iteration 322: 0.8348440772133691 cost after iteration 323: 0.8341544092456682 cost after iteration 324: 0.8334676183959012 cost after iteration 325: 0.8327836957069229 cost after iteration 326: 0.8321026322222002 cost after iteration 327: 0.8314244189860761 cost after iteration 328: 0.830749047044037 cost after iteration 329: 0.8300765074429699 cost after iteration 330: 0.8294067912314246 cost after iteration 331: 0.8287398894598709 cost after iteration 332: 0.8280757931809543 cost after iteration 333: 0.8274144934497508 cost after iteration 334: 0.8267559813240191 cost after iteration 335: 0.8261002478644508 cost after iteration 336: 0.8254472841349197 cost after iteration 337: 0.8247970812027278 cost after iteration 338: 0.8241496301388511 cost after iteration 339: 0.8235049220181822 cost after iteration 340: 0.8228629479197719 cost after iteration 341: 0.822223698927068 cost after iteration 342: 0.821587166128154 cost after iteration 343: 0.8209533406159825 cost after iteration 344: 0.8203222134886112 cost after iteration 345: 0.8196937758494351 cost after iteration 346: 0.819068018807413 cost after iteration 347: 0.8184449334772996 cost after iteration 348: 0.81782451097987 cost after iteration 349: 0.8172067424421428 cost after iteration 350: 0.816591618997606 cost after iteration 351: 0.8159791317864334 cost after iteration 352: 0.8153692719557077 cost after iteration 353: 0.8147620306596317 cost after iteration 354: 0.8141573990597497 cost after iteration 355: 0.8135553683251551 cost after iteration 356: 0.812955929632704 cost after iteration 357: 0.8123590741672249 cost after iteration 358: 0.8117647931217246 cost after iteration 359: 0.8111730776975942 cost after iteration 360: 0.8105839191048129 cost after iteration 361: 0.809997308562149 cost after iteration 362: 0.8094132372973608 cost after iteration 363: 0.8088316965473934 cost after iteration 364: 0.8082526775585752 cost after iteration 365: 0.807676171586812 cost after iteration 366: 0.8071021698977794 cost after iteration 367: 0.8065306637671126 cost after iteration 368: 0.8059616444805948 cost after iteration 369: 0.8053951033343459 cost after iteration 370: 0.804831031635004 cost after iteration 371: 0.8042694206999104 cost after iteration 372: 0.8037102618572906 cost after iteration 373: 0.8031535464464319 cost after iteration 374: 0.8025992658178629 cost after iteration 375: 0.8020474113335265 cost after iteration 376: 0.8014979743669552 cost after iteration 377: 0.8009509463034431 cost after iteration 378: 0.8004063185402137 cost after iteration 379: 0.7998640824865902 cost after iteration 380: 0.7993242295641606 cost after iteration 381: 0.7987867512069416 cost after iteration 382: 0.7982516388615426 cost after iteration 383: 0.7977188839873249 cost after iteration 384: 0.7971884780565612 cost after iteration 385: 0.7966604125545941 cost after iteration 386: 0.7961346789799876 cost after iteration 387: 0.7956112688446845 cost after iteration 388: 0.7950901736741571 cost after iteration 389: 0.7945713850075549 cost after iteration 390: 0.7940548943978555 cost after iteration 391: 0.7935406934120086 cost after iteration 392: 0.7930287736310829 cost after iteration 393: 0.7925191266504062 cost after iteration 394: 0.792011744079709 cost after iteration 395: 0.791506617543261 cost after iteration 396: 0.791003738680012 cost after iteration 397: 0.7905030991437233 cost after iteration 398: 0.7900046906031061 cost after iteration 399: 0.7895085047419499 cost after iteration 400: 0.7890145332592563 cost after iteration 401: 0.7885227678693659 cost after iteration 402: 0.7880332003020843 cost after iteration 403: 0.7875458223028119 cost after iteration 404: 0.7870606256326612 cost after iteration 405: 0.7865776020685856 cost after iteration 406: 0.7860967434034937 cost after iteration 407: 0.7856180414463717 cost after iteration 408: 0.7851414880223992 cost after iteration 409: 0.7846670749730648 cost after iteration 410: 0.7841947941562784 cost after iteration 411: 0.7837246374464846 cost after iteration 412: 0.7832565967347737 cost after iteration 413: 0.7827906639289874 cost after iteration 414: 0.7823268309538298 cost after iteration 415: 0.7818650897509699 cost after iteration 416: 0.7814054322791463 cost after iteration 417: 0.7809478505142697 cost after iteration 418: 0.7804923364495244 cost after iteration 419: 0.7800388820954649 cost after iteration 420: 0.7795874794801165 cost after iteration 421: 0.7791381206490685 cost after iteration 422: 0.7786907976655703 cost after iteration 423: 0.7782455026106236 cost after iteration 424: 0.7778022275830737 cost after iteration 425: 0.7773609646996992 cost after iteration 426: 0.7769217060953 cost after iteration 427: 0.7764844439227859 cost after iteration 428: 0.7760491703532573 cost after iteration 429: 0.7756158775760947 cost after iteration 430: 0.7751845577990361 cost after iteration 431: 0.7747552032482601 cost after iteration 432: 0.7743278061684645 cost after iteration 433: 0.7739023588229446 cost after iteration 434: 0.7734788534936687 cost after iteration 435: 0.7730572824813533 cost after iteration 436: 0.7726376381055365 cost after iteration 437: 0.7722199127046508 cost after iteration 438: 0.7718040986360925 cost after iteration 439: 0.7713901882762911 cost after iteration 440: 0.7709781740207775 cost after iteration 441: 0.7705680482842502 cost after iteration 442: 0.7701598035006406 cost after iteration 443: 0.769753432123176 cost after iteration 444: 0.7693489266244421 cost after iteration 445: 0.7689462794964441 cost after iteration 446: 0.768545483250666 cost after iteration 447: 0.7681465304181285 cost after iteration 448: 0.767749413549448 cost after iteration 449: 0.7673541252148887 cost after iteration 450: 0.7669606580044184 cost after iteration 451: 0.7665690045277633 cost after iteration 452: 0.7661791574144571 cost after iteration 453: 0.7657911093138919 cost after iteration 454: 0.7654048528953692 cost after iteration 455: 0.7650203808481447 cost after iteration 456: 0.7646376858814777 cost after iteration 457: 0.7642567607246746 cost after iteration 458: 0.7638775981271337 cost after iteration 459: 0.7635001908583887 cost after iteration 460: 0.7631245317081489 cost after iteration 461: 0.7627506134863409 cost after iteration 462: 0.7623784290231479 cost after iteration 463: 0.7620079711690464 cost after iteration 464: 0.7616392327948455 cost after iteration 465: 0.7612722067917199 cost after iteration 466: 0.7609068860712467 cost after iteration 467: 0.7605432635654379 cost after iteration 468: 0.7601813322267719 cost after iteration 469: 0.7598210850282272 cost after iteration 470: 0.7594625149633087 cost after iteration 471: 0.7591056150460813 cost after iteration 472: 0.758750378311192 cost after iteration 473: 0.7583967978139022 cost after iteration 474: 0.7580448666301101 cost after iteration 475: 0.7576945778563763 cost after iteration 476: 0.7573459246099462 cost after iteration 477: 0.7569989000287748 cost after iteration 478: 0.7566534972715463 cost after iteration 479: 0.7563097095176932 cost after iteration 480: 0.7559675299674198 cost after iteration 481: 0.7556269518417161 cost after iteration 482: 0.755287968382378 cost after iteration 483: 0.7549505728520225 cost after iteration 484: 0.7546147585341021 cost after iteration 485: 0.7542805187329221 cost after iteration 486: 0.7539478467736503 cost after iteration 487: 0.7536167360023319 cost after iteration 488: 0.7532871797859 cost after iteration 489: 0.7529591715121867 cost after iteration 490: 0.7526327045899317 cost after iteration 491: 0.7523077724487917 cost after iteration 492: 0.7519843685393478 cost after iteration 493: 0.7516624863331128 cost after iteration 494: 0.7513421193225355 cost after iteration 495: 0.7510232610210088 cost after iteration 496: 0.7507059049628704 cost after iteration 497: 0.7503900447034072 cost after iteration 498: 0.7500756738188599 cost after iteration 499: 0.749762785906421 cost after iteration 500: 0.7494513745842383 cost after iteration 501: 0.7491414334914123 cost after iteration 502: 0.7488329562879975 cost after iteration 503: 0.7485259366549997 cost after iteration 504: 0.7482203682943716 cost after iteration 505: 0.7479162449290138 cost after iteration 506: 0.7476135603027653 cost after iteration 507: 0.7473123081804017 cost after iteration 508: 0.747012482347629 cost after iteration 509: 0.7467140766110762 cost after iteration 510: 0.7464170847982887 cost after iteration 511: 0.7461215007577199 cost after iteration 512: 0.7458273183587222 cost after iteration 513: 0.7455345314915375 cost after iteration 514: 0.7452431340672874 cost after iteration 515: 0.7449531200179612 cost after iteration 516: 0.7446644832964057 cost after iteration 517: 0.7443772178763105 cost after iteration 518: 0.7440913177521968 cost after iteration 519: 0.7438067769394024 cost after iteration 520: 0.7435235894740688 cost after iteration 521: 0.7432417494131235 cost after iteration 522: 0.7429612508342662 cost after iteration 523: 0.7426820878359514 cost after iteration 524: 0.742404254537371 cost after iteration 525: 0.7421277450784373 cost after iteration 526: 0.7418525536197651 cost after iteration 527: 0.741578674342649 cost after iteration 528: 0.7413061014490492 cost after iteration 529: 0.7410348291615663 cost after iteration 530: 0.7407648517234233 cost after iteration 531: 0.7404961633984443 cost after iteration 532: 0.7402287584710291 cost after iteration 533: 0.7399626312461342 cost after iteration 534: 0.7396977760492477 cost after iteration 535: 0.7394341872263666 cost after iteration 536: 0.7391718591439699 cost after iteration 537: 0.7389107861889974 cost after iteration 538: 0.7386509627688214 cost after iteration 539: 0.7383923833112216 cost after iteration 540: 0.7381350422643579 cost after iteration 541: 0.7378789340967458 cost after iteration 542: 0.7376240532972254 cost after iteration 543: 0.737370394374935 cost after iteration 544: 0.7371179518592821 cost after iteration 545: 0.7368667202999161 cost after iteration 546: 0.7366166942666952 cost after iteration 547: 0.7363678683496601 cost after iteration 548: 0.7361202371589998 cost after iteration 549: 0.7358737953250238 cost after iteration 550: 0.7356285374981286 cost after iteration 551: 0.7353844583487674 cost after iteration 552: 0.7351415525674144 cost after iteration 553: 0.7348998148645374 cost after iteration 554: 0.7346592399705594 cost after iteration 555: 0.7344198226358274 cost after iteration 556: 0.734181557630577 cost after iteration 557: 0.7339444397449015 cost after iteration 558: 0.7337084637887108 cost after iteration 559: 0.7334736245917008 cost after iteration 560: 0.7332399170033173 cost after iteration 561: 0.7330073358927169 cost after iteration 562: 0.7327758761487335 cost after iteration 563: 0.7325455326798403 cost after iteration 564: 0.7323163004141124 cost after iteration 565: 0.7320881742991892 cost after iteration 566: 0.7318611493022359 cost after iteration 567: 0.7316352204099067 cost after iteration 568: 0.7314103826283048 cost after iteration 569: 0.7311866309829426 cost after iteration 570: 0.7309639605187049 cost after iteration 571: 0.7307423662998064 cost after iteration 572: 0.7305218434097536 cost after iteration 573: 0.7303023869513026 cost after iteration 574: 0.7300839920464206 cost after iteration 575: 0.729866653836243 cost after iteration 576: 0.7296503674810328 cost after iteration 577: 0.7294351281601403 cost after iteration 578: 0.7292209310719576 cost after iteration 579: 0.7290077714338802 cost after iteration 580: 0.7287956444822633 cost after iteration 581: 0.728584545472378 cost after iteration 582: 0.7283744696783693 cost after iteration 583: 0.7281654123932115 cost after iteration 584: 0.7279573689286679 cost after iteration 585: 0.7277503346152427 cost after iteration 586: 0.7275443048021396 cost after iteration 587: 0.7273392748572175 cost after iteration 588: 0.7271352401669446 cost after iteration 589: 0.7269321961363538 cost after iteration 590: 0.7267301381889992 cost after iteration 591: 0.7265290617669093 cost after iteration 592: 0.7263289623305411 cost after iteration 593: 0.7261298353587368 cost after iteration 594: 0.7259316763486751 cost after iteration 595: 0.7257344808158275 cost after iteration 596: 0.7255382442939091 cost after iteration 597: 0.7253429623348355 cost after iteration 598: 0.7251486305086728 cost after iteration 599: 0.7249552444035935 cost after iteration 600: 0.7247627996258265 cost after iteration 601: 0.7245712917996129 cost after iteration 602: 0.7243807165671557 cost after iteration 603: 0.7241910695885746 cost after iteration 604: 0.7240023465418559 cost after iteration 605: 0.7238145431228064 cost after iteration 606: 0.7236276550450036 cost after iteration 607: 0.7234416780397498 cost after iteration 608: 0.7232566078560201 cost after iteration 609: 0.7230724402604178 cost after iteration 610: 0.7228891710371225 cost after iteration 611: 0.7227067959878423 cost after iteration 612: 0.7225253109317651 cost after iteration 613: 0.7223447117055096 cost after iteration 614: 0.7221649941630748 cost after iteration 615: 0.7219861541757919 cost after iteration 616: 0.7218081876322743 cost after iteration 617: 0.7216310904383673 cost after iteration 618: 0.7214548585170995 cost after iteration 619: 0.7212794878086316 cost after iteration 620: 0.721104974270208 cost after iteration 621: 0.7209313138761053 cost after iteration 622: 0.720758502617583 cost after iteration 623: 0.7205865365028321 cost after iteration 624: 0.7204154115569261 cost after iteration 625: 0.7202451238217699 cost after iteration 626: 0.7200756693560494 cost after iteration 627: 0.71990704423518 cost after iteration 628: 0.7197392445512568 cost after iteration 629: 0.7195722664130044 cost after iteration 630: 0.719406105945724 cost after iteration 631: 0.7192407592912444 cost after iteration 632: 0.7190762226078707 cost after iteration 633: 0.7189124920703315 cost after iteration 634: 0.7187495638697301 cost after iteration 635: 0.7185874342134919 cost after iteration 636: 0.7184260993253141 cost after iteration 637: 0.7182655554451132 cost after iteration 638: 0.7181057988289744 cost after iteration 639: 0.7179468257491008 cost after iteration 640: 0.7177886324937603 cost after iteration 641: 0.7176312153672361 cost after iteration 642: 0.7174745706897737 cost after iteration 643: 0.7173186947975297 cost after iteration 644: 0.7171635840425215 cost after iteration 645: 0.7170092347925742 cost after iteration 646: 0.7168556434312684 cost after iteration 647: 0.7167028063578909 cost after iteration 648: 0.7165507199873816 cost after iteration 649: 0.7163993807502815 cost after iteration 650: 0.7162487850926813 cost after iteration 651: 0.716098929476171 cost after iteration 652: 0.7159498103777858 cost after iteration 653: 0.7158014242899565 cost after iteration 654: 0.7156537677204562 cost after iteration 655: 0.71550683719235 cost after iteration 656: 0.7153606292439417 cost after iteration 657: 0.7152151404287245 cost after iteration 658: 0.7150703673153254 cost after iteration 659: 0.7149263064874581 cost after iteration 660: 0.7147829545438673 cost after iteration 661: 0.7146403080982802 cost after iteration 662: 0.714498363779351 cost after iteration 663: 0.7143571182306143 cost after iteration 664: 0.7142165681104289 cost after iteration 665: 0.7140767100919289 cost after iteration 666: 0.7139375408629707 cost after iteration 667: 0.7137990571260818 cost after iteration 668: 0.71366125559841 cost after iteration 669: 0.7135241330116706 cost after iteration 670: 0.713387686112096 cost after iteration 671: 0.7132519116603835 cost after iteration 672: 0.7131168064316445 cost after iteration 673: 0.7129823672153527 cost after iteration 674: 0.7128485908152917 cost after iteration 675: 0.7127154740495072 cost after iteration 676: 0.7125830137502511 cost after iteration 677: 0.712451206763934 cost after iteration 678: 0.7123200499510719 cost after iteration 679: 0.7121895401862358 cost after iteration 680: 0.7120596743580011 cost after iteration 681: 0.7119304493688947 cost after iteration 682: 0.7118018621353472 cost after iteration 683: 0.7116739095876391 cost after iteration 684: 0.7115465886698507 cost after iteration 685: 0.7114198963398126 cost after iteration 686: 0.711293829569053 cost after iteration 687: 0.7111683853427478 cost after iteration 688: 0.7110435606596718 cost after iteration 689: 0.7109193525321441 cost after iteration 690: 0.710795757985982 cost after iteration 691: 0.7106727740604477 cost after iteration 692: 0.7105503978081982 cost after iteration 693: 0.7104286262952368 cost after iteration 694: 0.7103074566008611 cost after iteration 695: 0.7101868858176135 cost after iteration 696: 0.7100669110512305 cost after iteration 697: 0.7099475294205945 cost after iteration 698: 0.7098287380576819 cost after iteration 699: 0.7097105341075134 cost after iteration 700: 0.7095929147281069 cost after iteration 701: 0.7094758770904234 cost after iteration 702: 0.7093594183783216 cost after iteration 703: 0.7092435357885056 cost after iteration 704: 0.7091282265304764 cost after iteration 705: 0.7090134878264837 cost after iteration 706: 0.7088993169114739 cost after iteration 707: 0.7087857110330446 cost after iteration 708: 0.7086726674513911 cost after iteration 709: 0.7085601834392619 cost after iteration 710: 0.7084482562819069 cost after iteration 711: 0.7083368832770295 cost after iteration 712: 0.7082260617347366 cost after iteration 713: 0.7081157889774945 cost after iteration 714: 0.7080060623400725 cost after iteration 715: 0.7078968791695027 cost after iteration 716: 0.7077882368250265 cost after iteration 717: 0.7076801326780477 cost after iteration 718: 0.7075725641120852 cost after iteration 719: 0.7074655285227244 cost after iteration 720: 0.7073590233175675 cost after iteration 721: 0.7072530459161902 cost after iteration 722: 0.7071475937500882 cost after iteration 723: 0.7070426642626343 cost after iteration 724: 0.706938254909029 cost after iteration 725: 0.7068343631562523 cost after iteration 726: 0.7067309864830181 cost after iteration 727: 0.7066281223797255 cost after iteration 728: 0.706525768348413 cost after iteration 729: 0.70642392190271 cost after iteration 730: 0.7063225805677924 cost after iteration 731: 0.7062217418803326 cost after iteration 732: 0.7061214033884552 cost after iteration 733: 0.7060215626516902 cost after iteration 734: 0.7059222172409251 cost after iteration 735: 0.7058233647383608 cost after iteration 736: 0.7057250027374636 cost after iteration 737: 0.7056271288429198 cost after iteration 738: 0.705529740670589 cost after iteration 739: 0.7054328358474606 cost after iteration 740: 0.7053364120116046 cost after iteration 741: 0.7052404668121287 cost after iteration 742: 0.7051449979091321 cost after iteration 743: 0.7050500029736592 cost after iteration 744: 0.7049554796876547 cost after iteration 745: 0.7048614257439194 cost after iteration 746: 0.7047678388460645 cost after iteration 747: 0.7046747167084665 cost after iteration 748: 0.7045820570562225 cost after iteration 749: 0.7044898576251056 cost after iteration 750: 0.7043981161615205 cost after iteration 751: 0.7043068304224587 cost after iteration 752: 0.7042159981754547 cost after iteration 753: 0.7041256171985418 cost after iteration 754: 0.7040356852802067 cost after iteration 755: 0.7039462002193483 cost after iteration 756: 0.7038571598252308 cost after iteration 757: 0.7037685619174415 cost after iteration 758: 0.7036804043258489 cost after iteration 759: 0.7035926848905557 cost after iteration 760: 0.7035054014618572 cost after iteration 761: 0.7034185519002001 cost after iteration 762: 0.7033321340761358 cost after iteration 763: 0.70324614587028 cost after iteration 764: 0.7031605851732693 cost after iteration 765: 0.7030754498857171 cost after iteration 766: 0.7029907379181746 cost after iteration 767: 0.7029064471910842 cost after iteration 768: 0.7028225756347389 cost after iteration 769: 0.7027391211892421 cost after iteration 770: 0.7026560818044615 cost after iteration 771: 0.7025734554399914 cost after iteration 772: 0.702491240065108 cost after iteration 773: 0.7024094336587283 cost after iteration 774: 0.7023280342093702 cost after iteration 775: 0.7022470397151082 cost after iteration 776: 0.7021664481835359 cost after iteration 777: 0.7020862576317205 cost after iteration 778: 0.7020064660861655 cost after iteration 779: 0.7019270715827683 cost after iteration 780: 0.7018480721667788 cost after iteration 781: 0.7017694658927595 cost after iteration 782: 0.7016912508245468 cost after iteration 783: 0.7016134250352063 cost after iteration 784: 0.7015359866069966 cost after iteration 785: 0.7014589336313272 cost after iteration 786: 0.7013822642087194 cost after iteration 787: 0.7013059764487666 cost after iteration 788: 0.7012300684700926 cost after iteration 789: 0.7011545384003153 cost after iteration 790: 0.701079384376004 cost after iteration 791: 0.7010046045426427 cost after iteration 792: 0.7009301970545896 cost after iteration 793: 0.7008561600750377 cost after iteration 794: 0.7007824917759773 cost after iteration 795: 0.7007091903381557 cost after iteration 796: 0.7006362539510396 cost after iteration 797: 0.7005636808127763 cost after iteration 798: 0.7004914691301551 cost after iteration 799: 0.7004196171185689 cost after iteration 800: 0.7003481230019767 cost after iteration 801: 0.7002769850128653 cost after iteration 802: 0.7002062013922107 cost after iteration 803: 0.7001357703894427 cost after iteration 804: 0.700065690262404 cost after iteration 805: 0.6999959592773145 cost after iteration 806: 0.6999265757087351 cost after iteration 807: 0.699857537839528 cost after iteration 808: 0.6997888439608226 cost after iteration 809: 0.6997204923719738 cost after iteration 810: 0.6996524813805319 cost after iteration 811: 0.6995848093021995 cost after iteration 812: 0.6995174744607991 cost after iteration 813: 0.6994504751882346 cost after iteration 814: 0.6993838098244568 cost after iteration 815: 0.699317476717425 cost after iteration 816: 0.6992514742230724 cost after iteration 817: 0.6991858007052706 cost after iteration 818: 0.6991204545357924 cost after iteration 819: 0.6990554340942777 cost after iteration 820: 0.6989907377681968 cost after iteration 821: 0.6989263639528149 cost after iteration 822: 0.698862311051159 cost after iteration 823: 0.6987985774739809 cost after iteration 824: 0.6987351616397203 cost after iteration 825: 0.6986720619744758 cost after iteration 826: 0.6986092769119641 cost after iteration 827: 0.6985468048934884 cost after iteration 828: 0.6984846443679041 cost after iteration 829: 0.6984227937915838 cost after iteration 830: 0.6983612516283816 cost after iteration 831: 0.6983000163496024 cost after iteration 832: 0.6982390864339657 cost after iteration 833: 0.6981784603675715 cost after iteration 834: 0.6981181366438672 cost after iteration 835: 0.6980581137636156 cost after iteration 836: 0.6979983902348587 cost after iteration 837: 0.697938964572886 cost after iteration 838: 0.6978798353002007 cost after iteration 839: 0.6978210009464879 cost after iteration 840: 0.69776246004858 cost after iteration 841: 0.6977042111504248 cost after iteration 842: 0.6976462528030526 cost after iteration 843: 0.6975885835645446 cost after iteration 844: 0.6975312019999986 cost after iteration 845: 0.6974741066814979 cost after iteration 846: 0.6974172961880801 cost after iteration 847: 0.6973607691057021 cost after iteration 848: 0.6973045240272111 cost after iteration 849: 0.6972485595523124 cost after iteration 850: 0.697192874287536 cost after iteration 851: 0.6971374668462066 cost after iteration 852: 0.6970823358484112 cost after iteration 853: 0.6970274799209701 cost after iteration 854: 0.6969728976974013 cost after iteration 855: 0.6969185878178953 cost after iteration 856: 0.6968645489292773 cost after iteration 857: 0.6968107796849841 cost after iteration 858: 0.6967572787450271 cost after iteration 859: 0.6967040447759645 cost after iteration 860: 0.6966510764508705 cost after iteration 861: 0.6965983724493053 cost after iteration 862: 0.6965459314572853 cost after iteration 863: 0.696493752167251 cost after iteration 864: 0.6964418332780385 cost after iteration 865: 0.6963901734948513 cost after iteration 866: 0.6963387715292273 cost after iteration 867: 0.6962876260990114 cost after iteration 868: 0.6962367359283258 cost after iteration 869: 0.6961860997475398 cost after iteration 870: 0.6961357162932413 cost after iteration 871: 0.6960855843082083 cost after iteration 872: 0.6960357025413785 cost after iteration 873: 0.6959860697478208 cost after iteration 874: 0.6959366846887083 cost after iteration 875: 0.6958875461312857 cost after iteration 876: 0.6958386528488473 cost after iteration 877: 0.6957900036207011 cost after iteration 878: 0.6957415972321459 cost after iteration 879: 0.6956934324744407 cost after iteration 880: 0.6956455081447783 cost after iteration 881: 0.6955978230462556 cost after iteration 882: 0.6955503759878465 cost after iteration 883: 0.6955031657843761 cost after iteration 884: 0.6954561912564885 cost after iteration 885: 0.6954094512306246 cost after iteration 886: 0.695362944538992 cost after iteration 887: 0.6953166700195379 cost after iteration 888: 0.6952706265159214 cost after iteration 889: 0.6952248128774897 cost after iteration 890: 0.6951792279592465 cost after iteration 891: 0.6951338706218294 cost after iteration 892: 0.6950887397314806 cost after iteration 893: 0.6950438341600212 cost after iteration 894: 0.6949991527848264 cost after iteration 895: 0.694954694488795 cost after iteration 896: 0.6949104581603283 cost after iteration 897: 0.6948664426932997 cost after iteration 898: 0.694822646987033 cost after iteration 899: 0.6947790699462704 cost after iteration 900: 0.6947357104811537 cost after iteration 901: 0.6946925675071945 cost after iteration 902: 0.6946496399452488 cost after iteration 903: 0.694606926721493 cost after iteration 904: 0.6945644267673982 cost after iteration 905: 0.6945221390197038 cost after iteration 906: 0.6944800624203944 cost after iteration 907: 0.6944381959166727 cost after iteration 908: 0.6943965384609362 cost after iteration 909: 0.6943550890107517 cost after iteration 910: 0.6943138465288307 cost after iteration 911: 0.6942728099830056 cost after iteration 912: 0.6942319783462038 cost after iteration 913: 0.6941913505964242 cost after iteration 914: 0.6941509257167134 cost after iteration 915: 0.6941107026951402 cost after iteration 916: 0.6940706805247737 cost after iteration 917: 0.6940308582036567 cost after iteration 918: 0.6939912347347836 cost after iteration 919: 0.6939518091260773 cost after iteration 920: 0.6939125803903643 cost after iteration 921: 0.6938735475453501 cost after iteration 922: 0.693834709613599 cost after iteration 923: 0.6937960656225085 cost after iteration 924: 0.6937576146042856 cost after iteration 925: 0.6937193555959263 cost after iteration 926: 0.6936812876391902 cost after iteration 927: 0.6936434097805779 cost after iteration 928: 0.6936057210713096 cost after iteration 929: 0.6935682205673019 cost after iteration 930: 0.6935309073291429 cost after iteration 931: 0.6934937804220739 cost after iteration 932: 0.693456838915963 cost after iteration 933: 0.6934200818852861 cost after iteration 934: 0.6933835084091019 cost after iteration 935: 0.6933471175710315 cost after iteration 936: 0.6933109084592363 cost after iteration 937: 0.6932748801663954 cost after iteration 938: 0.6932390317896837 cost after iteration 939: 0.693203362430752 cost after iteration 940: 0.6931678711957028 cost after iteration 941: 0.6931325571950706 cost after iteration 942: 0.6930974195437997 cost after iteration 943: 0.6930624573612232 cost after iteration 944: 0.6930276697710426 cost after iteration 945: 0.6929930559013042 cost after iteration 946: 0.6929586148843803 cost after iteration 947: 0.692924345856948 cost after iteration 948: 0.6928902479599671 cost after iteration 949: 0.6928563203386613 cost after iteration 950: 0.6928225621424958 cost after iteration 951: 0.6927889725251575 cost after iteration 952: 0.6927555506445344 cost after iteration 953: 0.6927222956626949 cost after iteration 954: 0.6926892067458689 cost after iteration 955: 0.6926562830644261 cost after iteration 956: 0.6926235237928552 cost after iteration 957: 0.6925909281097469 cost after iteration 958: 0.6925584951977711 cost after iteration 959: 0.6925262242436586 cost after iteration 960: 0.6924941144381803 cost after iteration 961: 0.6924621649761289 cost after iteration 962: 0.6924303750562985 cost after iteration 963: 0.6923987438814644 cost after iteration 964: 0.6923672706583648 cost after iteration 965: 0.6923359545976826 cost after iteration 966: 0.6923047949140233 cost after iteration 967: 0.692273790825898 cost after iteration 968: 0.692242941555704 cost after iteration 969: 0.6922122463297055 cost after iteration 970: 0.6921817043780147 cost after iteration 971: 0.6921513149345738 cost after iteration 972: 0.6921210772371352 cost after iteration 973: 0.6920909905272441 cost after iteration 974: 0.6920610540502187 cost after iteration 975: 0.6920312670551335 cost after iteration 976: 0.6920016287947989 cost after iteration 977: 0.6919721385257441 cost after iteration 978: 0.6919427955081999 cost after iteration 979: 0.6919135990060783 cost after iteration 980: 0.6918845482869563 cost after iteration 981: 0.6918556426220569 cost after iteration 982: 0.6918268812862329 cost after iteration 983: 0.6917982635579468 cost after iteration 984: 0.6917697887192554 cost after iteration 985: 0.6917414560557902 cost after iteration 986: 0.6917132648567412 cost after iteration 987: 0.69168521441484 cost after iteration 988: 0.6916573040263404 cost after iteration 989: 0.6916295329910032 cost after iteration 990: 0.691601900612078 cost after iteration 991: 0.6915744061962852 cost after iteration 992: 0.691547049053802 cost after iteration 993: 0.691519828498242 cost after iteration 994: 0.6914927438466406 cost after iteration 995: 0.6914657944194367 cost after iteration 996: 0.6914389795404575 cost after iteration 997: 0.6914122985369016 cost after iteration 998: 0.6913857507393197 cost after iteration 999: 0.6913593354816023 cost after iteration 1000: 0.6913330521009626 cost after iteration 1001: 0.6913068999379159 cost after iteration 1002: 0.6912808783362688 cost after iteration 1003: 0.6912549866430989 cost after iteration 1004: 0.6912292242087429 cost after iteration 1005: 0.6912035903867757 cost after iteration 1006: 0.6911780845339982 cost after iteration 1007: 0.6911527060104203 cost after iteration 1008: 0.6911274541792445 cost after iteration 1009: 0.6911023284068506 cost after iteration 1010: 0.6910773280627814 cost after iteration 1011: 0.6910524525197239 cost after iteration 1012: 0.6910277011534972 cost after iteration 1013: 0.6910030733430352 cost after iteration 1014: 0.6909785684703721 cost after iteration 1015: 0.690954185920626 cost after iteration 1016: 0.6909299250819848 cost after iteration 1017: 0.6909057853456907 cost after iteration 1018: 0.690881766106026 cost after iteration 1019: 0.6908578667602951 cost after iteration 1020: 0.6908340867088145 cost after iteration 1021: 0.6908104253548933 cost after iteration 1022: 0.6907868821048209 cost after iteration 1023: 0.690763456367852 cost after iteration 1024: 0.6907401475561904 cost after iteration 1025: 0.6907169550849778 cost after iteration 1026: 0.6906938783722757 cost after iteration 1027: 0.6906709168390528 cost after iteration 1028: 0.690648069909171 cost after iteration 1029: 0.6906253370093699 cost after iteration 1030: 0.6906027175692526 cost after iteration 1031: 0.6905802110212736 cost after iteration 1032: 0.6905578168007215 cost after iteration 1033: 0.6905355343457074 cost after iteration 1034: 0.6905133630971504 cost after iteration 1035: 0.690491302498764 cost after iteration 1036: 0.6904693519970407 cost after iteration 1037: 0.6904475110412401 cost after iteration 1038: 0.690425779083374 cost after iteration 1039: 0.6904041555781936 cost after iteration 1040: 0.6903826399831756 cost after iteration 1041: 0.6903612317585085 cost after iteration 1042: 0.6903399303670794 cost after iteration 1043: 0.6903187352744614 cost after iteration 1044: 0.6902976459488978 cost after iteration 1045: 0.6902766618612922 cost after iteration 1046: 0.6902557824851931 cost after iteration 1047: 0.6902350072967813 cost after iteration 1048: 0.6902143357748572 cost after iteration 1049: 0.6901937674008274 cost after iteration 1050: 0.6901733016586918 cost after iteration 1051: 0.6901529380350309 cost after iteration 1052: 0.690132676018994 cost after iteration 1053: 0.690112515102284 cost after iteration 1054: 0.6900924547791468 cost after iteration 1055: 0.6900724945463582 cost after iteration 1056: 0.6900526339032113 cost after iteration 1057: 0.6900328723515037 cost after iteration 1058: 0.6900132093955251 cost after iteration 1059: 0.6899936445420457 cost after iteration 1060: 0.6899741773003032 cost after iteration 1061: 0.6899548071819898 cost after iteration 1062: 0.6899355337012423 cost after iteration 1063: 0.6899163563746271 cost after iteration 1064: 0.6898972747211309 cost after iteration 1065: 0.6898782882621467 cost after iteration 1066: 0.6898593965214618 cost after iteration 1067: 0.6898405990252479 cost after iteration 1068: 0.6898218953020474 cost after iteration 1069: 0.6898032848827618 cost after iteration 1070: 0.6897847673006406 cost after iteration 1071: 0.6897663420912697 cost after iteration 1072: 0.6897480087925592 cost after iteration 1073: 0.6897297669447312 cost after iteration 1074: 0.6897116160903111 cost after iteration 1075: 0.6896935557741127 cost after iteration 1076: 0.6896755855432286 cost after iteration 1077: 0.6896577049470193 cost after iteration 1078: 0.6896399135371003 cost after iteration 1079: 0.6896222108673324 cost after iteration 1080: 0.6896045964938097 cost after iteration 1081: 0.6895870699748488 cost after iteration 1082: 0.6895696308709773 cost after iteration 1083: 0.6895522787449243 cost after iteration 1084: 0.6895350131616066 cost after iteration 1085: 0.6895178336881211 cost after iteration 1086: 0.6895007398937311 cost after iteration 1087: 0.6894837313498567 cost after iteration 1088: 0.6894668076300656 cost after iteration 1089: 0.6894499683100596 cost after iteration 1090: 0.6894332129676654 cost after iteration 1091: 0.6894165411828234 cost after iteration 1092: 0.6893999525375792 cost after iteration 1093: 0.6893834466160704 cost after iteration 1094: 0.6893670230045177 cost after iteration 1095: 0.689350681291213 cost after iteration 1096: 0.6893344210665124 cost after iteration 1097: 0.6893182419228214 cost after iteration 1098: 0.6893021434545888 cost after iteration 1099: 0.6892861252582944 cost after iteration 1100: 0.6892701869324376 cost after iteration 1101: 0.6892543280775304 cost after iteration 1102: 0.6892385482960866 cost after iteration 1103: 0.6892228471926088 cost after iteration 1104: 0.6892072243735824 cost after iteration 1105: 0.6891916794474636 cost after iteration 1106: 0.6891762120246704 cost after iteration 1107: 0.6891608217175714 cost after iteration 1108: 0.6891455081404785 cost after iteration 1109: 0.6891302709096349 cost after iteration 1110: 0.689115109643206 cost after iteration 1111: 0.6891000239612713 cost after iteration 1112: 0.6890850134858135 cost after iteration 1113: 0.689070077840708 cost after iteration 1114: 0.6890552166517162 cost after iteration 1115: 0.6890404295464727 cost after iteration 1116: 0.6890257161544798 cost after iteration 1117: 0.6890110761070954 cost after iteration 1118: 0.6889965090375239 cost after iteration 1119: 0.6889820145808081 cost after iteration 1120: 0.688967592373819 cost after iteration 1121: 0.6889532420552473 cost after iteration 1122: 0.6889389632655953 cost after iteration 1123: 0.6889247556471648 cost after iteration 1124: 0.6889106188440509 cost after iteration 1125: 0.6888965525021326 cost after iteration 1126: 0.6888825562690624 cost after iteration 1127: 0.6888686297942594 cost after iteration 1128: 0.6888547727288986 cost after iteration 1129: 0.6888409847259038 cost after iteration 1130: 0.6888272654399378 cost after iteration 1131: 0.6888136145273942 cost after iteration 1132: 0.6888000316463875 cost after iteration 1133: 0.6887865164567472 cost after iteration 1134: 0.6887730686200061 cost after iteration 1135: 0.6887596877993946 cost after iteration 1136: 0.6887463736598297 cost after iteration 1137: 0.6887331258679076 cost after iteration 1138: 0.6887199440918967 cost after iteration 1139: 0.6887068280017272 cost after iteration 1140: 0.688693777268983 cost after iteration 1141: 0.6886807915668943 cost after iteration 1142: 0.6886678705703297 cost after iteration 1143: 0.688655013955786 cost after iteration 1144: 0.6886422214013833 cost after iteration 1145: 0.6886294925868532 cost after iteration 1146: 0.6886168271935325 cost after iteration 1147: 0.6886042249043564 cost after iteration 1148: 0.6885916854038481 cost after iteration 1149: 0.6885792083781126 cost after iteration 1150: 0.6885667935148277 cost after iteration 1151: 0.6885544405032378 cost after iteration 1152: 0.6885421490341429 cost after iteration 1153: 0.6885299187998941 cost after iteration 1154: 0.6885177494943849 cost after iteration 1155: 0.6885056408130411 cost after iteration 1156: 0.6884935924528172 cost after iteration 1157: 0.6884816041121852 cost after iteration 1158: 0.6884696754911297 cost after iteration 1159: 0.6884578062911382 cost after iteration 1160: 0.6884459962151942 cost after iteration 1161: 0.688434244967771 cost after iteration 1162: 0.6884225522548221 cost after iteration 1163: 0.6884109177837754 cost after iteration 1164: 0.6883993412635255 cost after iteration 1165: 0.6883878224044246 cost after iteration 1166: 0.6883763609182794 cost after iteration 1167: 0.6883649565183394 cost after iteration 1168: 0.688353608919291 cost after iteration 1169: 0.6883423178372519 cost after iteration 1170: 0.6883310829897616 cost after iteration 1171: 0.6883199040957765 cost after iteration 1172: 0.688308780875661 cost after iteration 1173: 0.6882977130511815 cost after iteration 1174: 0.6882867003454985 cost after iteration 1175: 0.688275742483161 cost after iteration 1176: 0.6882648391900975 cost after iteration 1177: 0.6882539901936114 cost after iteration 1178: 0.6882431952223722 cost after iteration 1179: 0.6882324540064093 cost after iteration 1180: 0.688221766277107 cost after iteration 1181: 0.6882111317671931 cost after iteration 1182: 0.688200550210737 cost after iteration 1183: 0.6881900213431411 cost after iteration 1184: 0.6881795449011333 cost after iteration 1185: 0.6881691206227613 cost after iteration 1186: 0.6881587482473861 cost after iteration 1187: 0.6881484275156746 cost after iteration 1188: 0.6881381581695941 cost after iteration 1189: 0.6881279399524043 cost after iteration 1190: 0.6881177726086533 cost after iteration 1191: 0.688107655884168 cost after iteration 1192: 0.6880975895260497 cost after iteration 1193: 0.6880875732826685 cost after iteration 1194: 0.6880776069036538 cost after iteration 1195: 0.6880676901398911 cost after iteration 1196: 0.6880578227435142 cost after iteration 1197: 0.6880480044678988 cost after iteration 1198: 0.6880382350676578 cost after iteration 1199: 0.6880285142986328 cost after iteration 1200: 0.6880188419178895 cost after iteration 1201: 0.6880092176837118 cost after iteration 1202: 0.6879996413555943 cost after iteration 1203: 0.6879901126942369 cost after iteration 1204: 0.6879806314615399 cost after iteration 1205: 0.6879711974205956 cost after iteration 1206: 0.6879618103356844 cost after iteration 1207: 0.687952469972268 cost after iteration 1208: 0.6879431760969835 cost after iteration 1209: 0.6879339284776375 cost after iteration 1210: 0.6879247268832007 cost after iteration 1211: 0.6879155710838006 cost after iteration 1212: 0.687906460850717 cost after iteration 1213: 0.6878973959563778 cost after iteration 1214: 0.6878883761743488 cost after iteration 1215: 0.6878794012793323 cost after iteration 1216: 0.6878704710471584 cost after iteration 1217: 0.6878615852547819 cost after iteration 1218: 0.6878527436802742 cost after iteration 1219: 0.6878439461028198 cost after iteration 1220: 0.6878351923027091 cost after iteration 1221: 0.6878264820613336 cost after iteration 1222: 0.687817815161181 cost after iteration 1223: 0.6878091913858281 cost after iteration 1224: 0.6878006105199368 cost after iteration 1225: 0.6877920723492479 cost after iteration 1226: 0.6877835766605753 cost after iteration 1227: 0.6877751232418023 cost after iteration 1228: 0.6877667118818737 cost after iteration 1229: 0.6877583423707934 cost after iteration 1230: 0.6877500144996161 cost after iteration 1231: 0.6877417280604451 cost after iteration 1232: 0.6877334828464235 cost after iteration 1233: 0.687725278651732 cost after iteration 1234: 0.6877171152715835 cost after iteration 1235: 0.6877089925022145 cost after iteration 1236: 0.6877009101408846 cost after iteration 1237: 0.6876928679858687 cost after iteration 1238: 0.6876848658364515 cost after iteration 1239: 0.6876769034929247 cost after iteration 1240: 0.6876689807565802 cost after iteration 1241: 0.6876610974297043 cost after iteration 1242: 0.6876532533155753 cost after iteration 1243: 0.6876454482184566 cost after iteration 1244: 0.6876376819435923 cost after iteration 1245: 0.6876299542972021 cost after iteration 1246: 0.6876222650864764 cost after iteration 1247: 0.6876146141195725 cost after iteration 1248: 0.6876070012056067 cost after iteration 1249: 0.6875994261546542 cost after iteration 1250: 0.6875918887777402 cost after iteration 1251: 0.6875843888868354 cost after iteration 1252: 0.6875769262948556 cost after iteration 1253: 0.6875695008156503 cost after iteration 1254: 0.6875621122640043 cost after iteration 1255: 0.6875547604556288 cost after iteration 1256: 0.6875474452071583 cost after iteration 1257: 0.6875401663361457 cost after iteration 1258: 0.6875329236610584 cost after iteration 1259: 0.6875257170012732 cost after iteration 1260: 0.6875185461770702 cost after iteration 1261: 0.687511411009631 cost after iteration 1262: 0.687504311321033 cost after iteration 1263: 0.687497246934244 cost after iteration 1264: 0.6874902176731187 cost after iteration 1265: 0.687483223362394 cost after iteration 1266: 0.6874762638276851 cost after iteration 1267: 0.6874693388954808 cost after iteration 1268: 0.6874624483931377 cost after iteration 1269: 0.687455592148878 cost after iteration 1270: 0.6874487699917836 cost after iteration 1271: 0.6874419817517935 cost after iteration 1272: 0.6874352272596969 cost after iteration 1273: 0.6874285063471314 cost after iteration 1274: 0.6874218188465782 cost after iteration 1275: 0.6874151645913554 cost after iteration 1276: 0.6874085434156183 cost after iteration 1277: 0.687401955154351 cost after iteration 1278: 0.6873953996433645 cost after iteration 1279: 0.6873888767192918 cost after iteration 1280: 0.6873823862195854 cost after iteration 1281: 0.6873759279825084 cost after iteration 1282: 0.6873695018471372 cost after iteration 1283: 0.6873631076533524 cost after iteration 1284: 0.6873567452418361 cost after iteration 1285: 0.6873504144540691 cost after iteration 1286: 0.6873441151323255 cost after iteration 1287: 0.6873378471196686 cost after iteration 1288: 0.6873316102599478 cost after iteration 1289: 0.6873254043977948 cost after iteration 1290: 0.6873192293786183 cost after iteration 1291: 0.6873130850486019 cost after iteration 1292: 0.6873069712546986 cost after iteration 1293: 0.6873008878446275 cost after iteration 1294: 0.6872948346668708 cost after iteration 1295: 0.6872888115706683 cost after iteration 1296: 0.6872828184060159 cost after iteration 1297: 0.6872768550236591 cost after iteration 1298: 0.6872709212750909 cost after iteration 1299: 0.6872650170125483 cost after iteration 1300: 0.687259142089007 cost after iteration 1301: 0.6872532963581796 cost after iteration 1302: 0.6872474796745105 cost after iteration 1303: 0.6872416918931729 cost after iteration 1304: 0.6872359328700643 cost after iteration 1305: 0.6872302024618043 cost after iteration 1306: 0.6872245005257298 cost after iteration 1307: 0.6872188269198918 cost after iteration 1308: 0.6872131815030513 cost after iteration 1309: 0.6872075641346771 cost after iteration 1310: 0.687201974674941 cost after iteration 1311: 0.6871964129847146 cost after iteration 1312: 0.687190878925565 cost after iteration 1313: 0.6871853723597534 cost after iteration 1314: 0.6871798931502294 cost after iteration 1315: 0.6871744411606292 cost after iteration 1316: 0.6871690162552705 cost after iteration 1317: 0.6871636182991505 cost after iteration 1318: 0.6871582471579427 cost after iteration 1319: 0.6871529026979919 cost after iteration 1320: 0.6871475847863111 cost after iteration 1321: 0.6871422932905801 cost after iteration 1322: 0.68713702807914 cost after iteration 1323: 0.6871317890209913 cost after iteration 1324: 0.6871265759857893 cost after iteration 1325: 0.6871213888438418 cost after iteration 1326: 0.687116227466105 cost after iteration 1327: 0.687111091724182 cost after iteration 1328: 0.6871059814903171 cost after iteration 1329: 0.6871008966373945 cost after iteration 1330: 0.6870958370389335 cost after iteration 1331: 0.6870908025690873 cost after iteration 1332: 0.6870857931026374 cost after iteration 1333: 0.6870808085149935 cost after iteration 1334: 0.6870758486821871 cost after iteration 1335: 0.6870709134808692 cost after iteration 1336: 0.6870660027883109 cost after iteration 1337: 0.6870611164823935 cost after iteration 1338: 0.6870562544416122 cost after iteration 1339: 0.687051416545068 cost after iteration 1340: 0.6870466026724675 cost after iteration 1341: 0.6870418127041191 cost after iteration 1342: 0.6870370465209297 cost after iteration 1343: 0.6870323040044014 cost after iteration 1344: 0.6870275850366298 cost after iteration 1345: 0.6870228895002998 cost after iteration 1346: 0.6870182172786828 cost after iteration 1347: 0.6870135682556344 cost after iteration 1348: 0.6870089423155907 cost after iteration 1349: 0.6870043393435664 cost after iteration 1350: 0.6869997592251507 cost after iteration 1351: 0.6869952018465048 cost after iteration 1352: 0.6869906670943597 cost after iteration 1353: 0.6869861548560129 cost after iteration 1354: 0.6869816650193247 cost after iteration 1355: 0.6869771974727168 cost after iteration 1356: 0.6869727521051688 cost after iteration 1357: 0.6869683288062155 cost after iteration 1358: 0.686963927465943 cost after iteration 1359: 0.6869595479749889 cost after iteration 1360: 0.686955190224536 cost after iteration 1361: 0.6869508541063122 cost after iteration 1362: 0.6869465395125857 cost after iteration 1363: 0.6869422463361643 cost after iteration 1364: 0.686937974470391 cost after iteration 1365: 0.6869337238091426 cost after iteration 1366: 0.686929494246827 cost after iteration 1367: 0.6869252856783779 cost after iteration 1368: 0.6869210979992564 cost after iteration 1369: 0.6869169311054446 cost after iteration 1370: 0.6869127848934463 cost after iteration 1371: 0.6869086592602809 cost after iteration 1372: 0.6869045541034837 cost after iteration 1373: 0.6869004693211019 cost after iteration 1374: 0.6868964048116921 cost after iteration 1375: 0.686892360474318 cost after iteration 1376: 0.6868883362085486 cost after iteration 1377: 0.6868843319144537 cost after iteration 1378: 0.6868803474926032 cost after iteration 1379: 0.6868763828440637 cost after iteration 1380: 0.6868724378703968 cost after iteration 1381: 0.6868685124736549 cost after iteration 1382: 0.6868646065563817 cost after iteration 1383: 0.6868607200216064 cost after iteration 1384: 0.6868568527728435 cost after iteration 1385: 0.6868530047140895 cost after iteration 1386: 0.6868491757498205 cost after iteration 1387: 0.6868453657849901 cost after iteration 1388: 0.6868415747250276 cost after iteration 1389: 0.6868378024758329 cost after iteration 1390: 0.6868340489437784 cost after iteration 1391: 0.6868303140357029 cost after iteration 1392: 0.6868265976589115 cost after iteration 1393: 0.6868228997211715 cost after iteration 1394: 0.6868192201307118 cost after iteration 1395: 0.6868155587962191 cost after iteration 1396: 0.6868119156268376 cost after iteration 1397: 0.6868082905321644 cost after iteration 1398: 0.6868046834222483 cost after iteration 1399: 0.6868010942075876 cost after iteration 1400: 0.686797522799128 cost after iteration 1401: 0.6867939691082594 cost after iteration 1402: 0.6867904330468156 cost after iteration 1403: 0.6867869145270696 cost after iteration 1404: 0.6867834134617333 cost after iteration 1405: 0.6867799297639541 cost after iteration 1406: 0.686776463347314 cost after iteration 1407: 0.6867730141258254 cost after iteration 1408: 0.6867695820139319 cost after iteration 1409: 0.6867661669265033 cost after iteration 1410: 0.6867627687788344 cost after iteration 1411: 0.6867593874866441 cost after iteration 1412: 0.6867560229660714 cost after iteration 1413: 0.6867526751336744 cost after iteration 1414: 0.6867493439064277 cost after iteration 1415: 0.6867460292017211 cost after iteration 1416: 0.6867427309373562 cost after iteration 1417: 0.686739449031546 cost after iteration 1418: 0.6867361834029109 cost after iteration 1419: 0.6867329339704787 cost after iteration 1420: 0.6867297006536807 cost after iteration 1421: 0.6867264833723508 cost after iteration 1422: 0.6867232820467238 cost after iteration 1423: 0.6867200965974318 cost after iteration 1424: 0.6867169269455036 cost after iteration 1425: 0.6867137730123626 cost after iteration 1426: 0.6867106347198239 cost after iteration 1427: 0.6867075119900936 cost after iteration 1428: 0.6867044047457663 cost after iteration 1429: 0.6867013129098226 cost after iteration 1430: 0.6866982364056273 cost after iteration 1431: 0.6866951751569281 cost after iteration 1432: 0.6866921290878539 cost after iteration 1433: 0.6866890981229118 cost after iteration 1434: 0.6866860821869858 cost after iteration 1435: 0.6866830812053355 cost after iteration 1436: 0.6866800951035922 cost after iteration 1437: 0.6866771238077602 cost after iteration 1438: 0.6866741672442115 cost after iteration 1439: 0.6866712253396866 cost after iteration 1440: 0.6866682980212918 cost after iteration 1441: 0.6866653852164962 cost after iteration 1442: 0.6866624868531325 cost after iteration 1443: 0.6866596028593918 cost after iteration 1444: 0.6866567331638247 cost after iteration 1445: 0.6866538776953385 cost after iteration 1446: 0.6866510363831942 cost after iteration 1447: 0.6866482091570075 cost after iteration 1448: 0.6866453959467438 cost after iteration 1449: 0.686642596682719 cost after iteration 1450: 0.6866398112955961 cost after iteration 1451: 0.6866370397163847 cost after iteration 1452: 0.6866342818764383 cost after iteration 1453: 0.6866315377074524 cost after iteration 1454: 0.6866288071414648 cost after iteration 1455: 0.6866260901108506 cost after iteration 1456: 0.6866233865483243 cost after iteration 1457: 0.686620696386934 cost after iteration 1458: 0.6866180195600641 cost after iteration 1459: 0.6866153560014293 cost after iteration 1460: 0.686612705645076 cost after iteration 1461: 0.6866100684253801 cost after iteration 1462: 0.6866074442770435 cost after iteration 1463: 0.6866048331350956 cost after iteration 1464: 0.6866022349348881 cost after iteration 1465: 0.686599649612097 cost after iteration 1466: 0.6865970771027177 cost after iteration 1467: 0.6865945173430659 cost after iteration 1468: 0.6865919702697743 cost after iteration 1469: 0.686589435819792 cost after iteration 1470: 0.6865869139303825 cost after iteration 1471: 0.6865844045391226 cost after iteration 1472: 0.6865819075838996 cost after iteration 1473: 0.6865794230029116 cost after iteration 1474: 0.6865769507346642 cost after iteration 1475: 0.68657449071797 cost after iteration 1476: 0.6865720428919474 cost after iteration 1477: 0.6865696071960169 cost after iteration 1478: 0.6865671835699023 cost after iteration 1479: 0.6865647719536282 cost after iteration 1480: 0.686562372287517 cost after iteration 1481: 0.6865599845121899 cost after iteration 1482: 0.6865576085685638 cost after iteration 1483: 0.686555244397851 cost after iteration 1484: 0.6865528919415547 cost after iteration 1485: 0.6865505511414723 cost after iteration 1486: 0.6865482219396902 cost after iteration 1487: 0.6865459042785835 cost after iteration 1488: 0.6865435981008154 cost after iteration 1489: 0.6865413033493343 cost after iteration 1490: 0.6865390199673727 cost after iteration 1491: 0.6865367478984473 cost after iteration 1492: 0.6865344870863556 cost after iteration 1493: 0.6865322374751752 cost after iteration 1494: 0.6865299990092629 cost after iteration 1495: 0.6865277716332532 cost after iteration 1496: 0.6865255552920553 cost after iteration 1497: 0.6865233499308546 cost after iteration 1498: 0.6865211554951085 cost after iteration 1499: 0.6865189719305472 cost after iteration 1500: 0.6865167991831715 cost after iteration 1501: 0.6865146371992498 cost after iteration 1502: 0.6865124859253201 cost after iteration 1503: 0.6865103453081866 cost after iteration 1504: 0.6865082152949177 cost after iteration 1505: 0.6865060958328464 cost after iteration 1506: 0.686503986869568 cost after iteration 1507: 0.686501888352939 cost after iteration 1508: 0.6864998002310757 cost after iteration 1509: 0.6864977224523531 cost after iteration 1510: 0.6864956549654032 cost after iteration 1511: 0.6864935977191149 cost after iteration 1512: 0.6864915506626302 cost after iteration 1513: 0.6864895137453465 cost after iteration 1514: 0.6864874869169114 cost after iteration 1515: 0.6864854701272249 cost after iteration 1516: 0.6864834633264358 cost after iteration 1517: 0.6864814664649422 cost after iteration 1518: 0.6864794794933881 cost after iteration 1519: 0.6864775023626642 cost after iteration 1520: 0.6864755350239061 cost after iteration 1521: 0.6864735774284925 cost after iteration 1522: 0.6864716295280445 cost after iteration 1523: 0.6864696912744237 cost after iteration 1524: 0.6864677626197323 cost after iteration 1525: 0.6864658435163105 cost after iteration 1526: 0.686463933916737 cost after iteration 1527: 0.6864620337738253 cost after iteration 1528: 0.6864601430406246 cost after iteration 1529: 0.6864582616704187 cost after iteration 1530: 0.6864563896167228 cost after iteration 1531: 0.6864545268332852 cost after iteration 1532: 0.6864526732740829 cost after iteration 1533: 0.6864508288933237 cost after iteration 1534: 0.6864489936454413 cost after iteration 1535: 0.6864471674850997 cost after iteration 1536: 0.6864453503671861 cost after iteration 1537: 0.6864435422468127 cost after iteration 1538: 0.6864417430793165 cost after iteration 1539: 0.6864399528202562 cost after iteration 1540: 0.6864381714254109 cost after iteration 1541: 0.6864363988507817 cost after iteration 1542: 0.6864346350525875 cost after iteration 1543: 0.6864328799872664 cost after iteration 1544: 0.6864311336114718 cost after iteration 1545: 0.6864293958820743 cost after iteration 1546: 0.6864276667561595 cost after iteration 1547: 0.6864259461910251 cost after iteration 1548: 0.6864242341441836 cost after iteration 1549: 0.6864225305733567 cost after iteration 1550: 0.6864208354364785 cost after iteration 1551: 0.6864191486916921 cost after iteration 1552: 0.6864174702973478 cost after iteration 1553: 0.6864158002120058 cost after iteration 1554: 0.6864141383944296 cost after iteration 1555: 0.6864124848035906 cost after iteration 1556: 0.6864108393986631 cost after iteration 1557: 0.6864092021390245 cost after iteration 1558: 0.6864075729842554 cost after iteration 1559: 0.6864059518941371 cost after iteration 1560: 0.6864043388286512 cost after iteration 1561: 0.6864027337479782 cost after iteration 1562: 0.686401136612497 cost after iteration 1563: 0.6863995473827839 cost after iteration 1564: 0.6863979660196121 cost after iteration 1565: 0.6863963924839483 cost after iteration 1566: 0.6863948267369555 cost after iteration 1567: 0.6863932687399885 cost after iteration 1568: 0.6863917184545948 cost after iteration 1569: 0.6863901758425144 cost after iteration 1570: 0.6863886408656755 cost after iteration 1571: 0.6863871134861983 cost after iteration 1572: 0.6863855936663905 cost after iteration 1573: 0.6863840813687463 cost after iteration 1574: 0.6863825765559481 cost after iteration 1575: 0.6863810791908634 cost after iteration 1576: 0.6863795892365443 cost after iteration 1577: 0.6863781066562276 cost after iteration 1578: 0.6863766314133322 cost after iteration 1579: 0.6863751634714597 cost after iteration 1580: 0.6863737027943909 cost after iteration 1581: 0.6863722493460903 cost after iteration 1582: 0.6863708030906993 cost after iteration 1583: 0.6863693639925371 cost after iteration 1584: 0.6863679320161034 cost after iteration 1585: 0.6863665071260713 cost after iteration 1586: 0.6863650892872918 cost after iteration 1587: 0.6863636784647897 cost after iteration 1588: 0.6863622746237648 cost after iteration 1589: 0.6863608777295886 cost after iteration 1590: 0.6863594877478068 cost after iteration 1591: 0.686358104644134 cost after iteration 1592: 0.6863567283844584 cost after iteration 1593: 0.6863553589348353 cost after iteration 1594: 0.686353996261491 cost after iteration 1595: 0.6863526403308171 cost after iteration 1596: 0.6863512911093749 cost after iteration 1597: 0.6863499485638914 cost after iteration 1598: 0.6863486126612587 cost after iteration 1599: 0.6863472833685338 cost after iteration 1600: 0.6863459606529376 cost after iteration 1601: 0.6863446444818533 cost after iteration 1602: 0.6863433348228279 cost after iteration 1603: 0.6863420316435682 cost after iteration 1604: 0.6863407349119434 cost after iteration 1605: 0.6863394445959803 cost after iteration 1606: 0.6863381606638669 cost after iteration 1607: 0.6863368830839477 cost after iteration 1608: 0.6863356118247259 cost after iteration 1609: 0.6863343468548606 cost after iteration 1610: 0.6863330881431664 cost after iteration 1611: 0.6863318356586148 cost after iteration 1612: 0.6863305893703295 cost after iteration 1613: 0.6863293492475885 cost after iteration 1614: 0.6863281152598236 cost after iteration 1615: 0.6863268873766171 cost after iteration 1616: 0.6863256655677026 cost after iteration 1617: 0.6863244498029661 cost after iteration 1618: 0.686323240052441 cost after iteration 1619: 0.6863220362863113 cost after iteration 1620: 0.686320838474908 cost after iteration 1621: 0.6863196465887109 cost after iteration 1622: 0.686318460598346 cost after iteration 1623: 0.6863172804745851 cost after iteration 1624: 0.6863161061883456 cost after iteration 1625: 0.6863149377106893 cost after iteration 1626: 0.686313775012822 cost after iteration 1627: 0.6863126180660931 cost after iteration 1628: 0.686311466841994 cost after iteration 1629: 0.6863103213121572 cost after iteration 1630: 0.6863091814483571 cost after iteration 1631: 0.6863080472225085 cost after iteration 1632: 0.6863069186066654 cost after iteration 1633: 0.6863057955730202 cost after iteration 1634: 0.6863046780939055 cost after iteration 1635: 0.6863035661417889 cost after iteration 1636: 0.6863024596892762 cost after iteration 1637: 0.6863013587091095 cost after iteration 1638: 0.6863002631741661 cost after iteration 1639: 0.6862991730574578 cost after iteration 1640: 0.686298088332131 cost after iteration 1641: 0.6862970089714656 cost after iteration 1642: 0.686295934948874 cost after iteration 1643: 0.6862948662379007 cost after iteration 1644: 0.6862938028122222 cost after iteration 1645: 0.6862927446456448 cost after iteration 1646: 0.6862916917121067 cost after iteration 1647: 0.6862906439856736 cost after iteration 1648: 0.6862896014405417 cost after iteration 1649: 0.6862885640510344 cost after iteration 1650: 0.6862875317916033 cost after iteration 1651: 0.6862865046368269 cost after iteration 1652: 0.6862854825614092 cost after iteration 1653: 0.6862844655401812 cost after iteration 1654: 0.6862834535480982 cost after iteration 1655: 0.6862824465602407 cost after iteration 1656: 0.6862814445518111 cost after iteration 1657: 0.6862804474981371 cost after iteration 1658: 0.6862794553746683 cost after iteration 1659: 0.6862784681569759 cost after iteration 1660: 0.6862774858207528 cost after iteration 1661: 0.6862765083418135 cost after iteration 1662: 0.68627553569609 cost after iteration 1663: 0.6862745678596375 cost after iteration 1664: 0.6862736048086272 cost after iteration 1665: 0.6862726465193506 cost after iteration 1666: 0.6862716929682152 cost after iteration 1667: 0.6862707441317479 cost after iteration 1668: 0.6862697999865903 cost after iteration 1669: 0.6862688605095012 cost after iteration 1670: 0.6862679256773538 cost after iteration 1671: 0.6862669954671373 cost after iteration 1672: 0.6862660698559543 cost after iteration 1673: 0.686265148821022 cost after iteration 1674: 0.68626423233967 cost after iteration 1675: 0.6862633203893407 cost after iteration 1676: 0.6862624129475895 cost after iteration 1677: 0.6862615099920812 cost after iteration 1678: 0.6862606115005937 cost after iteration 1679: 0.6862597174510141 cost after iteration 1680: 0.6862588278213395 cost after iteration 1681: 0.6862579425896762 cost after iteration 1682: 0.6862570617342401 cost after iteration 1683: 0.6862561852333537 cost after iteration 1684: 0.6862553130654484 cost after iteration 1685: 0.6862544452090622 cost after iteration 1686: 0.6862535816428406 cost after iteration 1687: 0.6862527223455331 cost after iteration 1688: 0.6862518672959973 cost after iteration 1689: 0.686251016473194 cost after iteration 1690: 0.6862501698561888 cost after iteration 1691: 0.6862493274241516 cost after iteration 1692: 0.6862484891563555 cost after iteration 1693: 0.6862476550321769 cost after iteration 1694: 0.6862468250310942 cost after iteration 1695: 0.6862459991326876 cost after iteration 1696: 0.6862451773166388 cost after iteration 1697: 0.6862443595627307 cost after iteration 1698: 0.6862435458508462 cost after iteration 1699: 0.686242736160969 cost after iteration 1700: 0.6862419304731805 cost after iteration 1701: 0.686241128767662 cost after iteration 1702: 0.6862403310246937 cost after iteration 1703: 0.6862395372246527 cost after iteration 1704: 0.6862387473480137 cost after iteration 1705: 0.6862379613753494 cost after iteration 1706: 0.6862371792873272 cost after iteration 1707: 0.6862364010647118 cost after iteration 1708: 0.6862356266883631 cost after iteration 1709: 0.6862348561392355 cost after iteration 1710: 0.6862340893983788 cost after iteration 1711: 0.6862333264469361 cost after iteration 1712: 0.6862325672661446 cost after iteration 1713: 0.6862318118373342 cost after iteration 1714: 0.6862310601419279 cost after iteration 1715: 0.6862303121614403 cost after iteration 1716: 0.6862295678774791 cost after iteration 1717: 0.6862288272717418 cost after iteration 1718: 0.6862280903260173 cost after iteration 1719: 0.6862273570221848 cost after iteration 1720: 0.6862266273422134 cost after iteration 1721: 0.6862259012681629 cost after iteration 1722: 0.6862251787821795 cost after iteration 1723: 0.6862244598665005 cost after iteration 1724: 0.6862237445034506 cost after iteration 1725: 0.6862230326754415 cost after iteration 1726: 0.6862223243649733 cost after iteration 1727: 0.6862216195546318 cost after iteration 1728: 0.6862209182270901 cost after iteration 1729: 0.6862202203651073 cost after iteration 1730: 0.6862195259515269 cost after iteration 1731: 0.6862188349692793 cost after iteration 1732: 0.6862181474013781 cost after iteration 1733: 0.6862174632309219 cost after iteration 1734: 0.6862167824410931 cost after iteration 1735: 0.6862161050151574 cost after iteration 1736: 0.6862154309364638 cost after iteration 1737: 0.6862147601884434 cost after iteration 1738: 0.6862140927546105 cost after iteration 1739: 0.6862134286185597 cost after iteration 1740: 0.6862127677639687 cost after iteration 1741: 0.6862121101745944 cost after iteration 1742: 0.686211455834276 cost after iteration 1743: 0.686210804726932 cost after iteration 1744: 0.6862101568365602 cost after iteration 1745: 0.686209512147239 cost after iteration 1746: 0.6862088706431249 cost after iteration 1747: 0.6862082323084528 cost after iteration 1748: 0.6862075971275376 cost after iteration 1749: 0.6862069650847694 cost after iteration 1750: 0.6862063361646175 cost after iteration 1751: 0.6862057103516277 cost after iteration 1752: 0.6862050876304225 cost after iteration 1753: 0.6862044679857007 cost after iteration 1754: 0.6862038514022372 cost after iteration 1755: 0.6862032378648821 cost after iteration 1756: 0.6862026273585605 cost after iteration 1757: 0.6862020198682732 cost after iteration 1758: 0.6862014153790938 cost after iteration 1759: 0.6862008138761719 cost after iteration 1760: 0.6862002153447289 cost after iteration 1761: 0.6861996197700613 cost after iteration 1762: 0.6861990271375367 cost after iteration 1763: 0.6861984374325963 cost after iteration 1764: 0.6861978506407534 cost after iteration 1765: 0.6861972667475934 cost after iteration 1766: 0.6861966857387728 cost after iteration 1767: 0.6861961076000189 cost after iteration 1768: 0.686195532317131 cost after iteration 1769: 0.6861949598759769 cost after iteration 1770: 0.6861943902624964 cost after iteration 1771: 0.6861938234626984 cost after iteration 1772: 0.6861932594626605 cost after iteration 1773: 0.6861926982485304 cost after iteration 1774: 0.6861921398065233 cost after iteration 1775: 0.6861915841229237 cost after iteration 1776: 0.6861910311840841 cost after iteration 1777: 0.6861904809764243 cost after iteration 1778: 0.6861899334864314 cost after iteration 1779: 0.6861893887006595 cost after iteration 1780: 0.6861888466057297 cost after iteration 1781: 0.6861883071883291 cost after iteration 1782: 0.6861877704352116 cost after iteration 1783: 0.6861872363331956 cost after iteration 1784: 0.6861867048691648 cost after iteration 1785: 0.68618617603007 cost after iteration 1786: 0.6861856498029241 cost after iteration 1787: 0.6861851261748053 cost after iteration 1788: 0.686184605132857 cost after iteration 1789: 0.6861840866642852 cost after iteration 1790: 0.6861835707563593 cost after iteration 1791: 0.6861830573964114 cost after iteration 1792: 0.6861825465718386 cost after iteration 1793: 0.6861820382700976 cost after iteration 1794: 0.6861815324787095 cost after iteration 1795: 0.6861810291852556 cost after iteration 1796: 0.6861805283773804 cost after iteration 1797: 0.6861800300427878 cost after iteration 1798: 0.6861795341692444 cost after iteration 1799: 0.6861790407445766 cost after iteration 1800: 0.6861785497566709 cost after iteration 1801: 0.6861780611934746 cost after iteration 1802: 0.686177575042994 cost after iteration 1803: 0.6861770912932956 cost after iteration 1804: 0.686176609932504 cost after iteration 1805: 0.6861761309488036 cost after iteration 1806: 0.6861756543304373 cost after iteration 1807: 0.6861751800657053 cost after iteration 1808: 0.6861747081429672 cost after iteration 1809: 0.6861742385506394 cost after iteration 1810: 0.6861737712771955 cost after iteration 1811: 0.6861733063111675 cost after iteration 1812: 0.6861728436411426 cost after iteration 1813: 0.6861723832557659 cost after iteration 1814: 0.6861719251437374 cost after iteration 1815: 0.6861714692938149 cost after iteration 1816: 0.6861710156948105 cost after iteration 1817: 0.6861705643355921 cost after iteration 1818: 0.6861701152050828 cost after iteration 1819: 0.6861696682922607 cost after iteration 1820: 0.6861692235861584 cost after iteration 1821: 0.6861687810758629 cost after iteration 1822: 0.6861683407505155 cost after iteration 1823: 0.6861679025993107 cost after iteration 1824: 0.6861674666114974 cost after iteration 1825: 0.6861670327763769 cost after iteration 1826: 0.6861666010833042 cost after iteration 1827: 0.6861661715216864 cost after iteration 1828: 0.6861657440809842 cost after iteration 1829: 0.6861653187507085 cost after iteration 1830: 0.6861648955204245 cost after iteration 1831: 0.686164474379748 cost after iteration 1832: 0.6861640553183455 cost after iteration 1833: 0.6861636383259364 cost after iteration 1834: 0.6861632233922894 cost after iteration 1835: 0.6861628105072257 cost after iteration 1836: 0.6861623996606148 cost after iteration 1837: 0.6861619908423771 cost after iteration 1838: 0.6861615840424842 cost after iteration 1839: 0.6861611792509563 cost after iteration 1840: 0.686160776457863 cost after iteration 1841: 0.6861603756533238 cost after iteration 1842: 0.6861599768275055 cost after iteration 1843: 0.6861595799706258 cost after iteration 1844: 0.6861591850729494 cost after iteration 1845: 0.6861587921247898 cost after iteration 1846: 0.6861584011165085 cost after iteration 1847: 0.6861580120385138 cost after iteration 1848: 0.686157624881263 cost after iteration 1849: 0.68615723963526 cost after iteration 1850: 0.6861568562910552 cost after iteration 1851: 0.6861564748392465 cost after iteration 1852: 0.6861560952704782 cost after iteration 1853: 0.6861557175754415 cost after iteration 1854: 0.6861553417448719 cost after iteration 1855: 0.686154967769553 cost after iteration 1856: 0.6861545956403124 cost after iteration 1857: 0.6861542253480243 cost after iteration 1858: 0.6861538568836074 cost after iteration 1859: 0.686153490238026 cost after iteration 1860: 0.6861531254022875 cost after iteration 1861: 0.6861527623674463 cost after iteration 1862: 0.6861524011245994 cost after iteration 1863: 0.6861520416648886 cost after iteration 1864: 0.6861516839794987 cost after iteration 1865: 0.6861513280596595 cost after iteration 1866: 0.6861509738966433 cost after iteration 1867: 0.6861506214817655 cost after iteration 1868: 0.6861502708063851 cost after iteration 1869: 0.6861499218619035 cost after iteration 1870: 0.6861495746397654 cost after iteration 1871: 0.6861492291314567 cost after iteration 1872: 0.686148885328506 cost after iteration 1873: 0.6861485432224843 cost after iteration 1874: 0.6861482028050038 cost after iteration 1875: 0.6861478640677181 cost after iteration 1876: 0.6861475270023225 cost after iteration 1877: 0.6861471916005538 cost after iteration 1878: 0.6861468578541886 cost after iteration 1879: 0.6861465257550453 cost after iteration 1880: 0.6861461952949821 cost after iteration 1881: 0.686145866465898 cost after iteration 1882: 0.6861455392597321 cost after iteration 1883: 0.6861452136684626 cost after iteration 1884: 0.6861448896841086 cost after iteration 1885: 0.6861445672987277 cost after iteration 1886: 0.6861442465044175 cost after iteration 1887: 0.6861439272933143 cost after iteration 1888: 0.6861436096575942 cost after iteration 1889: 0.6861432935894702 cost after iteration 1890: 0.6861429790811961 cost after iteration 1891: 0.6861426661250624 cost after iteration 1892: 0.6861423547133981 cost after iteration 1893: 0.6861420448385712 cost after iteration 1894: 0.6861417364929865 cost after iteration 1895: 0.6861414296690856 cost after iteration 1896: 0.6861411243593502 cost after iteration 1897: 0.6861408205562959 cost after iteration 1898: 0.6861405182524779 cost after iteration 1899: 0.6861402174404871 cost after iteration 1900: 0.6861399181129516 cost after iteration 1901: 0.686139620262535 cost after iteration 1902: 0.6861393238819387 cost after iteration 1903: 0.6861390289638989 cost after iteration 1904: 0.6861387355011886 cost after iteration 1905: 0.6861384434866161 cost after iteration 1906: 0.6861381529130258 cost after iteration 1907: 0.6861378637732967 cost after iteration 1908: 0.6861375760603438 cost after iteration 1909: 0.6861372897671172 cost after iteration 1910: 0.6861370048866013 cost after iteration 1911: 0.6861367214118155 cost after iteration 1912: 0.6861364393358141 cost after iteration 1913: 0.686136158651685 cost after iteration 1914: 0.6861358793525508 cost after iteration 1915: 0.6861356014315684 cost after iteration 1916: 0.6861353248819287 cost after iteration 1917: 0.6861350496968547 cost after iteration 1918: 0.6861347758696054 cost after iteration 1919: 0.6861345033934707 cost after iteration 1920: 0.6861342322617758 cost after iteration 1921: 0.6861339624678778 cost after iteration 1922: 0.6861336940051664 cost after iteration 1923: 0.686133426867065 cost after iteration 1924: 0.6861331610470291 cost after iteration 1925: 0.6861328965385469 cost after iteration 1926: 0.6861326333351374 cost after iteration 1927: 0.6861323714303534 cost after iteration 1928: 0.6861321108177789 cost after iteration 1929: 0.6861318514910303 cost after iteration 1930: 0.6861315934437536 cost after iteration 1931: 0.6861313366696289 cost after iteration 1932: 0.6861310811623657 cost after iteration 1933: 0.6861308269157057 cost after iteration 1934: 0.68613057392342 cost after iteration 1935: 0.6861303221793132 cost after iteration 1936: 0.6861300716772182 cost after iteration 1937: 0.6861298224109988 cost after iteration 1938: 0.6861295743745502 cost after iteration 1939: 0.6861293275617967 cost after iteration 1940: 0.6861290819666936 cost after iteration 1941: 0.6861288375832253 cost after iteration 1942: 0.6861285944054065 cost after iteration 1943: 0.686128352427281 cost after iteration 1944: 0.6861281116429225 cost after iteration 1945: 0.6861278720464342 cost after iteration 1946: 0.6861276336319478 cost after iteration 1947: 0.6861273963936251 cost after iteration 1948: 0.6861271603256552 cost after iteration 1949: 0.6861269254222572 cost after iteration 1950: 0.6861266916776786 cost after iteration 1951: 0.6861264590861951 cost after iteration 1952: 0.6861262276421107 cost after iteration 1953: 0.6861259973397582 cost after iteration 1954: 0.686125768173497 cost after iteration 1955: 0.6861255401377166 cost after iteration 1956: 0.6861253132268321 cost after iteration 1957: 0.6861250874352876 cost after iteration 1958: 0.6861248627575536 cost after iteration 1959: 0.6861246391881293 cost after iteration 1960: 0.6861244167215398 cost after iteration 1961: 0.6861241953523382 cost after iteration 1962: 0.6861239750751041 cost after iteration 1963: 0.6861237558844441 cost after iteration 1964: 0.6861235377749916 cost after iteration 1965: 0.6861233207414059 cost after iteration 1966: 0.6861231047783739 cost after iteration 1967: 0.686122889880607 cost after iteration 1968: 0.6861226760428442 cost after iteration 1969: 0.686122463259851 cost after iteration 1970: 0.6861222515264167 cost after iteration 1971: 0.686122040837358 cost after iteration 1972: 0.6861218311875174 cost after iteration 1973: 0.6861216225717619 cost after iteration 1974: 0.6861214149849839 cost after iteration 1975: 0.6861212084221022 cost after iteration 1976: 0.6861210028780597 cost after iteration 1977: 0.6861207983478247 cost after iteration 1978: 0.6861205948263904 cost after iteration 1979: 0.6861203923087749 cost after iteration 1980: 0.6861201907900202 cost after iteration 1981: 0.6861199902651935 cost after iteration 1982: 0.6861197907293861 cost after iteration 1983: 0.6861195921777146 cost after iteration 1984: 0.686119394605318 cost after iteration 1985: 0.6861191980073603 cost after iteration 1986: 0.6861190023790298 cost after iteration 1987: 0.6861188077155378 cost after iteration 1988: 0.6861186140121197 cost after iteration 1989: 0.686118421264034 cost after iteration 1990: 0.6861182294665636 cost after iteration 1991: 0.686118038615014 cost after iteration 1992: 0.6861178487047136 cost after iteration 1993: 0.6861176597310149 cost after iteration 1994: 0.6861174716892926 cost after iteration 1995: 0.6861172845749448 cost after iteration 1996: 0.6861170983833916 cost after iteration 1997: 0.6861169131100769 cost after iteration 1998: 0.6861167287504658 cost after iteration 1999: 0.6861165453000466 cost after iteration 2000: 0.6861163627543302 . Plotting . For plotting we use the Plots package. . x = 1:2000; y = cost; gr() # backend plot(x, y, title = &quot;Cost v/s iteration(Training)&quot;, label=&quot;negative log-likelihood&quot;, lw=3) xlabel!(&quot;iteration&quot;) ylabel!(&quot;cost&quot;) . function predict(w, b, X) &quot;&quot;&quot; Predict whether the label is 0 or 1 using learned logistic regression parameters (w, b) Arguments: w -- weights, a numpy array of size (num_px * num_px * 3, 1) b -- bias, a scalar X -- data of size (num_px * num_px * 3, number of examples) Returns: Y_prediction -- a numpy array (vector) containing all predictions (0/1) for the examples in X &quot;&quot;&quot; m = size(X, 1) Y_pred = zeros(1, m) X = reshape(X, (size(X, 2), size(X, 1))) A = œÉ.(w&#39;X .+ b) for i=1:size(A, 2) if(A[i] &gt; 0.5) Y_pred[i] = 1 else Y_pred[i] = 0 end end @assert(size(Y_pred) == (1, m)) Y_pred end . predict (generic function with 1 method) . X_test, y_test = data_test[:, 1:4], data_test[:, 5]; . preds = predict(w, b, X_test) . 1√ó412 Array{Float64,2}: 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ‚Ä¶ 0.0 0.0 0.0 0.0 0.0 0.0 0.0 . y_test = reshape(y_test, (1, 412)) . 1√ó412 Array{Float64,2}: 1.0 1.0 1.0 1.0 0.0 0.0 1.0 1.0 ‚Ä¶ 0.0 0.0 1.0 0.0 1.0 1.0 1.0 . cnt = 0 for i=1:size(y_test, 2) if(y_test[i] == preds[i]) cnt += 1 end end . acc = (cnt/size(y_test, 2)) * 100; . println(&quot;Accuracy: $acc&quot;) . Accuracy: 54.61165048543689 . Epilouge . You can see accuracy is really just 55% which is what to say ü§£ü§£, but then I have not done any preprocessing except normalization &amp; then there are also things we can do to optimize, like handling class-imbalance etc. . The goal was to implement Logistic regression with back-prop from scratch which I did. Hope you will take something from it. . Github repo for notebook: Julia_ML . As always, thank you for reading üòäüòÉ! .",
            "url": "abhishekswain.me/machine%20learning/maths/2020/07/28/Logistic_regression.html",
            "relUrl": "/machine%20learning/maths/2020/07/28/Logistic_regression.html",
            "date": " ‚Ä¢ Jul 28, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Statistics and Linear Algebra for ML/DL",
            "content": "Hey there! üëãüòÉ . Today, I am gonna talk about something I have been meaning to do for the longest amout of time. I am now many months into my ML journey, so I have now quite a bit of experience. So, I have a basic understanding of the ML/DL algos but it always feels like I lack in explaining why something works over the others. This is where the mathematical part comes in. Having a sound understanding of the statistical methods is necessary when the explainability comes in. Inorder to do that I have decided to start a Probability &amp; Statistics and Linear Algebra series. This way I would not only be able to learn both but also share with the community which gave me so much. Also, it‚Äôs a part of the ‚ÄúFeynmann technique‚Äù which I am so fond of. . Probability &amp; Statistics . Books: . Business statistics for contemporary decision making | Mathematical Statistics with applications | All of statistics | . Video lectures: . Harvard Stats 110 | Professor Leonard‚Äôs lectures | Larry Wasserman‚Äôs lectures | . Linear Algebra . Books: . Introduction to Linear Algebra (Gilbert Strang) | . Video lectures: . Gilbert Strang lectures | . Applied resources . My favorite: An Introduction to Statistical Learning: With Applications in R | Practical Statistics for Data Scientists: 50+ Essential Concepts Using R and Python | Think Stats(Learn stats using Python) | Introduction to Linear Algebra for Applied Machine Learning with Python | Peter Norvig‚Äôs: A Concrete Introduction to Probability (using Python) | . As I read the material and understand a concept I will write an article about it. It will be two parellel series one for each. If you want to follow it then all of it will be posted on my Medium. I will see you there! . As always, thank you for reading üòäüòÉ! . Update(21/07/2020) . I need to strike a balance between theory and application. I actually read few chapters of the book but found that I am more into the code-first approach to learning. So, there‚Äôs a slight modification to my plan. For linear algebra, I am using Computational linear algebra by Rachel Thomas. I have just begun and I already like it. I will use it parellely with Glibert Strang‚Äôs linear algebra course. . For proabability &amp; stats: Think Stats + any theory course mentioned. .",
            "url": "abhishekswain.me/machine%20learning/maths/books/2020/07/19/statsandlinalg.html",
            "relUrl": "/machine%20learning/maths/books/2020/07/19/statsandlinalg.html",
            "date": " ‚Ä¢ Jul 19, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Introduction to Machine Learning course (Refreshing the maths)",
            "content": "Hey there! üëãüòÉ . Today I want to talk about revisiting Machine learning especailly with a focus on underlying mathematics. Well let me tell you, I have just found the perfect course for it. It‚Äôs the Introduction to Machine Learning course. It‚Äôs taught by Prof Balaraman Ravindran. He is someone from whom I have really learnt a lot. And infact the course is by IIT Madras, it‚Äôs pretty close to my heart because my introduction to machine learning class almost a year ago was by IIT Madras, not this one but this one ü§ó. I always recommend it to people. Something I‚Äôm really in love with these days is fastai ü§óü§ó. I am really in love with Jeremy‚Äôs top-down method of teaching. The best thing abouut fastai is you build the whole of PyTorch from ground up. It just doesn‚Äôt teach you Deep Learning, but also makes you a better Python programmer. I recommend it to everyone. Fastai also has ML and Computational linear algebra courses. I haven‚Äôt gone through them but I bet they are as awesome as the Deep learning one. . Anyways, I have enrolled myself into the NPTEL ML course, so that it can be a refresher. I have my semesters coming up and it starts from the day my sems begin that is 20 &amp; also the whole TCS onboarding to follow but, come on when did we go by the convention? Ofcourse amid all the chaos I am gonna try, that‚Äôs how we roll. Let‚Äôs see how it turns out! As always anything and evrything I do I will update it here. Also, I was really confused about what to put on Medium and what here?. Needed to draw a line. I have decided that all tutorials, build &amp; learning journeys go there. Everything except that goes here! Let the sems just get over &amp; the fun will begin. . I want to explore so many things and learn so much. Nothing makes me happier than sharing it with the community that I learnt from. ü§ó And teaching is the best way I have found to effectively learn things. . As always, thank you for reading üòäüòÉ! . (UPDATE 19/07/2020) . . The course was supposed to start from tomorrow but it has got rescheduled to semptember 14. Damn! that is 2 months away. So, need a change of plans. Actually, I had another plan in my mind for the whole maths refresher and getting to know the nitty gritty. The next post will be all about it. . As always, thank you for reading üòäüòÉ! .",
            "url": "abhishekswain.me/machine%20learning/2020/07/14/nptelML.html",
            "relUrl": "/machine%20learning/2020/07/14/nptelML.html",
            "date": " ‚Ä¢ Jul 14, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Rust v/s C++ for Deep learning",
            "content": "Hey there! üëã Today, let‚Äôs discuss about Rust v/s C++. Actually, it‚Äôs not ‚ÄúRust v/s C++‚Äù as in comparison of the languages, but I just want a language for understanding the underpinnings of deep learning algorithms. I want to build them from scratch or atleast try, so that I have a better understanding. One of my favorite physicists, Richard Feynman said something I resonate with a lot: . ‚ÄúWhat I cannot create, I do not understand.‚Äù . So, my search for a language begun. Let me tell you this, I really love Python. It‚Äôs one language I really am very comfortable with and Python was what I used to get into data science (not that there were many others). Python was simple and easy. However, I wanted to do some low level programming. Enter C++. C was my first language way back in school, then C++ &amp; Java. However, it has been years since I actually did something worthwhile with them. I did use Java in my undergrad but it wasn‚Äôt as much. Then came Python which I learned as I wanted to get into DS, ML. And I fell in love!. After working with python for many months, one day I discovered that Python is not what is used in deployment! I was like what? really? So, then what? . I found C++ was what most production systems used. In my CS undergrad we had a subject called Systems programming in which we wrote assembly code on IBM 360. I really liked it, it was a pain in the ass to do things as simple as addition, substraction but it really made me understand how the code gets compiled and the internals of it. This started a love with low level programming, I always wanted to do build things from scratch but never got around to do it. It is something I wish I had done! I guess I never thought I could actually do it. But, life is too short for it. Now is the time I finally think of doing it. . Okay, all that aside, I now have narrowed down my choices to Rust &amp; C++. There are other like Swift and Julia. Maybe Julia is more suited to this. But as I said I want to do it with a low level programming language. It would be shit-hard, but I want to challenge myself and if I can do atleast half of it, this would increase my confidence ten-fold. Sundar Pichai in one of his interview said, . ‚ÄúTry solving the hardest problem first, if you can then the easier ones will follow‚Äù. . I did extensive research and found: If I use C++, there‚Äôs a job market out there where I can transfer my C++ skills. On the other hand Rust is a pretty young language. But the thing is I gravitate more to Rust &amp; the heart wants what it wants. Naturally, I went through all the blogs and reddit. There were two groups of people. The first kind termed rust as a revolution, as something they called a memory safe language and gave C++ a lot of flak. The second ones said it‚Äôs never gonna replace C &amp; C++ anytime soon, pretty correct actually since a lot of code bases is all C &amp; C++. But, code safety with what I was able to understand is basically just bad code. Rust provides a stricter compliler check like you can‚Äôt simple pass values around. So what do I do? . I will take my chance &amp; go with Rust ‚ù§ . As always, thank you for reading üòäüòÉ! . (UPDATE) . Wasn‚Äôt as simple as I thought üòÖ . This is an update on the Rust v/s C++ post. It‚Äôs been hours I have been hacking through, reading everything I can find about Rust in ML/DL. It won‚Äôt be hard to say that most of them are abandoned. Some are still on but it seems like, there‚Äôs no way they are comaprable to C++ alternatives. Without much of a community around, it‚Äôs been pretty hard to get through anything or maybe I haven‚Äôt searched enough. I also had a discussion with my friends who are into ML &amp; they suggested me to go for C++. Let‚Äôs come to what are the current examples in Rust. The best one I found was huggingface tokenizers. There were also crates like tch-rs which provide Rust bindings for C++ torch api. . So, what is the state of rust in ML/DL? It‚Äôs progressing slowly and steadily, but way further from maturity. It‚Äôs very young and I guess someday we will be able to use Rust for ML/DL, but as of now I think am going to give it a pass. I know it feels like giving up, trust me even I felt so, but the fact is I will be working a full time job as a SDE at TCS soon. With a full time job, I need to be more cautious with how I use my time or spend my energies. While it‚Äôs a lovely idea to explore my fantasies but I guess I should be productive at the same time. Also, I will be working with java alot at TCS so that would be like one more langugae added to the mix. In the end, there‚Äôs no effective learning. Lately, by thinking through things I have learnt that I tend to go for new things and fancy stuff. But actually that‚Äôs not what‚Äôs important. Whatever you do, you need rock solid fundamentals. Tooling is trivial as long as you really know what you‚Äôre doing. So, I will be giving Rust a pass for now. But definitely one day I will come back to visit rust once again. Till then rather than learning a new language, I will stick what I have atleast some experience with, .i.e. Python, C++ or Java . As always, thank you for reading üòäüòÉ! .",
            "url": "abhishekswain.me/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp.html",
            "relUrl": "/deep%20learning/machine%20learning/programming%20language/2020/07/12/rust-vs-cpp.html",
            "date": " ‚Ä¢ Jul 12, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Importance of a proper posture",
            "content": "Today I want to talk about something I had a really bad time with. You must have already guessed from the title, I am going to talk to you about why it‚Äôs important to maintain a good posture while doing whatever is that you do, but I will talk to you mostly from programmer point of view. . If you are like me who loves to learn stuff on your own all the time, especailly things like coding, &amp; mostly CS related stuff you must be spending a lot of time infront of you laptop or PC. Now and then I have seen I struggle a lot with a lot of neck pain. So, finally I decided to do a little bit of research. I found out that if my laptop was on level with my eyes or a little above, then I could easily sit for a long time. On the other hand if it was below my eye level and I tried to hunch over and do stuff 7 out of 10 times I would have a stiff neck. And as I am writing this, I do have stiffness in my neck. It‚Äôs very painful. And I don‚Äôt want anyone else to suffer from this. So, let me tell you what I have been doing, it‚Äôs not much but I hope it will be of some use: . Watch this amazing video by a physiotherapist: | It did me a world of good especially the last exercise. . Apply pain relieving spray or apply balm, I applied omnigel | There are also really good articles explaining why it happens and how you can remedy it. Like this one: Neck Pain: Possible Causes and How to Treat It &amp; The Importance of Posture. . I would also like to tell you what one of my favorite school principals sister Innocentia told me, ‚ÄúNever take a chance with your health, if you‚Äôre healthy then things can be done at a later time. But if you cripple yourself today maybe you won‚Äôt be able to do it ever again‚Äù. . Thank you for reading ! .",
            "url": "abhishekswain.me/health/lifestyle/2020/07/10/importance-of-posture.html",
            "relUrl": "/health/lifestyle/2020/07/10/importance-of-posture.html",
            "date": " ‚Ä¢ Jul 10, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "questus ordo in rebus",
            "content": "This is my first post here and I wanted it to be something I have wanted to do for the longest time. questus ordo in rebus is latin for getting things in order. I was very naive to think that it was pretty simple to do and maybe it is for many people but guess I belong to the latter category where you gotta struggle to do it. Well the bottom line is, I want to get things in order. It‚Äôs not like I have not tried to do it before but there was just so much happening around me, I mean from classes, seminar, minor project to placements, major presentation etc that I couldn‚Äôt pause to think about where I am in life and what I want to do moving forward. So, this lockdown period for me was like brakes applied to a car moving at a great speed, it‚Äôs kind of pretty sudden and shakes you up but if you think about it maybe it was required?. I think that was the worst analogy I could come up with, but I really am not very good with words. Basically, this lockdown got me pausing and thinking. I wont lie, it was rather frustrating in the beginning because I was used to go walking, running &amp; stuff I did because I wanted to be a ‚Äúfit üí™ guy‚Äù but now that it has been quite sometime I feel it has done me a lot of good. Like I said maybe the brakes were required?. So, let‚Äôs begin ! . I feel like things I have learnt I know them pretty well but they seem to be in scatters. Well, not anymore, that ends today. Something which I love to do is read &amp; read a lot. My school notebooks had this thing writetn on the back cover: . ‚ÄúReading maketh a full man.‚Äù . I used to think it was someone in my school who wrote it, but it actually is a quote by Francis Bacon. It resonates with me alot. Reading actually fills your mind with a variety, so the next time you think about anything you look at it from a lot perspectives. And that is where we are going to start today. I have a lot of machine learning, deep learning, statistics, data science books, now this is very cool actually but it also is very overwhelming. Like I get really confused as to where to start. I want to read everything and I try to do it all at once and I end up not reading anything. After screwing up numerous times I have a plan of what I want to do. I have decided I will read one applied book along with a more theoretical book. . The options: . Applied machine learning &amp; deep learning: Approaching almost any machine learning problem | Hands-on machine learning with scikit-learn &amp; tensorflow | Python machine learning by sebestian raschka | Programming collective intelligence | . | Theoretical books: PRML | BRML | ESLR | ISLR(has code examples in R) | Professor Michael I. Jordan‚Äôs reading list | &amp; list continues‚Ä¶‚Ä¶‚Ä¶‚Ä¶.. | . | . So, what are my choices? . After a lot of research I have decided to go for Hands-on ML &amp; for theory I chose ESLR. I will give my best to it and try and keep posting here about my progress. . Wait a minute! Aren‚Äôt we missing something? The younger me would have stopped right here but, I now am a little sensible and I realise no amount of book reading will do me any good if I don‚Äôt code and build things up. Enter Kaggle. Besides reading stuff I will try and spend my time implementing things in kaggle! Let‚Äôs see how it goes! See ya. . PS: I have another dream of building a deep learning library using rust, I really wanna learn about it. That‚Äôs for another post ! . Thank you for reading ! .",
            "url": "abhishekswain.me/roadmap/books/2020/07/09/roadmap.html",
            "relUrl": "/roadmap/books/2020/07/09/roadmap.html",
            "date": " ‚Ä¢ Jul 9, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": ". Hello! I am Abhishek, and this is my blog. Everything I have ever known about the world around me is by listening to life with all my attention. This blog is like an extension of me. I welcome you all to ‚ÄúListening to Life‚Äù . I also post on medium . You can reach me on: linkedin . If you want to have a look at my CV: My CV .",
          "url": "abhishekswain.me/aboutme/",
          "relUrl": "/aboutme/",
          "date": ""
      }
      
  

  

  
      ,"page3": {
          "title": "Projects",
          "content": "MyVision: Customizability meets abstraction . This is my Computer Vision toolkit. It‚Äôs a wrapper over PyTorch combining things I like from different libraries like fastai, keras etc. . Leaf disease detection using image segmentation . This is my final year project about detecting plant leaf disease and segmenting the diseased part. However, there‚Äôs a catch in my project, I have done it without the use of any cnn for segmentation. Instead, it uses a cascade of classifiers to do the detection and segmentation. . CheXNet: Radiologist-Level Pneumonia Detection using deep learning . This project is an implementation of the paper I worked on. CheXNet detects 14 different pathologies from chest X-rays. It uses a Densenet-121 for detection. .",
          "url": "abhishekswain.me/projects/",
          "relUrl": "/projects/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ ‚Äúsitemap.xml‚Äù | absolute_url }} | .",
          "url": "abhishekswain.me/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}